{
  "version": 3,
  "sources": ["../../../packages/directives/click-outside/index.ts", "../../../packages/directives/repeat-click/index.ts", "../../../packages/directives/trap-focus/index.ts", "../../../packages/directives/mousewheel/index.ts", "../../element-plus/lib/directives/index.js", "dep:element-plus_lib_directives_index"],
  "sourcesContent": ["import { isClient } from '@vueuse/core'\nimport { isElement } from '@element-plus/utils'\n\nimport type {\n  ComponentPublicInstance,\n  DirectiveBinding,\n  ObjectDirective,\n} from 'vue'\n\ntype DocumentHandler = <T extends MouseEvent>(mouseup: T, mousedown: T) => void\ntype FlushList = Map<\n  HTMLElement,\n  {\n    documentHandler: DocumentHandler\n    bindingFn: (...args: unknown[]) => unknown\n  }[]\n>\n\nconst nodeList: FlushList = new Map()\n\nlet startClick: MouseEvent\n\nif (isClient) {\n  document.addEventListener('mousedown', (e: MouseEvent) => (startClick = e))\n  document.addEventListener('mouseup', (e: MouseEvent) => {\n    for (const handlers of nodeList.values()) {\n      for (const { documentHandler } of handlers) {\n        documentHandler(e as MouseEvent, startClick)\n      }\n    }\n  })\n}\n\nfunction createDocumentHandler(\n  el: HTMLElement,\n  binding: DirectiveBinding\n): DocumentHandler {\n  let excludes: HTMLElement[] = []\n  if (Array.isArray(binding.arg)) {\n    excludes = binding.arg\n  } else if (isElement(binding.arg)) {\n    // due to current implementation on binding type is wrong the type casting is necessary here\n    excludes.push(binding.arg as unknown as HTMLElement)\n  }\n  return function (mouseup, mousedown) {\n    const popperRef = (\n      binding.instance as ComponentPublicInstance<{\n        popperRef: HTMLElement\n      }>\n    ).popperRef\n    const mouseUpTarget = mouseup.target as Node\n    const mouseDownTarget = mousedown?.target as Node\n    const isBound = !binding || !binding.instance\n    const isTargetExists = !mouseUpTarget || !mouseDownTarget\n    const isContainedByEl =\n      el.contains(mouseUpTarget) || el.contains(mouseDownTarget)\n    const isSelf = el === mouseUpTarget\n\n    const isTargetExcluded =\n      (excludes.length &&\n        excludes.some((item) => item?.contains(mouseUpTarget))) ||\n      (excludes.length && excludes.includes(mouseDownTarget as HTMLElement))\n    const isContainedByPopper =\n      popperRef &&\n      (popperRef.contains(mouseUpTarget) || popperRef.contains(mouseDownTarget))\n    if (\n      isBound ||\n      isTargetExists ||\n      isContainedByEl ||\n      isSelf ||\n      isTargetExcluded ||\n      isContainedByPopper\n    ) {\n      return\n    }\n    binding.value(mouseup, mousedown)\n  }\n}\n\nconst ClickOutside: ObjectDirective = {\n  beforeMount(el: HTMLElement, binding: DirectiveBinding) {\n    // there could be multiple handlers on the element\n    if (!nodeList.has(el)) {\n      nodeList.set(el, [])\n    }\n\n    nodeList.get(el)!.push({\n      documentHandler: createDocumentHandler(el, binding),\n      bindingFn: binding.value,\n    })\n  },\n  updated(el: HTMLElement, binding: DirectiveBinding) {\n    if (!nodeList.has(el)) {\n      nodeList.set(el, [])\n    }\n\n    const handlers = nodeList.get(el)!\n    const oldHandlerIndex = handlers.findIndex(\n      (item) => item.bindingFn === binding.oldValue\n    )\n    const newHandler = {\n      documentHandler: createDocumentHandler(el, binding),\n      bindingFn: binding.value,\n    }\n\n    if (oldHandlerIndex >= 0) {\n      // replace the old handler to the new handler\n      handlers.splice(oldHandlerIndex, 1, newHandler)\n    } else {\n      handlers.push(newHandler)\n    }\n  },\n  unmounted(el: HTMLElement) {\n    // remove all listeners when a component unmounted\n    nodeList.delete(el)\n  },\n}\n\nexport default ClickOutside\n", "import type { DirectiveBinding, ObjectDirective } from 'vue'\n\nexport const REPEAT_INTERVAL = 100\nexport const REPEAT_DELAY = 600\n\nconst RepeatClick: ObjectDirective = {\n  beforeMount(el: HTMLElement, binding: DirectiveBinding) {\n    let interval: ReturnType<typeof setInterval> | null = null\n    let delay: ReturnType<typeof setTimeout> | null = null\n\n    const handler = () => binding.value && binding.value()\n\n    const clear = () => {\n      if (delay) {\n        clearTimeout(delay)\n        delay = null\n      }\n      if (interval) {\n        clearInterval(interval)\n        interval = null\n      }\n    }\n\n    el.addEventListener('mousedown', (e: MouseEvent) => {\n      if (e.button !== 0) return\n      handler()\n\n      document.addEventListener('mouseup', clear, { once: true })\n      clear()\n      delay = setTimeout(() => {\n        interval = setInterval(() => {\n          handler()\n        }, REPEAT_INTERVAL)\n      }, REPEAT_DELAY)\n    })\n  },\n}\n\nexport default RepeatClick\n", "import { nextTick } from 'vue'\nimport { obtainAllFocusableElements } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport type { ObjectDirective } from 'vue'\n\nexport const FOCUSABLE_CHILDREN = '_trap-focus-children'\nexport const TRAP_FOCUS_HANDLER = '_trap-focus-handler'\n\nexport interface TrapFocusElement extends HTMLElement {\n  [FOCUSABLE_CHILDREN]: HTMLElement[]\n  [TRAP_FOCUS_HANDLER]: (e: KeyboardEvent) => void\n}\n\nconst FOCUS_STACK: TrapFocusElement[] = []\n\nconst FOCUS_HANDLER = (e: KeyboardEvent) => {\n  // Getting the top layer.\n  if (FOCUS_STACK.length === 0) return\n  const focusableElement =\n    FOCUS_STACK[FOCUS_STACK.length - 1][FOCUSABLE_CHILDREN]\n  if (focusableElement.length > 0 && e.code === EVENT_CODE.tab) {\n    if (focusableElement.length === 1) {\n      e.preventDefault()\n      if (document.activeElement !== focusableElement[0]) {\n        focusableElement[0].focus()\n      }\n      return\n    }\n    const goingBackward = e.shiftKey\n    const isFirst = e.target === focusableElement[0]\n    const isLast = e.target === focusableElement[focusableElement.length - 1]\n    if (isFirst && goingBackward) {\n      e.preventDefault()\n      focusableElement[focusableElement.length - 1].focus()\n    }\n    if (isLast && !goingBackward) {\n      e.preventDefault()\n      focusableElement[0].focus()\n    }\n\n    // the is critical since jsdom did not implement user actions, you can only mock it\n    // DELETE ME: when testing env switches to puppeteer\n    if (process.env.NODE_ENV === 'test') {\n      const index = focusableElement.indexOf(e.target as HTMLElement)\n      if (index !== -1) {\n        focusableElement[goingBackward ? index - 1 : index + 1]?.focus()\n      }\n    }\n  }\n}\n\nconst TrapFocus: ObjectDirective = {\n  beforeMount(el: TrapFocusElement) {\n    el[FOCUSABLE_CHILDREN] = obtainAllFocusableElements(el)\n    FOCUS_STACK.push(el)\n    if (FOCUS_STACK.length <= 1) {\n      document.addEventListener('keydown', FOCUS_HANDLER)\n    }\n  },\n  updated(el: TrapFocusElement) {\n    nextTick(() => {\n      el[FOCUSABLE_CHILDREN] = obtainAllFocusableElements(el)\n    })\n  },\n  unmounted() {\n    FOCUS_STACK.shift()\n    if (FOCUS_STACK.length === 0) {\n      document.removeEventListener('keydown', FOCUS_HANDLER)\n    }\n  },\n}\n\nexport default TrapFocus\n", "import normalizeWheel from 'normalize-wheel-es'\n\nimport type { DirectiveBinding, ObjectDirective } from 'vue'\nimport type { NormalizedWheelEvent } from 'normalize-wheel-es'\n\nconst mousewheel = function (\n  element: HTMLElement,\n  callback: (e: WheelEvent, normalized: NormalizedWheelEvent) => void\n) {\n  if (element && element.addEventListener) {\n    const fn = function (this: HTMLElement, event: WheelEvent) {\n      const normalized = normalizeWheel(event)\n      callback && Reflect.apply(callback, this, [event, normalized])\n    }\n    element.addEventListener('wheel', fn, { passive: true })\n  }\n}\n\nconst Mousewheel: ObjectDirective = {\n  beforeMount(el: HTMLElement, binding: DirectiveBinding) {\n    mousewheel(el, binding.value)\n  },\n}\n\nexport default Mousewheel\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index = require('./click-outside/index.js');\nvar index$1 = require('./repeat-click/index.js');\nvar index$2 = require('./trap-focus/index.js');\nvar index$3 = require('./mousewheel/index.js');\n\n\n\nexports.ClickOutside = index[\"default\"];\nexports.RepeatClick = index$1[\"default\"];\nexports.TrapFocus = index$2[\"default\"];\nexports.Mousewheel = index$3[\"default\"];\n//# sourceMappingURL=index.js.map\n", "export default require(\"./node_modules/element-plus/lib/directives/index.js\");"],
  "mappings": "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",
  "names": ["isClient", "isElement", "EVENT_CODE", "obtainAllFocusableElements", "nextTick", "normalizeWheel"]
}
