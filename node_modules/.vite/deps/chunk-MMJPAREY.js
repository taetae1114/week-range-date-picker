import {
  EMPTY_OBJ,
  NO,
  NOOP,
  PatchFlagNames,
  camelize,
  capitalize,
  extend,
  generateCodeFrame,
  hyphenate,
  init_runtime_dom_esm_bundler,
  init_shared_esm_bundler,
  isArray,
  isBuiltInDirective,
  isHTMLTag,
  isObject,
  isOn,
  isReservedProp,
  isSVGTag,
  isString,
  isSymbol,
  isVoidTag,
  makeMap,
  parseStringStyle,
  runtime_dom_esm_bundler_exports,
  shared_esm_bundler_exports,
  slotFlagsText,
  toHandlerKey
} from "./chunk-PARLYUU7.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS
} from "./chunk-S5KM4IGW.js";

// node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js
function defaultOnError(error) {
  throw error;
}
function defaultOnWarn(msg) {
  console.warn(`[Vue warn] ${msg.message}`);
}
function createCompilerError(code, loc, messages, additionalMessage) {
  const msg = true ? (messages || errorMessages)[code] + (additionalMessage || ``) : code;
  const error = new SyntaxError(String(msg));
  error.code = code;
  error.loc = loc;
  return error;
}
function registerRuntimeHelpers(helpers) {
  Object.getOwnPropertySymbols(helpers).forEach((s) => {
    helperNameMap[s] = helpers[s];
  });
}
function createRoot(children, loc = locStub) {
  return {
    type: 0,
    children,
    helpers: [],
    components: [],
    directives: [],
    hoists: [],
    imports: [],
    cached: 0,
    temps: 0,
    codegenNode: void 0,
    loc
  };
}
function createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent2 = false, loc = locStub) {
  if (context) {
    if (isBlock) {
      context.helper(OPEN_BLOCK);
      context.helper(getVNodeBlockHelper(context.inSSR, isComponent2));
    } else {
      context.helper(getVNodeHelper(context.inSSR, isComponent2));
    }
    if (directives) {
      context.helper(WITH_DIRECTIVES);
    }
  }
  return {
    type: 13,
    tag,
    props,
    children,
    patchFlag,
    dynamicProps,
    directives,
    isBlock,
    disableTracking,
    isComponent: isComponent2,
    loc
  };
}
function createArrayExpression(elements, loc = locStub) {
  return {
    type: 17,
    loc,
    elements
  };
}
function createObjectExpression(properties, loc = locStub) {
  return {
    type: 15,
    loc,
    properties
  };
}
function createObjectProperty(key, value) {
  return {
    type: 16,
    loc: locStub,
    key: isString(key) ? createSimpleExpression(key, true) : key,
    value
  };
}
function createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {
  return {
    type: 4,
    loc,
    content,
    isStatic,
    constType: isStatic ? 3 : constType
  };
}
function createInterpolation(content, loc) {
  return {
    type: 5,
    loc,
    content: isString(content) ? createSimpleExpression(content, false, loc) : content
  };
}
function createCompoundExpression(children, loc = locStub) {
  return {
    type: 8,
    loc,
    children
  };
}
function createCallExpression(callee, args = [], loc = locStub) {
  return {
    type: 14,
    loc,
    callee,
    arguments: args
  };
}
function createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {
  return {
    type: 18,
    params,
    returns,
    newline,
    isSlot,
    loc
  };
}
function createConditionalExpression(test, consequent, alternate, newline = true) {
  return {
    type: 19,
    test,
    consequent,
    alternate,
    newline,
    loc: locStub
  };
}
function createCacheExpression(index, value, isVNode = false) {
  return {
    type: 20,
    index,
    value,
    isVNode,
    loc: locStub
  };
}
function createBlockStatement(body) {
  return {
    type: 21,
    body,
    loc: locStub
  };
}
function createTemplateLiteral(elements) {
  return {
    type: 22,
    elements,
    loc: locStub
  };
}
function createIfStatement(test, consequent, alternate) {
  return {
    type: 23,
    test,
    consequent,
    alternate,
    loc: locStub
  };
}
function createAssignmentExpression(left, right) {
  return {
    type: 24,
    left,
    right,
    loc: locStub
  };
}
function createSequenceExpression(expressions) {
  return {
    type: 25,
    expressions,
    loc: locStub
  };
}
function createReturnStatement(returns) {
  return {
    type: 26,
    returns,
    loc: locStub
  };
}
function isCoreComponent(tag) {
  if (isBuiltInType(tag, "Teleport")) {
    return TELEPORT;
  } else if (isBuiltInType(tag, "Suspense")) {
    return SUSPENSE;
  } else if (isBuiltInType(tag, "KeepAlive")) {
    return KEEP_ALIVE;
  } else if (isBuiltInType(tag, "BaseTransition")) {
    return BASE_TRANSITION;
  }
}
function getInnerRange(loc, offset, length) {
  const source = loc.source.slice(offset, offset + length);
  const newLoc = {
    source,
    start: advancePositionWithClone(loc.start, loc.source, offset),
    end: loc.end
  };
  if (length != null) {
    newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);
  }
  return newLoc;
}
function advancePositionWithClone(pos, source, numberOfCharacters = source.length) {
  return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);
}
function advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {
  let linesCount = 0;
  let lastNewLinePos = -1;
  for (let i = 0; i < numberOfCharacters; i++) {
    if (source.charCodeAt(i) === 10) {
      linesCount++;
      lastNewLinePos = i;
    }
  }
  pos.offset += numberOfCharacters;
  pos.line += linesCount;
  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;
  return pos;
}
function assert(condition, msg) {
  if (!condition) {
    throw new Error(msg || `unexpected compiler condition`);
  }
}
function findDir(node, name, allowEmpty = false) {
  for (let i = 0; i < node.props.length; i++) {
    const p = node.props[i];
    if (p.type === 7 && (allowEmpty || p.exp) && (isString(name) ? p.name === name : name.test(p.name))) {
      return p;
    }
  }
}
function findProp(node, name, dynamicOnly = false, allowEmpty = false) {
  for (let i = 0; i < node.props.length; i++) {
    const p = node.props[i];
    if (p.type === 6) {
      if (dynamicOnly)
        continue;
      if (p.name === name && (p.value || allowEmpty)) {
        return p;
      }
    } else if (p.name === "bind" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {
      return p;
    }
  }
}
function isStaticArgOf(arg, name) {
  return !!(arg && isStaticExp(arg) && arg.content === name);
}
function hasDynamicKeyVBind(node) {
  return node.props.some(
    (p) => p.type === 7 && p.name === "bind" && (!p.arg || p.arg.type !== 4 || !p.arg.isStatic)
  );
}
function isText(node) {
  return node.type === 5 || node.type === 2;
}
function isVSlot(p) {
  return p.type === 7 && p.name === "slot";
}
function isTemplateNode(node) {
  return node.type === 1 && node.tagType === 3;
}
function isSlotOutlet(node) {
  return node.type === 1 && node.tagType === 2;
}
function getVNodeHelper(ssr, isComponent2) {
  return ssr || isComponent2 ? CREATE_VNODE : CREATE_ELEMENT_VNODE;
}
function getVNodeBlockHelper(ssr, isComponent2) {
  return ssr || isComponent2 ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;
}
function getUnnormalizedProps(props, callPath = []) {
  if (props && !isString(props) && props.type === 14) {
    const callee = props.callee;
    if (!isString(callee) && propsHelperSet.has(callee)) {
      return getUnnormalizedProps(props.arguments[0], callPath.concat(props));
    }
  }
  return [props, callPath];
}
function injectProp(node, prop, context) {
  let propsWithInjection;
  let props = node.type === 13 ? node.props : node.arguments[2];
  let callPath = [];
  let parentCall;
  if (props && !isString(props) && props.type === 14) {
    const ret = getUnnormalizedProps(props);
    props = ret[0];
    callPath = ret[1];
    parentCall = callPath[callPath.length - 1];
  }
  if (props == null || isString(props)) {
    propsWithInjection = createObjectExpression([prop]);
  } else if (props.type === 14) {
    const first = props.arguments[0];
    if (!isString(first) && first.type === 15) {
      first.properties.unshift(prop);
    } else {
      if (props.callee === TO_HANDLERS) {
        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [
          createObjectExpression([prop]),
          props
        ]);
      } else {
        props.arguments.unshift(createObjectExpression([prop]));
      }
    }
    !propsWithInjection && (propsWithInjection = props);
  } else if (props.type === 15) {
    let alreadyExists = false;
    if (prop.key.type === 4) {
      const propKeyName = prop.key.content;
      alreadyExists = props.properties.some((p) => p.key.type === 4 && p.key.content === propKeyName);
    }
    if (!alreadyExists) {
      props.properties.unshift(prop);
    }
    propsWithInjection = props;
  } else {
    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [
      createObjectExpression([prop]),
      props
    ]);
    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {
      parentCall = callPath[callPath.length - 2];
    }
  }
  if (node.type === 13) {
    if (parentCall) {
      parentCall.arguments[0] = propsWithInjection;
    } else {
      node.props = propsWithInjection;
    }
  } else {
    if (parentCall) {
      parentCall.arguments[0] = propsWithInjection;
    } else {
      node.arguments[2] = propsWithInjection;
    }
  }
}
function toValidAssetId(name, type) {
  return `_${type}_${name.replace(/[^\w]/g, (searchValue, replaceValue) => {
    return searchValue === "-" ? "_" : name.charCodeAt(replaceValue).toString();
  })}`;
}
function hasScopeRef(node, ids) {
  if (!node || Object.keys(ids).length === 0) {
    return false;
  }
  switch (node.type) {
    case 1:
      for (let i = 0; i < node.props.length; i++) {
        const p = node.props[i];
        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {
          return true;
        }
      }
      return node.children.some((c) => hasScopeRef(c, ids));
    case 11:
      if (hasScopeRef(node.source, ids)) {
        return true;
      }
      return node.children.some((c) => hasScopeRef(c, ids));
    case 9:
      return node.branches.some((b) => hasScopeRef(b, ids));
    case 10:
      if (hasScopeRef(node.condition, ids)) {
        return true;
      }
      return node.children.some((c) => hasScopeRef(c, ids));
    case 4:
      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];
    case 8:
      return node.children.some((c) => isObject(c) && hasScopeRef(c, ids));
    case 5:
    case 12:
      return hasScopeRef(node.content, ids);
    case 2:
    case 3:
      return false;
    default:
      if (true)
        ;
      return false;
  }
}
function getMemoedVNodeCall(node) {
  if (node.type === 14 && node.callee === WITH_MEMO) {
    return node.arguments[1].returns;
  } else {
    return node;
  }
}
function makeBlock(node, { helper, removeHelper, inSSR }) {
  if (!node.isBlock) {
    node.isBlock = true;
    removeHelper(getVNodeHelper(inSSR, node.isComponent));
    helper(OPEN_BLOCK);
    helper(getVNodeBlockHelper(inSSR, node.isComponent));
  }
}
function getCompatValue(key, context) {
  const config = context.options ? context.options.compatConfig : context.compatConfig;
  const value = config && config[key];
  if (key === "MODE") {
    return value || 3;
  } else {
    return value;
  }
}
function isCompatEnabled(key, context) {
  const mode = getCompatValue("MODE", context);
  const value = getCompatValue(key, context);
  return mode === 3 ? value === true : value !== false;
}
function checkCompatEnabled(key, context, loc, ...args) {
  const enabled = isCompatEnabled(key, context);
  if (enabled) {
    warnDeprecation(key, context, loc, ...args);
  }
  return enabled;
}
function warnDeprecation(key, context, loc, ...args) {
  const val = getCompatValue(key, context);
  if (val === "suppress-warning") {
    return;
  }
  const { message, link } = deprecationData[key];
  const msg = `(deprecation ${key}) ${typeof message === "function" ? message(...args) : message}${link ? `
  Details: ${link}` : ``}`;
  const err = new SyntaxError(msg);
  err.code = key;
  if (loc)
    err.loc = loc;
  context.onWarn(err);
}
function baseParse(content, options = {}) {
  const context = createParserContext(content, options);
  const start = getCursor(context);
  return createRoot(parseChildren(context, 0, []), getSelection(context, start));
}
function createParserContext(content, rawOptions) {
  const options = extend({}, defaultParserOptions);
  let key;
  for (key in rawOptions) {
    options[key] = rawOptions[key] === void 0 ? defaultParserOptions[key] : rawOptions[key];
  }
  return {
    options,
    column: 1,
    line: 1,
    offset: 0,
    originalSource: content,
    source: content,
    inPre: false,
    inVPre: false,
    onWarn: options.onWarn
  };
}
function parseChildren(context, mode, ancestors) {
  const parent = last(ancestors);
  const ns = parent ? parent.ns : 0;
  const nodes = [];
  while (!isEnd(context, mode, ancestors)) {
    const s = context.source;
    let node = void 0;
    if (mode === 0 || mode === 1) {
      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {
        node = parseInterpolation(context, mode);
      } else if (mode === 0 && s[0] === "<") {
        if (s.length === 1) {
          emitError(context, 5, 1);
        } else if (s[1] === "!") {
          if (startsWith(s, "<!--")) {
            node = parseComment(context);
          } else if (startsWith(s, "<!DOCTYPE")) {
            node = parseBogusComment(context);
          } else if (startsWith(s, "<![CDATA[")) {
            if (ns !== 0) {
              node = parseCDATA(context, ancestors);
            } else {
              emitError(context, 1);
              node = parseBogusComment(context);
            }
          } else {
            emitError(context, 11);
            node = parseBogusComment(context);
          }
        } else if (s[1] === "/") {
          if (s.length === 2) {
            emitError(context, 5, 2);
          } else if (s[2] === ">") {
            emitError(context, 14, 2);
            advanceBy(context, 3);
            continue;
          } else if (/[a-z]/i.test(s[2])) {
            emitError(context, 23);
            parseTag(context, 1, parent);
            continue;
          } else {
            emitError(context, 12, 2);
            node = parseBogusComment(context);
          }
        } else if (/[a-z]/i.test(s[1])) {
          node = parseElement(context, ancestors);
          if (isCompatEnabled("COMPILER_NATIVE_TEMPLATE", context) && node && node.tag === "template" && !node.props.some((p) => p.type === 7 && isSpecialTemplateDirective(p.name))) {
            warnDeprecation("COMPILER_NATIVE_TEMPLATE", context, node.loc);
            node = node.children;
          }
        } else if (s[1] === "?") {
          emitError(context, 21, 1);
          node = parseBogusComment(context);
        } else {
          emitError(context, 12, 1);
        }
      }
    }
    if (!node) {
      node = parseText(context, mode);
    }
    if (isArray(node)) {
      for (let i = 0; i < node.length; i++) {
        pushNode(nodes, node[i]);
      }
    } else {
      pushNode(nodes, node);
    }
  }
  let removedWhitespace = false;
  if (mode !== 2 && mode !== 1) {
    const shouldCondense = context.options.whitespace !== "preserve";
    for (let i = 0; i < nodes.length; i++) {
      const node = nodes[i];
      if (node.type === 2) {
        if (!context.inPre) {
          if (!/[^\t\r\n\f ]/.test(node.content)) {
            const prev = nodes[i - 1];
            const next = nodes[i + 1];
            if (!prev || !next || shouldCondense && (prev.type === 3 || next.type === 3 || prev.type === 1 && next.type === 1 && /[\r\n]/.test(node.content))) {
              removedWhitespace = true;
              nodes[i] = null;
            } else {
              node.content = " ";
            }
          } else if (shouldCondense) {
            node.content = node.content.replace(/[\t\r\n\f ]+/g, " ");
          }
        } else {
          node.content = node.content.replace(/\r\n/g, "\n");
        }
      } else if (node.type === 3 && !context.options.comments) {
        removedWhitespace = true;
        nodes[i] = null;
      }
    }
    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {
      const first = nodes[0];
      if (first && first.type === 2) {
        first.content = first.content.replace(/^\r?\n/, "");
      }
    }
  }
  return removedWhitespace ? nodes.filter(Boolean) : nodes;
}
function pushNode(nodes, node) {
  if (node.type === 2) {
    const prev = last(nodes);
    if (prev && prev.type === 2 && prev.loc.end.offset === node.loc.start.offset) {
      prev.content += node.content;
      prev.loc.end = node.loc.end;
      prev.loc.source += node.loc.source;
      return;
    }
  }
  nodes.push(node);
}
function parseCDATA(context, ancestors) {
  advanceBy(context, 9);
  const nodes = parseChildren(context, 3, ancestors);
  if (context.source.length === 0) {
    emitError(context, 6);
  } else {
    advanceBy(context, 3);
  }
  return nodes;
}
function parseComment(context) {
  const start = getCursor(context);
  let content;
  const match = /--(\!)?>/.exec(context.source);
  if (!match) {
    content = context.source.slice(4);
    advanceBy(context, context.source.length);
    emitError(context, 7);
  } else {
    if (match.index <= 3) {
      emitError(context, 0);
    }
    if (match[1]) {
      emitError(context, 10);
    }
    content = context.source.slice(4, match.index);
    const s = context.source.slice(0, match.index);
    let prevIndex = 1, nestedIndex = 0;
    while ((nestedIndex = s.indexOf("<!--", prevIndex)) !== -1) {
      advanceBy(context, nestedIndex - prevIndex + 1);
      if (nestedIndex + 4 < s.length) {
        emitError(context, 16);
      }
      prevIndex = nestedIndex + 1;
    }
    advanceBy(context, match.index + match[0].length - prevIndex + 1);
  }
  return {
    type: 3,
    content,
    loc: getSelection(context, start)
  };
}
function parseBogusComment(context) {
  const start = getCursor(context);
  const contentStart = context.source[1] === "?" ? 1 : 2;
  let content;
  const closeIndex = context.source.indexOf(">");
  if (closeIndex === -1) {
    content = context.source.slice(contentStart);
    advanceBy(context, context.source.length);
  } else {
    content = context.source.slice(contentStart, closeIndex);
    advanceBy(context, closeIndex + 1);
  }
  return {
    type: 3,
    content,
    loc: getSelection(context, start)
  };
}
function parseElement(context, ancestors) {
  const wasInPre = context.inPre;
  const wasInVPre = context.inVPre;
  const parent = last(ancestors);
  const element = parseTag(context, 0, parent);
  const isPreBoundary = context.inPre && !wasInPre;
  const isVPreBoundary = context.inVPre && !wasInVPre;
  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {
    if (isPreBoundary) {
      context.inPre = false;
    }
    if (isVPreBoundary) {
      context.inVPre = false;
    }
    return element;
  }
  ancestors.push(element);
  const mode = context.options.getTextMode(element, parent);
  const children = parseChildren(context, mode, ancestors);
  ancestors.pop();
  {
    const inlineTemplateProp = element.props.find((p) => p.type === 6 && p.name === "inline-template");
    if (inlineTemplateProp && checkCompatEnabled("COMPILER_INLINE_TEMPLATE", context, inlineTemplateProp.loc)) {
      const loc = getSelection(context, element.loc.end);
      inlineTemplateProp.value = {
        type: 2,
        content: loc.source,
        loc
      };
    }
  }
  element.children = children;
  if (startsWithEndTagOpen(context.source, element.tag)) {
    parseTag(context, 1, parent);
  } else {
    emitError(context, 24, 0, element.loc.start);
    if (context.source.length === 0 && element.tag.toLowerCase() === "script") {
      const first = children[0];
      if (first && startsWith(first.loc.source, "<!--")) {
        emitError(context, 8);
      }
    }
  }
  element.loc = getSelection(context, element.loc.start);
  if (isPreBoundary) {
    context.inPre = false;
  }
  if (isVPreBoundary) {
    context.inVPre = false;
  }
  return element;
}
function parseTag(context, type, parent) {
  const start = getCursor(context);
  const match = /^<\/?([a-z][^\t\r\n\f />]*)/i.exec(context.source);
  const tag = match[1];
  const ns = context.options.getNamespace(tag, parent);
  advanceBy(context, match[0].length);
  advanceSpaces(context);
  const cursor = getCursor(context);
  const currentSource = context.source;
  if (context.options.isPreTag(tag)) {
    context.inPre = true;
  }
  let props = parseAttributes(context, type);
  if (type === 0 && !context.inVPre && props.some((p) => p.type === 7 && p.name === "pre")) {
    context.inVPre = true;
    extend(context, cursor);
    context.source = currentSource;
    props = parseAttributes(context, type).filter((p) => p.name !== "v-pre");
  }
  let isSelfClosing = false;
  if (context.source.length === 0) {
    emitError(context, 9);
  } else {
    isSelfClosing = startsWith(context.source, "/>");
    if (type === 1 && isSelfClosing) {
      emitError(context, 4);
    }
    advanceBy(context, isSelfClosing ? 2 : 1);
  }
  if (type === 1) {
    return;
  }
  if (isCompatEnabled("COMPILER_V_IF_V_FOR_PRECEDENCE", context)) {
    let hasIf = false;
    let hasFor = false;
    for (let i = 0; i < props.length; i++) {
      const p = props[i];
      if (p.type === 7) {
        if (p.name === "if") {
          hasIf = true;
        } else if (p.name === "for") {
          hasFor = true;
        }
      }
      if (hasIf && hasFor) {
        warnDeprecation("COMPILER_V_IF_V_FOR_PRECEDENCE", context, getSelection(context, start));
        break;
      }
    }
  }
  let tagType = 0;
  if (!context.inVPre) {
    if (tag === "slot") {
      tagType = 2;
    } else if (tag === "template") {
      if (props.some((p) => p.type === 7 && isSpecialTemplateDirective(p.name))) {
        tagType = 3;
      }
    } else if (isComponent(tag, props, context)) {
      tagType = 1;
    }
  }
  return {
    type: 1,
    ns,
    tag,
    tagType,
    props,
    isSelfClosing,
    children: [],
    loc: getSelection(context, start),
    codegenNode: void 0
  };
}
function isComponent(tag, props, context) {
  const options = context.options;
  if (options.isCustomElement(tag)) {
    return false;
  }
  if (tag === "component" || /^[A-Z]/.test(tag) || isCoreComponent(tag) || options.isBuiltInComponent && options.isBuiltInComponent(tag) || options.isNativeTag && !options.isNativeTag(tag)) {
    return true;
  }
  for (let i = 0; i < props.length; i++) {
    const p = props[i];
    if (p.type === 6) {
      if (p.name === "is" && p.value) {
        if (p.value.content.startsWith("vue:")) {
          return true;
        } else if (checkCompatEnabled("COMPILER_IS_ON_ELEMENT", context, p.loc)) {
          return true;
        }
      }
    } else {
      if (p.name === "is") {
        return true;
      } else if (p.name === "bind" && isStaticArgOf(p.arg, "is") && true && checkCompatEnabled("COMPILER_IS_ON_ELEMENT", context, p.loc)) {
        return true;
      }
    }
  }
}
function parseAttributes(context, type) {
  const props = [];
  const attributeNames = /* @__PURE__ */ new Set();
  while (context.source.length > 0 && !startsWith(context.source, ">") && !startsWith(context.source, "/>")) {
    if (startsWith(context.source, "/")) {
      emitError(context, 22);
      advanceBy(context, 1);
      advanceSpaces(context);
      continue;
    }
    if (type === 1) {
      emitError(context, 3);
    }
    const attr = parseAttribute(context, attributeNames);
    if (attr.type === 6 && attr.value && attr.name === "class") {
      attr.value.content = attr.value.content.replace(/\s+/g, " ").trim();
    }
    if (type === 0) {
      props.push(attr);
    }
    if (/^[^\t\r\n\f />]/.test(context.source)) {
      emitError(context, 15);
    }
    advanceSpaces(context);
  }
  return props;
}
function parseAttribute(context, nameSet) {
  const start = getCursor(context);
  const match = /^[^\t\r\n\f />][^\t\r\n\f />=]*/.exec(context.source);
  const name = match[0];
  if (nameSet.has(name)) {
    emitError(context, 2);
  }
  nameSet.add(name);
  if (name[0] === "=") {
    emitError(context, 19);
  }
  {
    const pattern = /["'<]/g;
    let m;
    while (m = pattern.exec(name)) {
      emitError(context, 17, m.index);
    }
  }
  advanceBy(context, name.length);
  let value = void 0;
  if (/^[\t\r\n\f ]*=/.test(context.source)) {
    advanceSpaces(context);
    advanceBy(context, 1);
    advanceSpaces(context);
    value = parseAttributeValue(context);
    if (!value) {
      emitError(context, 13);
    }
  }
  const loc = getSelection(context, start);
  if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\.|@|#)/.test(name)) {
    const match2 = /(?:^v-([a-z0-9-]+))?(?:(?::|^\.|^@|^#)(\[[^\]]+\]|[^\.]+))?(.+)?$/i.exec(name);
    let isPropShorthand = startsWith(name, ".");
    let dirName = match2[1] || (isPropShorthand || startsWith(name, ":") ? "bind" : startsWith(name, "@") ? "on" : "slot");
    let arg;
    if (match2[2]) {
      const isSlot = dirName === "slot";
      const startOffset = name.lastIndexOf(match2[2]);
      const loc2 = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match2[2].length + (isSlot && match2[3] || "").length));
      let content = match2[2];
      let isStatic = true;
      if (content.startsWith("[")) {
        isStatic = false;
        if (!content.endsWith("]")) {
          emitError(context, 27);
          content = content.slice(1);
        } else {
          content = content.slice(1, content.length - 1);
        }
      } else if (isSlot) {
        content += match2[3] || "";
      }
      arg = {
        type: 4,
        content,
        isStatic,
        constType: isStatic ? 3 : 0,
        loc: loc2
      };
    }
    if (value && value.isQuoted) {
      const valueLoc = value.loc;
      valueLoc.start.offset++;
      valueLoc.start.column++;
      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);
      valueLoc.source = valueLoc.source.slice(1, -1);
    }
    const modifiers = match2[3] ? match2[3].slice(1).split(".") : [];
    if (isPropShorthand)
      modifiers.push("prop");
    if (dirName === "bind" && arg) {
      if (modifiers.includes("sync") && checkCompatEnabled("COMPILER_V_BIND_SYNC", context, loc, arg.loc.source)) {
        dirName = "model";
        modifiers.splice(modifiers.indexOf("sync"), 1);
      }
      if (modifiers.includes("prop")) {
        checkCompatEnabled("COMPILER_V_BIND_PROP", context, loc);
      }
    }
    return {
      type: 7,
      name: dirName,
      exp: value && {
        type: 4,
        content: value.content,
        isStatic: false,
        constType: 0,
        loc: value.loc
      },
      arg,
      modifiers,
      loc
    };
  }
  if (!context.inVPre && startsWith(name, "v-")) {
    emitError(context, 26);
  }
  return {
    type: 6,
    name,
    value: value && {
      type: 2,
      content: value.content,
      loc: value.loc
    },
    loc
  };
}
function parseAttributeValue(context) {
  const start = getCursor(context);
  let content;
  const quote = context.source[0];
  const isQuoted = quote === `"` || quote === `'`;
  if (isQuoted) {
    advanceBy(context, 1);
    const endIndex = context.source.indexOf(quote);
    if (endIndex === -1) {
      content = parseTextData(context, context.source.length, 4);
    } else {
      content = parseTextData(context, endIndex, 4);
      advanceBy(context, 1);
    }
  } else {
    const match = /^[^\t\r\n\f >]+/.exec(context.source);
    if (!match) {
      return void 0;
    }
    const unexpectedChars = /["'<=`]/g;
    let m;
    while (m = unexpectedChars.exec(match[0])) {
      emitError(context, 18, m.index);
    }
    content = parseTextData(context, match[0].length, 4);
  }
  return { content, isQuoted, loc: getSelection(context, start) };
}
function parseInterpolation(context, mode) {
  const [open, close] = context.options.delimiters;
  const closeIndex = context.source.indexOf(close, open.length);
  if (closeIndex === -1) {
    emitError(context, 25);
    return void 0;
  }
  const start = getCursor(context);
  advanceBy(context, open.length);
  const innerStart = getCursor(context);
  const innerEnd = getCursor(context);
  const rawContentLength = closeIndex - open.length;
  const rawContent = context.source.slice(0, rawContentLength);
  const preTrimContent = parseTextData(context, rawContentLength, mode);
  const content = preTrimContent.trim();
  const startOffset = preTrimContent.indexOf(content);
  if (startOffset > 0) {
    advancePositionWithMutation(innerStart, rawContent, startOffset);
  }
  const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);
  advancePositionWithMutation(innerEnd, rawContent, endOffset);
  advanceBy(context, close.length);
  return {
    type: 5,
    content: {
      type: 4,
      isStatic: false,
      constType: 0,
      content,
      loc: getSelection(context, innerStart, innerEnd)
    },
    loc: getSelection(context, start)
  };
}
function parseText(context, mode) {
  const endTokens = mode === 3 ? ["]]>"] : ["<", context.options.delimiters[0]];
  let endIndex = context.source.length;
  for (let i = 0; i < endTokens.length; i++) {
    const index = context.source.indexOf(endTokens[i], 1);
    if (index !== -1 && endIndex > index) {
      endIndex = index;
    }
  }
  const start = getCursor(context);
  const content = parseTextData(context, endIndex, mode);
  return {
    type: 2,
    content,
    loc: getSelection(context, start)
  };
}
function parseTextData(context, length, mode) {
  const rawText = context.source.slice(0, length);
  advanceBy(context, length);
  if (mode === 2 || mode === 3 || !rawText.includes("&")) {
    return rawText;
  } else {
    return context.options.decodeEntities(rawText, mode === 4);
  }
}
function getCursor(context) {
  const { column, line, offset } = context;
  return { column, line, offset };
}
function getSelection(context, start, end) {
  end = end || getCursor(context);
  return {
    start,
    end,
    source: context.originalSource.slice(start.offset, end.offset)
  };
}
function last(xs) {
  return xs[xs.length - 1];
}
function startsWith(source, searchString) {
  return source.startsWith(searchString);
}
function advanceBy(context, numberOfCharacters) {
  const { source } = context;
  advancePositionWithMutation(context, source, numberOfCharacters);
  context.source = source.slice(numberOfCharacters);
}
function advanceSpaces(context) {
  const match = /^[\t\r\n\f ]+/.exec(context.source);
  if (match) {
    advanceBy(context, match[0].length);
  }
}
function getNewPosition(context, start, numberOfCharacters) {
  return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);
}
function emitError(context, code, offset, loc = getCursor(context)) {
  if (offset) {
    loc.offset += offset;
    loc.column += offset;
  }
  context.options.onError(createCompilerError(code, {
    start: loc,
    end: loc,
    source: ""
  }));
}
function isEnd(context, mode, ancestors) {
  const s = context.source;
  switch (mode) {
    case 0:
      if (startsWith(s, "</")) {
        for (let i = ancestors.length - 1; i >= 0; --i) {
          if (startsWithEndTagOpen(s, ancestors[i].tag)) {
            return true;
          }
        }
      }
      break;
    case 1:
    case 2: {
      const parent = last(ancestors);
      if (parent && startsWithEndTagOpen(s, parent.tag)) {
        return true;
      }
      break;
    }
    case 3:
      if (startsWith(s, "]]>")) {
        return true;
      }
      break;
  }
  return !s;
}
function startsWithEndTagOpen(source, tag) {
  return startsWith(source, "</") && source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() && /[\t\r\n\f />]/.test(source[2 + tag.length] || ">");
}
function hoistStatic(root, context) {
  walk(
    root,
    context,
    isSingleElementRoot(root, root.children[0])
  );
}
function isSingleElementRoot(root, child) {
  const { children } = root;
  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);
}
function walk(node, context, doNotHoistNode = false) {
  const { children } = node;
  const originalCount = children.length;
  let hoistedCount = 0;
  for (let i = 0; i < children.length; i++) {
    const child = children[i];
    if (child.type === 1 && child.tagType === 0) {
      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);
      if (constantType > 0) {
        if (constantType >= 2) {
          child.codegenNode.patchFlag = -1 + (true ? ` /* HOISTED */` : ``);
          child.codegenNode = context.hoist(child.codegenNode);
          hoistedCount++;
          continue;
        }
      } else {
        const codegenNode = child.codegenNode;
        if (codegenNode.type === 13) {
          const flag = getPatchFlag(codegenNode);
          if ((!flag || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {
            const props = getNodeProps(child);
            if (props) {
              codegenNode.props = context.hoist(props);
            }
          }
          if (codegenNode.dynamicProps) {
            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);
          }
        }
      }
    }
    if (child.type === 1) {
      const isComponent2 = child.tagType === 1;
      if (isComponent2) {
        context.scopes.vSlot++;
      }
      walk(child, context);
      if (isComponent2) {
        context.scopes.vSlot--;
      }
    } else if (child.type === 11) {
      walk(child, context, child.children.length === 1);
    } else if (child.type === 9) {
      for (let i2 = 0; i2 < child.branches.length; i2++) {
        walk(child.branches[i2], context, child.branches[i2].children.length === 1);
      }
    }
  }
  if (hoistedCount && context.transformHoist) {
    context.transformHoist(children, context, node);
  }
  if (hoistedCount && hoistedCount === originalCount && node.type === 1 && node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && isArray(node.codegenNode.children)) {
    node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));
  }
}
function getConstantType(node, context) {
  const { constantCache } = context;
  switch (node.type) {
    case 1:
      if (node.tagType !== 0) {
        return 0;
      }
      const cached = constantCache.get(node);
      if (cached !== void 0) {
        return cached;
      }
      const codegenNode = node.codegenNode;
      if (codegenNode.type !== 13) {
        return 0;
      }
      if (codegenNode.isBlock && node.tag !== "svg" && node.tag !== "foreignObject") {
        return 0;
      }
      const flag = getPatchFlag(codegenNode);
      if (!flag) {
        let returnType2 = 3;
        const generatedPropsType = getGeneratedPropsConstantType(node, context);
        if (generatedPropsType === 0) {
          constantCache.set(node, 0);
          return 0;
        }
        if (generatedPropsType < returnType2) {
          returnType2 = generatedPropsType;
        }
        for (let i = 0; i < node.children.length; i++) {
          const childType = getConstantType(node.children[i], context);
          if (childType === 0) {
            constantCache.set(node, 0);
            return 0;
          }
          if (childType < returnType2) {
            returnType2 = childType;
          }
        }
        if (returnType2 > 1) {
          for (let i = 0; i < node.props.length; i++) {
            const p = node.props[i];
            if (p.type === 7 && p.name === "bind" && p.exp) {
              const expType = getConstantType(p.exp, context);
              if (expType === 0) {
                constantCache.set(node, 0);
                return 0;
              }
              if (expType < returnType2) {
                returnType2 = expType;
              }
            }
          }
        }
        if (codegenNode.isBlock) {
          for (let i = 0; i < node.props.length; i++) {
            const p = node.props[i];
            if (p.type === 7) {
              constantCache.set(node, 0);
              return 0;
            }
          }
          context.removeHelper(OPEN_BLOCK);
          context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));
          codegenNode.isBlock = false;
          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));
        }
        constantCache.set(node, returnType2);
        return returnType2;
      } else {
        constantCache.set(node, 0);
        return 0;
      }
    case 2:
    case 3:
      return 3;
    case 9:
    case 11:
    case 10:
      return 0;
    case 5:
    case 12:
      return getConstantType(node.content, context);
    case 4:
      return node.constType;
    case 8:
      let returnType = 3;
      for (let i = 0; i < node.children.length; i++) {
        const child = node.children[i];
        if (isString(child) || isSymbol(child)) {
          continue;
        }
        const childType = getConstantType(child, context);
        if (childType === 0) {
          return 0;
        } else if (childType < returnType) {
          returnType = childType;
        }
      }
      return returnType;
    default:
      if (true)
        ;
      return 0;
  }
}
function getConstantTypeOfHelperCall(value, context) {
  if (value.type === 14 && !isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {
    const arg = value.arguments[0];
    if (arg.type === 4) {
      return getConstantType(arg, context);
    } else if (arg.type === 14) {
      return getConstantTypeOfHelperCall(arg, context);
    }
  }
  return 0;
}
function getGeneratedPropsConstantType(node, context) {
  let returnType = 3;
  const props = getNodeProps(node);
  if (props && props.type === 15) {
    const { properties } = props;
    for (let i = 0; i < properties.length; i++) {
      const { key, value } = properties[i];
      const keyType = getConstantType(key, context);
      if (keyType === 0) {
        return keyType;
      }
      if (keyType < returnType) {
        returnType = keyType;
      }
      let valueType;
      if (value.type === 4) {
        valueType = getConstantType(value, context);
      } else if (value.type === 14) {
        valueType = getConstantTypeOfHelperCall(value, context);
      } else {
        valueType = 0;
      }
      if (valueType === 0) {
        return valueType;
      }
      if (valueType < returnType) {
        returnType = valueType;
      }
    }
  }
  return returnType;
}
function getNodeProps(node) {
  const codegenNode = node.codegenNode;
  if (codegenNode.type === 13) {
    return codegenNode.props;
  }
}
function getPatchFlag(node) {
  const flag = node.patchFlag;
  return flag ? parseInt(flag, 10) : void 0;
}
function createTransformContext(root, { filename = "", prefixIdentifiers = false, hoistStatic: hoistStatic2 = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {
  const nameMatch = filename.replace(/\?.*$/, "").match(/([^/\\]+)\.\w+$/);
  const context = {
    selfName: nameMatch && capitalize(camelize(nameMatch[1])),
    prefixIdentifiers,
    hoistStatic: hoistStatic2,
    cacheHandlers,
    nodeTransforms,
    directiveTransforms,
    transformHoist,
    isBuiltInComponent,
    isCustomElement,
    expressionPlugins,
    scopeId,
    slotted,
    ssr,
    inSSR,
    ssrCssVars,
    bindingMetadata,
    inline,
    isTS,
    onError,
    onWarn,
    compatConfig,
    root,
    helpers: /* @__PURE__ */ new Map(),
    components: /* @__PURE__ */ new Set(),
    directives: /* @__PURE__ */ new Set(),
    hoists: [],
    imports: [],
    constantCache: /* @__PURE__ */ new Map(),
    temps: 0,
    cached: 0,
    identifiers: /* @__PURE__ */ Object.create(null),
    scopes: {
      vFor: 0,
      vSlot: 0,
      vPre: 0,
      vOnce: 0
    },
    parent: null,
    currentNode: root,
    childIndex: 0,
    inVOnce: false,
    helper(name) {
      const count = context.helpers.get(name) || 0;
      context.helpers.set(name, count + 1);
      return name;
    },
    removeHelper(name) {
      const count = context.helpers.get(name);
      if (count) {
        const currentCount = count - 1;
        if (!currentCount) {
          context.helpers.delete(name);
        } else {
          context.helpers.set(name, currentCount);
        }
      }
    },
    helperString(name) {
      return `_${helperNameMap[context.helper(name)]}`;
    },
    replaceNode(node) {
      if (true) {
        if (!context.currentNode) {
          throw new Error(`Node being replaced is already removed.`);
        }
        if (!context.parent) {
          throw new Error(`Cannot replace root node.`);
        }
      }
      context.parent.children[context.childIndex] = context.currentNode = node;
    },
    removeNode(node) {
      if (!context.parent) {
        throw new Error(`Cannot remove root node.`);
      }
      const list = context.parent.children;
      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;
      if (removalIndex < 0) {
        throw new Error(`node being removed is not a child of current parent`);
      }
      if (!node || node === context.currentNode) {
        context.currentNode = null;
        context.onNodeRemoved();
      } else {
        if (context.childIndex > removalIndex) {
          context.childIndex--;
          context.onNodeRemoved();
        }
      }
      context.parent.children.splice(removalIndex, 1);
    },
    onNodeRemoved: () => {
    },
    addIdentifiers(exp) {
    },
    removeIdentifiers(exp) {
    },
    hoist(exp) {
      if (isString(exp))
        exp = createSimpleExpression(exp);
      context.hoists.push(exp);
      const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2);
      identifier.hoisted = exp;
      return identifier;
    },
    cache(exp, isVNode = false) {
      return createCacheExpression(context.cached++, exp, isVNode);
    }
  };
  {
    context.filters = /* @__PURE__ */ new Set();
  }
  return context;
}
function transform(root, options) {
  const context = createTransformContext(root, options);
  traverseNode(root, context);
  if (options.hoistStatic) {
    hoistStatic(root, context);
  }
  if (!options.ssr) {
    createRootCodegen(root, context);
  }
  root.helpers = [...context.helpers.keys()];
  root.components = [...context.components];
  root.directives = [...context.directives];
  root.imports = context.imports;
  root.hoists = context.hoists;
  root.temps = context.temps;
  root.cached = context.cached;
  {
    root.filters = [...context.filters];
  }
}
function createRootCodegen(root, context) {
  const { helper } = context;
  const { children } = root;
  if (children.length === 1) {
    const child = children[0];
    if (isSingleElementRoot(root, child) && child.codegenNode) {
      const codegenNode = child.codegenNode;
      if (codegenNode.type === 13) {
        makeBlock(codegenNode, context);
      }
      root.codegenNode = codegenNode;
    } else {
      root.codegenNode = child;
    }
  } else if (children.length > 1) {
    let patchFlag = 64;
    let patchFlagText = PatchFlagNames[64];
    if (children.filter((c) => c.type !== 3).length === 1) {
      patchFlag |= 2048;
      patchFlagText += `, ${PatchFlagNames[2048]}`;
    }
    root.codegenNode = createVNodeCall(context, helper(FRAGMENT), void 0, root.children, patchFlag + (true ? ` /* ${patchFlagText} */` : ``), void 0, void 0, true, void 0, false);
  } else
    ;
}
function traverseChildren(parent, context) {
  let i = 0;
  const nodeRemoved = () => {
    i--;
  };
  for (; i < parent.children.length; i++) {
    const child = parent.children[i];
    if (isString(child))
      continue;
    context.parent = parent;
    context.childIndex = i;
    context.onNodeRemoved = nodeRemoved;
    traverseNode(child, context);
  }
}
function traverseNode(node, context) {
  context.currentNode = node;
  const { nodeTransforms } = context;
  const exitFns = [];
  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {
    const onExit = nodeTransforms[i2](node, context);
    if (onExit) {
      if (isArray(onExit)) {
        exitFns.push(...onExit);
      } else {
        exitFns.push(onExit);
      }
    }
    if (!context.currentNode) {
      return;
    } else {
      node = context.currentNode;
    }
  }
  switch (node.type) {
    case 3:
      if (!context.ssr) {
        context.helper(CREATE_COMMENT);
      }
      break;
    case 5:
      if (!context.ssr) {
        context.helper(TO_DISPLAY_STRING);
      }
      break;
    case 9:
      for (let i2 = 0; i2 < node.branches.length; i2++) {
        traverseNode(node.branches[i2], context);
      }
      break;
    case 10:
    case 11:
    case 1:
    case 0:
      traverseChildren(node, context);
      break;
  }
  context.currentNode = node;
  let i = exitFns.length;
  while (i--) {
    exitFns[i]();
  }
}
function createStructuralDirectiveTransform(name, fn) {
  const matches = isString(name) ? (n) => n === name : (n) => name.test(n);
  return (node, context) => {
    if (node.type === 1) {
      const { props } = node;
      if (node.tagType === 3 && props.some(isVSlot)) {
        return;
      }
      const exitFns = [];
      for (let i = 0; i < props.length; i++) {
        const prop = props[i];
        if (prop.type === 7 && matches(prop.name)) {
          props.splice(i, 1);
          i--;
          const onExit = fn(node, prop, context);
          if (onExit)
            exitFns.push(onExit);
        }
      }
      return exitFns;
    }
  };
}
function createCodegenContext(ast, { mode = "function", prefixIdentifiers = mode === "module", sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = "vue/server-renderer", ssr = false, isTS = false, inSSR = false }) {
  const context = {
    mode,
    prefixIdentifiers,
    sourceMap,
    filename,
    scopeId,
    optimizeImports,
    runtimeGlobalName,
    runtimeModuleName,
    ssrRuntimeModuleName,
    ssr,
    isTS,
    inSSR,
    source: ast.loc.source,
    code: ``,
    column: 1,
    line: 1,
    offset: 0,
    indentLevel: 0,
    pure: false,
    map: void 0,
    helper(key) {
      return `_${helperNameMap[key]}`;
    },
    push(code, node) {
      context.code += code;
    },
    indent() {
      newline(++context.indentLevel);
    },
    deindent(withoutNewLine = false) {
      if (withoutNewLine) {
        --context.indentLevel;
      } else {
        newline(--context.indentLevel);
      }
    },
    newline() {
      newline(context.indentLevel);
    }
  };
  function newline(n) {
    context.push("\n" + `  `.repeat(n));
  }
  return context;
}
function generate(ast, options = {}) {
  const context = createCodegenContext(ast, options);
  if (options.onContextCreated)
    options.onContextCreated(context);
  const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;
  const hasHelpers = ast.helpers.length > 0;
  const useWithBlock = !prefixIdentifiers && mode !== "module";
  const preambleContext = context;
  {
    genFunctionPreamble(ast, preambleContext);
  }
  const functionName = ssr ? `ssrRender` : `render`;
  const args = ssr ? ["_ctx", "_push", "_parent", "_attrs"] : ["_ctx", "_cache"];
  const signature = args.join(", ");
  {
    push(`function ${functionName}(${signature}) {`);
  }
  indent();
  if (useWithBlock) {
    push(`with (_ctx) {`);
    indent();
    if (hasHelpers) {
      push(`const { ${ast.helpers.map(aliasHelper).join(", ")} } = _Vue`);
      push(`
`);
      newline();
    }
  }
  if (ast.components.length) {
    genAssets(ast.components, "component", context);
    if (ast.directives.length || ast.temps > 0) {
      newline();
    }
  }
  if (ast.directives.length) {
    genAssets(ast.directives, "directive", context);
    if (ast.temps > 0) {
      newline();
    }
  }
  if (ast.filters && ast.filters.length) {
    newline();
    genAssets(ast.filters, "filter", context);
    newline();
  }
  if (ast.temps > 0) {
    push(`let `);
    for (let i = 0; i < ast.temps; i++) {
      push(`${i > 0 ? `, ` : ``}_temp${i}`);
    }
  }
  if (ast.components.length || ast.directives.length || ast.temps) {
    push(`
`);
    newline();
  }
  if (!ssr) {
    push(`return `);
  }
  if (ast.codegenNode) {
    genNode(ast.codegenNode, context);
  } else {
    push(`null`);
  }
  if (useWithBlock) {
    deindent();
    push(`}`);
  }
  deindent();
  push(`}`);
  return {
    ast,
    code: context.code,
    preamble: ``,
    map: context.map ? context.map.toJSON() : void 0
  };
}
function genFunctionPreamble(ast, context) {
  const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;
  const VueBinding = runtimeGlobalName;
  if (ast.helpers.length > 0) {
    {
      push(`const _Vue = ${VueBinding}
`);
      if (ast.hoists.length) {
        const staticHelpers = [
          CREATE_VNODE,
          CREATE_ELEMENT_VNODE,
          CREATE_COMMENT,
          CREATE_TEXT,
          CREATE_STATIC
        ].filter((helper) => ast.helpers.includes(helper)).map(aliasHelper).join(", ");
        push(`const { ${staticHelpers} } = _Vue
`);
      }
    }
  }
  genHoists(ast.hoists, context);
  newline();
  push(`return `);
}
function genAssets(assets, type, { helper, push, newline, isTS }) {
  const resolver = helper(type === "filter" ? RESOLVE_FILTER : type === "component" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);
  for (let i = 0; i < assets.length; i++) {
    let id = assets[i];
    const maybeSelfReference = id.endsWith("__self");
    if (maybeSelfReference) {
      id = id.slice(0, -6);
    }
    push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);
    if (i < assets.length - 1) {
      newline();
    }
  }
}
function genHoists(hoists, context) {
  if (!hoists.length) {
    return;
  }
  context.pure = true;
  const { push, newline, helper, scopeId, mode } = context;
  newline();
  for (let i = 0; i < hoists.length; i++) {
    const exp = hoists[i];
    if (exp) {
      push(`const _hoisted_${i + 1} = ${``}`);
      genNode(exp, context);
      newline();
    }
  }
  context.pure = false;
}
function isText$1(n) {
  return isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;
}
function genNodeListAsArray(nodes, context) {
  const multilines = nodes.length > 3 || nodes.some((n) => isArray(n) || !isText$1(n));
  context.push(`[`);
  multilines && context.indent();
  genNodeList(nodes, context, multilines);
  multilines && context.deindent();
  context.push(`]`);
}
function genNodeList(nodes, context, multilines = false, comma = true) {
  const { push, newline } = context;
  for (let i = 0; i < nodes.length; i++) {
    const node = nodes[i];
    if (isString(node)) {
      push(node);
    } else if (isArray(node)) {
      genNodeListAsArray(node, context);
    } else {
      genNode(node, context);
    }
    if (i < nodes.length - 1) {
      if (multilines) {
        comma && push(",");
        newline();
      } else {
        comma && push(", ");
      }
    }
  }
}
function genNode(node, context) {
  if (isString(node)) {
    context.push(node);
    return;
  }
  if (isSymbol(node)) {
    context.push(context.helper(node));
    return;
  }
  switch (node.type) {
    case 1:
    case 9:
    case 11:
      assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. Apply appropriate transforms first.`);
      genNode(node.codegenNode, context);
      break;
    case 2:
      genText(node, context);
      break;
    case 4:
      genExpression(node, context);
      break;
    case 5:
      genInterpolation(node, context);
      break;
    case 12:
      genNode(node.codegenNode, context);
      break;
    case 8:
      genCompoundExpression(node, context);
      break;
    case 3:
      genComment(node, context);
      break;
    case 13:
      genVNodeCall(node, context);
      break;
    case 14:
      genCallExpression(node, context);
      break;
    case 15:
      genObjectExpression(node, context);
      break;
    case 17:
      genArrayExpression(node, context);
      break;
    case 18:
      genFunctionExpression(node, context);
      break;
    case 19:
      genConditionalExpression(node, context);
      break;
    case 20:
      genCacheExpression(node, context);
      break;
    case 21:
      genNodeList(node.body, context, true, false);
      break;
    case 22:
      break;
    case 23:
      break;
    case 24:
      break;
    case 25:
      break;
    case 26:
      break;
    case 10:
      break;
    default:
      if (true) {
        assert(false, `unhandled codegen node type: ${node.type}`);
        const exhaustiveCheck = node;
        return exhaustiveCheck;
      }
  }
}
function genText(node, context) {
  context.push(JSON.stringify(node.content), node);
}
function genExpression(node, context) {
  const { content, isStatic } = node;
  context.push(isStatic ? JSON.stringify(content) : content, node);
}
function genInterpolation(node, context) {
  const { push, helper, pure } = context;
  if (pure)
    push(PURE_ANNOTATION);
  push(`${helper(TO_DISPLAY_STRING)}(`);
  genNode(node.content, context);
  push(`)`);
}
function genCompoundExpression(node, context) {
  for (let i = 0; i < node.children.length; i++) {
    const child = node.children[i];
    if (isString(child)) {
      context.push(child);
    } else {
      genNode(child, context);
    }
  }
}
function genExpressionAsPropertyKey(node, context) {
  const { push } = context;
  if (node.type === 8) {
    push(`[`);
    genCompoundExpression(node, context);
    push(`]`);
  } else if (node.isStatic) {
    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);
    push(text, node);
  } else {
    push(`[${node.content}]`, node);
  }
}
function genComment(node, context) {
  const { push, helper, pure } = context;
  if (pure) {
    push(PURE_ANNOTATION);
  }
  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);
}
function genVNodeCall(node, context) {
  const { push, helper, pure } = context;
  const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent: isComponent2 } = node;
  if (directives) {
    push(helper(WITH_DIRECTIVES) + `(`);
  }
  if (isBlock) {
    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);
  }
  if (pure) {
    push(PURE_ANNOTATION);
  }
  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent2) : getVNodeHelper(context.inSSR, isComponent2);
  push(helper(callHelper) + `(`, node);
  genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);
  push(`)`);
  if (isBlock) {
    push(`)`);
  }
  if (directives) {
    push(`, `);
    genNode(directives, context);
    push(`)`);
  }
}
function genNullableArgs(args) {
  let i = args.length;
  while (i--) {
    if (args[i] != null)
      break;
  }
  return args.slice(0, i + 1).map((arg) => arg || `null`);
}
function genCallExpression(node, context) {
  const { push, helper, pure } = context;
  const callee = isString(node.callee) ? node.callee : helper(node.callee);
  if (pure) {
    push(PURE_ANNOTATION);
  }
  push(callee + `(`, node);
  genNodeList(node.arguments, context);
  push(`)`);
}
function genObjectExpression(node, context) {
  const { push, indent, deindent, newline } = context;
  const { properties } = node;
  if (!properties.length) {
    push(`{}`, node);
    return;
  }
  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);
  push(multilines ? `{` : `{ `);
  multilines && indent();
  for (let i = 0; i < properties.length; i++) {
    const { key, value } = properties[i];
    genExpressionAsPropertyKey(key, context);
    push(`: `);
    genNode(value, context);
    if (i < properties.length - 1) {
      push(`,`);
      newline();
    }
  }
  multilines && deindent();
  push(multilines ? `}` : ` }`);
}
function genArrayExpression(node, context) {
  genNodeListAsArray(node.elements, context);
}
function genFunctionExpression(node, context) {
  const { push, indent, deindent } = context;
  const { params, returns, body, newline, isSlot } = node;
  if (isSlot) {
    push(`_${helperNameMap[WITH_CTX]}(`);
  }
  push(`(`, node);
  if (isArray(params)) {
    genNodeList(params, context);
  } else if (params) {
    genNode(params, context);
  }
  push(`) => `);
  if (newline || body) {
    push(`{`);
    indent();
  }
  if (returns) {
    if (newline) {
      push(`return `);
    }
    if (isArray(returns)) {
      genNodeListAsArray(returns, context);
    } else {
      genNode(returns, context);
    }
  } else if (body) {
    genNode(body, context);
  }
  if (newline || body) {
    deindent();
    push(`}`);
  }
  if (isSlot) {
    if (node.isNonScopedSlot) {
      push(`, undefined, true`);
    }
    push(`)`);
  }
}
function genConditionalExpression(node, context) {
  const { test, consequent, alternate, newline: needNewline } = node;
  const { push, indent, deindent, newline } = context;
  if (test.type === 4) {
    const needsParens = !isSimpleIdentifier(test.content);
    needsParens && push(`(`);
    genExpression(test, context);
    needsParens && push(`)`);
  } else {
    push(`(`);
    genNode(test, context);
    push(`)`);
  }
  needNewline && indent();
  context.indentLevel++;
  needNewline || push(` `);
  push(`? `);
  genNode(consequent, context);
  context.indentLevel--;
  needNewline && newline();
  needNewline || push(` `);
  push(`: `);
  const isNested = alternate.type === 19;
  if (!isNested) {
    context.indentLevel++;
  }
  genNode(alternate, context);
  if (!isNested) {
    context.indentLevel--;
  }
  needNewline && deindent(true);
}
function genCacheExpression(node, context) {
  const { push, helper, indent, deindent, newline } = context;
  push(`_cache[${node.index}] || (`);
  if (node.isVNode) {
    indent();
    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);
    newline();
  }
  push(`_cache[${node.index}] = `);
  genNode(node.value, context);
  if (node.isVNode) {
    push(`,`);
    newline();
    push(`${helper(SET_BLOCK_TRACKING)}(1),`);
    newline();
    push(`_cache[${node.index}]`);
    deindent();
  }
  push(`)`);
}
function walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {
  {
    return;
  }
}
function isReferencedIdentifier(id, parent, parentStack) {
  {
    return false;
  }
}
function isInDestructureAssignment(parent, parentStack) {
  if (parent && (parent.type === "ObjectProperty" || parent.type === "ArrayPattern")) {
    let i = parentStack.length;
    while (i--) {
      const p = parentStack[i];
      if (p.type === "AssignmentExpression") {
        return true;
      } else if (p.type !== "ObjectProperty" && !p.type.endsWith("Pattern")) {
        break;
      }
    }
  }
  return false;
}
function walkFunctionParams(node, onIdent) {
  for (const p of node.params) {
    for (const id of extractIdentifiers(p)) {
      onIdent(id);
    }
  }
}
function walkBlockDeclarations(block, onIdent) {
  for (const stmt of block.body) {
    if (stmt.type === "VariableDeclaration") {
      if (stmt.declare)
        continue;
      for (const decl of stmt.declarations) {
        for (const id of extractIdentifiers(decl.id)) {
          onIdent(id);
        }
      }
    } else if (stmt.type === "FunctionDeclaration" || stmt.type === "ClassDeclaration") {
      if (stmt.declare || !stmt.id)
        continue;
      onIdent(stmt.id);
    }
  }
}
function extractIdentifiers(param, nodes = []) {
  switch (param.type) {
    case "Identifier":
      nodes.push(param);
      break;
    case "MemberExpression":
      let object = param;
      while (object.type === "MemberExpression") {
        object = object.object;
      }
      nodes.push(object);
      break;
    case "ObjectPattern":
      for (const prop of param.properties) {
        if (prop.type === "RestElement") {
          extractIdentifiers(prop.argument, nodes);
        } else {
          extractIdentifiers(prop.value, nodes);
        }
      }
      break;
    case "ArrayPattern":
      param.elements.forEach((element) => {
        if (element)
          extractIdentifiers(element, nodes);
      });
      break;
    case "RestElement":
      extractIdentifiers(param.argument, nodes);
      break;
    case "AssignmentPattern":
      extractIdentifiers(param.left, nodes);
      break;
  }
  return nodes;
}
function validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {
  const exp = node.content;
  if (!exp.trim()) {
    return;
  }
  try {
    new Function(asRawStatements ? ` ${exp} ` : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);
  } catch (e) {
    let message = e.message;
    const keywordMatch = exp.replace(stripStringRE, "").match(prohibitedKeywordRE);
    if (keywordMatch) {
      message = `avoid using JavaScript keyword as property name: "${keywordMatch[0]}"`;
    }
    context.onError(createCompilerError(44, node.loc, void 0, message));
  }
}
function processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {
  {
    if (true) {
      validateBrowserExpression(node, context, asParams, asRawStatements);
    }
    return node;
  }
}
function processIf(node, dir, context, processCodegen) {
  if (dir.name !== "else" && (!dir.exp || !dir.exp.content.trim())) {
    const loc = dir.exp ? dir.exp.loc : node.loc;
    context.onError(createCompilerError(28, dir.loc));
    dir.exp = createSimpleExpression(`true`, false, loc);
  }
  if (dir.exp) {
    validateBrowserExpression(dir.exp, context);
  }
  if (dir.name === "if") {
    const branch = createIfBranch(node, dir);
    const ifNode = {
      type: 9,
      loc: node.loc,
      branches: [branch]
    };
    context.replaceNode(ifNode);
    if (processCodegen) {
      return processCodegen(ifNode, branch, true);
    }
  } else {
    const siblings = context.parent.children;
    const comments = [];
    let i = siblings.indexOf(node);
    while (i-- >= -1) {
      const sibling = siblings[i];
      if (sibling && sibling.type === 3) {
        context.removeNode(sibling);
        comments.unshift(sibling);
        continue;
      }
      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {
        context.removeNode(sibling);
        continue;
      }
      if (sibling && sibling.type === 9) {
        if (dir.name === "else-if" && sibling.branches[sibling.branches.length - 1].condition === void 0) {
          context.onError(createCompilerError(30, node.loc));
        }
        context.removeNode();
        const branch = createIfBranch(node, dir);
        if (comments.length && !(context.parent && context.parent.type === 1 && isBuiltInType(context.parent.tag, "transition"))) {
          branch.children = [...comments, ...branch.children];
        }
        if (true) {
          const key = branch.userKey;
          if (key) {
            sibling.branches.forEach(({ userKey }) => {
              if (isSameKey(userKey, key)) {
                context.onError(createCompilerError(29, branch.userKey.loc));
              }
            });
          }
        }
        sibling.branches.push(branch);
        const onExit = processCodegen && processCodegen(sibling, branch, false);
        traverseNode(branch, context);
        if (onExit)
          onExit();
        context.currentNode = null;
      } else {
        context.onError(createCompilerError(30, node.loc));
      }
      break;
    }
  }
}
function createIfBranch(node, dir) {
  const isTemplateIf = node.tagType === 3;
  return {
    type: 10,
    loc: node.loc,
    condition: dir.name === "else" ? void 0 : dir.exp,
    children: isTemplateIf && !findDir(node, "for") ? node.children : [node],
    userKey: findProp(node, `key`),
    isTemplateIf
  };
}
function createCodegenNodeForBranch(branch, keyIndex, context) {
  if (branch.condition) {
    return createConditionalExpression(
      branch.condition,
      createChildrenCodegenNode(branch, keyIndex, context),
      createCallExpression(context.helper(CREATE_COMMENT), [
        true ? '"v-if"' : '""',
        "true"
      ])
    );
  } else {
    return createChildrenCodegenNode(branch, keyIndex, context);
  }
}
function createChildrenCodegenNode(branch, keyIndex, context) {
  const { helper } = context;
  const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2));
  const { children } = branch;
  const firstChild = children[0];
  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;
  if (needFragmentWrapper) {
    if (children.length === 1 && firstChild.type === 11) {
      const vnodeCall = firstChild.codegenNode;
      injectProp(vnodeCall, keyProperty, context);
      return vnodeCall;
    } else {
      let patchFlag = 64;
      let patchFlagText = PatchFlagNames[64];
      if (!branch.isTemplateIf && children.filter((c) => c.type !== 3).length === 1) {
        patchFlag |= 2048;
        patchFlagText += `, ${PatchFlagNames[2048]}`;
      }
      return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + (true ? ` /* ${patchFlagText} */` : ``), void 0, void 0, true, false, false, branch.loc);
    }
  } else {
    const ret = firstChild.codegenNode;
    const vnodeCall = getMemoedVNodeCall(ret);
    if (vnodeCall.type === 13) {
      makeBlock(vnodeCall, context);
    }
    injectProp(vnodeCall, keyProperty, context);
    return ret;
  }
}
function isSameKey(a, b) {
  if (!a || a.type !== b.type) {
    return false;
  }
  if (a.type === 6) {
    if (a.value.content !== b.value.content) {
      return false;
    }
  } else {
    const exp = a.exp;
    const branchExp = b.exp;
    if (exp.type !== branchExp.type) {
      return false;
    }
    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {
      return false;
    }
  }
  return true;
}
function getParentCondition(node) {
  while (true) {
    if (node.type === 19) {
      if (node.alternate.type === 19) {
        node = node.alternate;
      } else {
        return node;
      }
    } else if (node.type === 20) {
      node = node.value;
    }
  }
}
function processFor(node, dir, context, processCodegen) {
  if (!dir.exp) {
    context.onError(createCompilerError(31, dir.loc));
    return;
  }
  const parseResult = parseForExpression(
    dir.exp,
    context
  );
  if (!parseResult) {
    context.onError(createCompilerError(32, dir.loc));
    return;
  }
  const { addIdentifiers, removeIdentifiers, scopes } = context;
  const { source, value, key, index } = parseResult;
  const forNode = {
    type: 11,
    loc: dir.loc,
    source,
    valueAlias: value,
    keyAlias: key,
    objectIndexAlias: index,
    parseResult,
    children: isTemplateNode(node) ? node.children : [node]
  };
  context.replaceNode(forNode);
  scopes.vFor++;
  const onExit = processCodegen && processCodegen(forNode);
  return () => {
    scopes.vFor--;
    if (onExit)
      onExit();
  };
}
function parseForExpression(input, context) {
  const loc = input.loc;
  const exp = input.content;
  const inMatch = exp.match(forAliasRE);
  if (!inMatch)
    return;
  const [, LHS, RHS] = inMatch;
  const result = {
    source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),
    value: void 0,
    key: void 0,
    index: void 0
  };
  if (true) {
    validateBrowserExpression(result.source, context);
  }
  let valueContent = LHS.trim().replace(stripParensRE, "").trim();
  const trimmedOffset = LHS.indexOf(valueContent);
  const iteratorMatch = valueContent.match(forIteratorRE);
  if (iteratorMatch) {
    valueContent = valueContent.replace(forIteratorRE, "").trim();
    const keyContent = iteratorMatch[1].trim();
    let keyOffset;
    if (keyContent) {
      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);
      result.key = createAliasExpression(loc, keyContent, keyOffset);
      if (true) {
        validateBrowserExpression(result.key, context, true);
      }
    }
    if (iteratorMatch[2]) {
      const indexContent = iteratorMatch[2].trim();
      if (indexContent) {
        result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length));
        if (true) {
          validateBrowserExpression(result.index, context, true);
        }
      }
    }
  }
  if (valueContent) {
    result.value = createAliasExpression(loc, valueContent, trimmedOffset);
    if (true) {
      validateBrowserExpression(result.value, context, true);
    }
  }
  return result;
}
function createAliasExpression(range, content, offset) {
  return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));
}
function createForLoopParams({ value, key, index }, memoArgs = []) {
  return createParamsList([value, key, index, ...memoArgs]);
}
function createParamsList(args) {
  let i = args.length;
  while (i--) {
    if (args[i])
      break;
  }
  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));
}
function buildSlots(node, context, buildSlotFn = buildClientSlotFn) {
  context.helper(WITH_CTX);
  const { children, loc } = node;
  const slotsProperties = [];
  const dynamicSlots = [];
  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;
  const onComponentSlot = findDir(node, "slot", true);
  if (onComponentSlot) {
    const { arg, exp } = onComponentSlot;
    if (arg && !isStaticExp(arg)) {
      hasDynamicSlots = true;
    }
    slotsProperties.push(createObjectProperty(arg || createSimpleExpression("default", true), buildSlotFn(exp, children, loc)));
  }
  let hasTemplateSlots = false;
  let hasNamedDefaultSlot = false;
  const implicitDefaultChildren = [];
  const seenSlotNames = /* @__PURE__ */ new Set();
  let conditionalBranchIndex = 0;
  for (let i = 0; i < children.length; i++) {
    const slotElement = children[i];
    let slotDir;
    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, "slot", true))) {
      if (slotElement.type !== 3) {
        implicitDefaultChildren.push(slotElement);
      }
      continue;
    }
    if (onComponentSlot) {
      context.onError(createCompilerError(37, slotDir.loc));
      break;
    }
    hasTemplateSlots = true;
    const { children: slotChildren, loc: slotLoc } = slotElement;
    const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;
    let staticSlotName;
    if (isStaticExp(slotName)) {
      staticSlotName = slotName ? slotName.content : `default`;
    } else {
      hasDynamicSlots = true;
    }
    const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);
    let vIf;
    let vElse;
    let vFor;
    if (vIf = findDir(slotElement, "if")) {
      hasDynamicSlots = true;
      dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback));
    } else if (vElse = findDir(slotElement, /^else(-if)?$/, true)) {
      let j = i;
      let prev;
      while (j--) {
        prev = children[j];
        if (prev.type !== 3) {
          break;
        }
      }
      if (prev && isTemplateNode(prev) && findDir(prev, "if")) {
        children.splice(i, 1);
        i--;
        let conditional = dynamicSlots[dynamicSlots.length - 1];
        while (conditional.alternate.type === 19) {
          conditional = conditional.alternate;
        }
        conditional.alternate = vElse.exp ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);
      } else {
        context.onError(createCompilerError(30, vElse.loc));
      }
    } else if (vFor = findDir(slotElement, "for")) {
      hasDynamicSlots = true;
      const parseResult = vFor.parseResult || parseForExpression(vFor.exp, context);
      if (parseResult) {
        dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [
          parseResult.source,
          createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true)
        ]));
      } else {
        context.onError(createCompilerError(32, vFor.loc));
      }
    } else {
      if (staticSlotName) {
        if (seenSlotNames.has(staticSlotName)) {
          context.onError(createCompilerError(38, dirLoc));
          continue;
        }
        seenSlotNames.add(staticSlotName);
        if (staticSlotName === "default") {
          hasNamedDefaultSlot = true;
        }
      }
      slotsProperties.push(createObjectProperty(slotName, slotFunction));
    }
  }
  if (!onComponentSlot) {
    const buildDefaultSlotProperty = (props, children2) => {
      const fn = buildSlotFn(props, children2, loc);
      if (context.compatConfig) {
        fn.isNonScopedSlot = true;
      }
      return createObjectProperty(`default`, fn);
    };
    if (!hasTemplateSlots) {
      slotsProperties.push(buildDefaultSlotProperty(void 0, children));
    } else if (implicitDefaultChildren.length && implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {
      if (hasNamedDefaultSlot) {
        context.onError(createCompilerError(39, implicitDefaultChildren[0].loc));
      } else {
        slotsProperties.push(buildDefaultSlotProperty(void 0, implicitDefaultChildren));
      }
    }
  }
  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;
  let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(
    `_`,
    createSimpleExpression(slotFlag + (true ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false)
  )), loc);
  if (dynamicSlots.length) {
    slots = createCallExpression(context.helper(CREATE_SLOTS), [
      slots,
      createArrayExpression(dynamicSlots)
    ]);
  }
  return {
    slots,
    hasDynamicSlots
  };
}
function buildDynamicSlot(name, fn, index) {
  const props = [
    createObjectProperty(`name`, name),
    createObjectProperty(`fn`, fn)
  ];
  if (index != null) {
    props.push(createObjectProperty(`key`, createSimpleExpression(String(index), true)));
  }
  return createObjectExpression(props);
}
function hasForwardedSlots(children) {
  for (let i = 0; i < children.length; i++) {
    const child = children[i];
    switch (child.type) {
      case 1:
        if (child.tagType === 2 || hasForwardedSlots(child.children)) {
          return true;
        }
        break;
      case 9:
        if (hasForwardedSlots(child.branches))
          return true;
        break;
      case 10:
      case 11:
        if (hasForwardedSlots(child.children))
          return true;
        break;
    }
  }
  return false;
}
function isNonWhitespaceContent(node) {
  if (node.type !== 2 && node.type !== 12)
    return true;
  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);
}
function resolveComponentType(node, context, ssr = false) {
  let { tag } = node;
  const isExplicitDynamic = isComponentTag(tag);
  const isProp = findProp(node, "is");
  if (isProp) {
    if (isExplicitDynamic || isCompatEnabled("COMPILER_IS_ON_ELEMENT", context)) {
      const exp = isProp.type === 6 ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;
      if (exp) {
        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [
          exp
        ]);
      }
    } else if (isProp.type === 6 && isProp.value.content.startsWith("vue:")) {
      tag = isProp.value.content.slice(4);
    }
  }
  const isDir = !isExplicitDynamic && findDir(node, "is");
  if (isDir && isDir.exp) {
    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [
      isDir.exp
    ]);
  }
  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);
  if (builtIn) {
    if (!ssr)
      context.helper(builtIn);
    return builtIn;
  }
  context.helper(RESOLVE_COMPONENT);
  context.components.add(tag);
  return toValidAssetId(tag, `component`);
}
function buildProps(node, context, props = node.props, isComponent2, isDynamicComponent, ssr = false) {
  const { tag, loc: elementLoc, children } = node;
  let properties = [];
  const mergeArgs = [];
  const runtimeDirectives = [];
  const hasChildren = children.length > 0;
  let shouldUseBlock = false;
  let patchFlag = 0;
  let hasRef = false;
  let hasClassBinding = false;
  let hasStyleBinding = false;
  let hasHydrationEventBinding = false;
  let hasDynamicKeys = false;
  let hasVnodeHook = false;
  const dynamicPropNames = [];
  const pushMergeArg = (arg) => {
    if (properties.length) {
      mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));
      properties = [];
    }
    if (arg)
      mergeArgs.push(arg);
  };
  const analyzePatchFlag = ({ key, value }) => {
    if (isStaticExp(key)) {
      const name = key.content;
      const isEventHandler = isOn(name);
      if (isEventHandler && (!isComponent2 || isDynamicComponent) && name.toLowerCase() !== "onclick" && name !== "onUpdate:modelValue" && !isReservedProp(name)) {
        hasHydrationEventBinding = true;
      }
      if (isEventHandler && isReservedProp(name)) {
        hasVnodeHook = true;
      }
      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {
        return;
      }
      if (name === "ref") {
        hasRef = true;
      } else if (name === "class") {
        hasClassBinding = true;
      } else if (name === "style") {
        hasStyleBinding = true;
      } else if (name !== "key" && !dynamicPropNames.includes(name)) {
        dynamicPropNames.push(name);
      }
      if (isComponent2 && (name === "class" || name === "style") && !dynamicPropNames.includes(name)) {
        dynamicPropNames.push(name);
      }
    } else {
      hasDynamicKeys = true;
    }
  };
  for (let i = 0; i < props.length; i++) {
    const prop = props[i];
    if (prop.type === 6) {
      const { loc, name, value } = prop;
      let isStatic = true;
      if (name === "ref") {
        hasRef = true;
        if (context.scopes.vFor > 0) {
          properties.push(createObjectProperty(createSimpleExpression("ref_for", true), createSimpleExpression("true")));
        }
      }
      if (name === "is" && (isComponentTag(tag) || value && value.content.startsWith("vue:") || isCompatEnabled("COMPILER_IS_ON_ELEMENT", context))) {
        continue;
      }
      properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : "", isStatic, value ? value.loc : loc)));
    } else {
      const { name, arg, exp, loc } = prop;
      const isVBind = name === "bind";
      const isVOn = name === "on";
      if (name === "slot") {
        if (!isComponent2) {
          context.onError(createCompilerError(40, loc));
        }
        continue;
      }
      if (name === "once" || name === "memo") {
        continue;
      }
      if (name === "is" || isVBind && isStaticArgOf(arg, "is") && (isComponentTag(tag) || isCompatEnabled("COMPILER_IS_ON_ELEMENT", context))) {
        continue;
      }
      if (isVOn && ssr) {
        continue;
      }
      if (isVBind && isStaticArgOf(arg, "key") || isVOn && hasChildren && isStaticArgOf(arg, "vue:before-update")) {
        shouldUseBlock = true;
      }
      if (isVBind && isStaticArgOf(arg, "ref") && context.scopes.vFor > 0) {
        properties.push(createObjectProperty(createSimpleExpression("ref_for", true), createSimpleExpression("true")));
      }
      if (!arg && (isVBind || isVOn)) {
        hasDynamicKeys = true;
        if (exp) {
          if (isVBind) {
            pushMergeArg();
            {
              if (true) {
                const hasOverridableKeys = mergeArgs.some((arg2) => {
                  if (arg2.type === 15) {
                    return arg2.properties.some(({ key }) => {
                      if (key.type !== 4 || !key.isStatic) {
                        return true;
                      }
                      return key.content !== "class" && key.content !== "style" && !isOn(key.content);
                    });
                  } else {
                    return true;
                  }
                });
                if (hasOverridableKeys) {
                  checkCompatEnabled("COMPILER_V_BIND_OBJECT_ORDER", context, loc);
                }
              }
              if (isCompatEnabled("COMPILER_V_BIND_OBJECT_ORDER", context)) {
                mergeArgs.unshift(exp);
                continue;
              }
            }
            mergeArgs.push(exp);
          } else {
            pushMergeArg({
              type: 14,
              loc,
              callee: context.helper(TO_HANDLERS),
              arguments: isComponent2 ? [exp] : [exp, `true`]
            });
          }
        } else {
          context.onError(createCompilerError(isVBind ? 34 : 35, loc));
        }
        continue;
      }
      const directiveTransform = context.directiveTransforms[name];
      if (directiveTransform) {
        const { props: props2, needRuntime } = directiveTransform(prop, node, context);
        !ssr && props2.forEach(analyzePatchFlag);
        if (isVOn && arg && !isStaticExp(arg)) {
          pushMergeArg(createObjectExpression(props2, elementLoc));
        } else {
          properties.push(...props2);
        }
        if (needRuntime) {
          runtimeDirectives.push(prop);
          if (isSymbol(needRuntime)) {
            directiveImportMap.set(prop, needRuntime);
          }
        }
      } else if (!isBuiltInDirective(name)) {
        runtimeDirectives.push(prop);
        if (hasChildren) {
          shouldUseBlock = true;
        }
      }
    }
  }
  let propsExpression = void 0;
  if (mergeArgs.length) {
    pushMergeArg();
    if (mergeArgs.length > 1) {
      propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);
    } else {
      propsExpression = mergeArgs[0];
    }
  } else if (properties.length) {
    propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);
  }
  if (hasDynamicKeys) {
    patchFlag |= 16;
  } else {
    if (hasClassBinding && !isComponent2) {
      patchFlag |= 2;
    }
    if (hasStyleBinding && !isComponent2) {
      patchFlag |= 4;
    }
    if (dynamicPropNames.length) {
      patchFlag |= 8;
    }
    if (hasHydrationEventBinding) {
      patchFlag |= 32;
    }
  }
  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {
    patchFlag |= 512;
  }
  if (!context.inSSR && propsExpression) {
    switch (propsExpression.type) {
      case 15:
        let classKeyIndex = -1;
        let styleKeyIndex = -1;
        let hasDynamicKey = false;
        for (let i = 0; i < propsExpression.properties.length; i++) {
          const key = propsExpression.properties[i].key;
          if (isStaticExp(key)) {
            if (key.content === "class") {
              classKeyIndex = i;
            } else if (key.content === "style") {
              styleKeyIndex = i;
            }
          } else if (!key.isHandlerKey) {
            hasDynamicKey = true;
          }
        }
        const classProp = propsExpression.properties[classKeyIndex];
        const styleProp = propsExpression.properties[styleKeyIndex];
        if (!hasDynamicKey) {
          if (classProp && !isStaticExp(classProp.value)) {
            classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);
          }
          if (styleProp && (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || styleProp.value.type === 17)) {
            styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);
          }
        } else {
          propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);
        }
        break;
      case 14:
        break;
      default:
        propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [
          createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [
            propsExpression
          ])
        ]);
        break;
    }
  }
  return {
    props: propsExpression,
    directives: runtimeDirectives,
    patchFlag,
    dynamicPropNames,
    shouldUseBlock
  };
}
function dedupeProperties(properties) {
  const knownProps = /* @__PURE__ */ new Map();
  const deduped = [];
  for (let i = 0; i < properties.length; i++) {
    const prop = properties[i];
    if (prop.key.type === 8 || !prop.key.isStatic) {
      deduped.push(prop);
      continue;
    }
    const name = prop.key.content;
    const existing = knownProps.get(name);
    if (existing) {
      if (name === "style" || name === "class" || isOn(name)) {
        mergeAsArray(existing, prop);
      }
    } else {
      knownProps.set(name, prop);
      deduped.push(prop);
    }
  }
  return deduped;
}
function mergeAsArray(existing, incoming) {
  if (existing.value.type === 17) {
    existing.value.elements.push(incoming.value);
  } else {
    existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);
  }
}
function buildDirectiveArgs(dir, context) {
  const dirArgs = [];
  const runtime = directiveImportMap.get(dir);
  if (runtime) {
    dirArgs.push(context.helperString(runtime));
  } else {
    {
      context.helper(RESOLVE_DIRECTIVE);
      context.directives.add(dir.name);
      dirArgs.push(toValidAssetId(dir.name, `directive`));
    }
  }
  const { loc } = dir;
  if (dir.exp)
    dirArgs.push(dir.exp);
  if (dir.arg) {
    if (!dir.exp) {
      dirArgs.push(`void 0`);
    }
    dirArgs.push(dir.arg);
  }
  if (Object.keys(dir.modifiers).length) {
    if (!dir.arg) {
      if (!dir.exp) {
        dirArgs.push(`void 0`);
      }
      dirArgs.push(`void 0`);
    }
    const trueExpression = createSimpleExpression(`true`, false, loc);
    dirArgs.push(createObjectExpression(dir.modifiers.map((modifier) => createObjectProperty(modifier, trueExpression)), loc));
  }
  return createArrayExpression(dirArgs, dir.loc);
}
function stringifyDynamicPropNames(props) {
  let propsNamesString = `[`;
  for (let i = 0, l = props.length; i < l; i++) {
    propsNamesString += JSON.stringify(props[i]);
    if (i < l - 1)
      propsNamesString += ", ";
  }
  return propsNamesString + `]`;
}
function isComponentTag(tag) {
  return tag === "component" || tag === "Component";
}
function processSlotOutlet(node, context) {
  let slotName = `"default"`;
  let slotProps = void 0;
  const nonNameProps = [];
  for (let i = 0; i < node.props.length; i++) {
    const p = node.props[i];
    if (p.type === 6) {
      if (p.value) {
        if (p.name === "name") {
          slotName = JSON.stringify(p.value.content);
        } else {
          p.name = camelize2(p.name);
          nonNameProps.push(p);
        }
      }
    } else {
      if (p.name === "bind" && isStaticArgOf(p.arg, "name")) {
        if (p.exp)
          slotName = p.exp;
      } else {
        if (p.name === "bind" && p.arg && isStaticExp(p.arg)) {
          p.arg.content = camelize2(p.arg.content);
        }
        nonNameProps.push(p);
      }
    }
  }
  if (nonNameProps.length > 0) {
    const { props, directives } = buildProps(node, context, nonNameProps, false, false);
    slotProps = props;
    if (directives.length) {
      context.onError(createCompilerError(36, directives[0].loc));
    }
  }
  return {
    slotName,
    slotProps
  };
}
function createTransformProps(props = []) {
  return { props };
}
function rewriteFilter(node, context) {
  if (node.type === 4) {
    parseFilter(node, context);
  } else {
    for (let i = 0; i < node.children.length; i++) {
      const child = node.children[i];
      if (typeof child !== "object")
        continue;
      if (child.type === 4) {
        parseFilter(child, context);
      } else if (child.type === 8) {
        rewriteFilter(node, context);
      } else if (child.type === 5) {
        rewriteFilter(child.content, context);
      }
    }
  }
}
function parseFilter(node, context) {
  const exp = node.content;
  let inSingle = false;
  let inDouble = false;
  let inTemplateString = false;
  let inRegex = false;
  let curly = 0;
  let square = 0;
  let paren = 0;
  let lastFilterIndex = 0;
  let c, prev, i, expression, filters = [];
  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 39 && prev !== 92)
        inSingle = false;
    } else if (inDouble) {
      if (c === 34 && prev !== 92)
        inDouble = false;
    } else if (inTemplateString) {
      if (c === 96 && prev !== 92)
        inTemplateString = false;
    } else if (inRegex) {
      if (c === 47 && prev !== 92)
        inRegex = false;
    } else if (c === 124 && exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {
      if (expression === void 0) {
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 34:
          inDouble = true;
          break;
        case 39:
          inSingle = true;
          break;
        case 96:
          inTemplateString = true;
          break;
        case 40:
          paren++;
          break;
        case 41:
          paren--;
          break;
        case 91:
          square++;
          break;
        case 93:
          square--;
          break;
        case 123:
          curly++;
          break;
        case 125:
          curly--;
          break;
      }
      if (c === 47) {
        let j = i - 1;
        let p;
        for (; j >= 0; j--) {
          p = exp.charAt(j);
          if (p !== " ")
            break;
        }
        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }
  if (expression === void 0) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }
  function pushFilter() {
    filters.push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }
  if (filters.length) {
    warnDeprecation("COMPILER_FILTER", context, node.loc);
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i], context);
    }
    node.content = expression;
  }
}
function wrapFilter(exp, filter, context) {
  context.helper(RESOLVE_FILTER);
  const i = filter.indexOf("(");
  if (i < 0) {
    context.filters.add(filter);
    return `${toValidAssetId(filter, "filter")}(${exp})`;
  } else {
    const name = filter.slice(0, i);
    const args = filter.slice(i + 1);
    context.filters.add(name);
    return `${toValidAssetId(name, "filter")}(${exp}${args !== ")" ? "," + args : args}`;
  }
}
function getBaseTransformPreset(prefixIdentifiers) {
  return [
    [
      transformOnce,
      transformIf,
      transformMemo,
      transformFor,
      ...[transformFilter],
      ...true ? [transformExpression] : [],
      transformSlotOutlet,
      transformElement,
      trackSlotScopes,
      transformText
    ],
    {
      on: transformOn,
      bind: transformBind,
      model: transformModel
    }
  ];
}
function baseCompile(template, options = {}) {
  const onError = options.onError || defaultOnError;
  const isModuleMode = options.mode === "module";
  {
    if (options.prefixIdentifiers === true) {
      onError(createCompilerError(46));
    } else if (isModuleMode) {
      onError(createCompilerError(47));
    }
  }
  const prefixIdentifiers = false;
  if (options.cacheHandlers) {
    onError(createCompilerError(48));
  }
  if (options.scopeId && !isModuleMode) {
    onError(createCompilerError(49));
  }
  const ast = isString(template) ? baseParse(template, options) : template;
  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();
  transform(ast, extend({}, options, {
    prefixIdentifiers,
    nodeTransforms: [
      ...nodeTransforms,
      ...options.nodeTransforms || []
    ],
    directiveTransforms: extend(
      {},
      directiveTransforms,
      options.directiveTransforms || {}
    )
  }));
  return generate(ast, extend({}, options, {
    prefixIdentifiers
  }));
}
var errorMessages, FRAGMENT, TELEPORT, SUSPENSE, KEEP_ALIVE, BASE_TRANSITION, OPEN_BLOCK, CREATE_BLOCK, CREATE_ELEMENT_BLOCK, CREATE_VNODE, CREATE_ELEMENT_VNODE, CREATE_COMMENT, CREATE_TEXT, CREATE_STATIC, RESOLVE_COMPONENT, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_FILTER, WITH_DIRECTIVES, RENDER_LIST, RENDER_SLOT, CREATE_SLOTS, TO_DISPLAY_STRING, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_STYLE, NORMALIZE_PROPS, GUARD_REACTIVE_PROPS, TO_HANDLERS, CAMELIZE, CAPITALIZE, TO_HANDLER_KEY, SET_BLOCK_TRACKING, PUSH_SCOPE_ID, POP_SCOPE_ID, WITH_CTX, UNREF, IS_REF, WITH_MEMO, IS_MEMO_SAME, helperNameMap, locStub, isStaticExp, isBuiltInType, nonIdentifierRE, isSimpleIdentifier, validFirstIdentCharRE, validIdentCharRE, whitespaceRE, isMemberExpressionBrowser, isMemberExpressionNode, isMemberExpression, propsHelperSet, deprecationData, decodeRE, decodeMap, defaultParserOptions, isSpecialTemplateDirective, allowHoistedHelperSet, PURE_ANNOTATION, aliasHelper, isFunctionType, isStaticProperty, isStaticPropertyKey, prohibitedKeywordRE, stripStringRE, transformExpression, transformIf, transformFor, forAliasRE, forIteratorRE, stripParensRE, defaultFallback, trackSlotScopes, trackVForSlotScopes, buildClientSlotFn, directiveImportMap, transformElement, cacheStringFunction, camelizeRE, camelize2, transformSlotOutlet, fnExpRE, transformOn, transformBind, injectPrefix, transformText, seen, transformOnce, transformModel, validDivisionCharRE, transformFilter, seen$1, transformMemo, noopDirectiveTransform;
var init_compiler_core_esm_bundler = __esm({
  "node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js"() {
    init_shared_esm_bundler();
    init_shared_esm_bundler();
    errorMessages = {
      [0]: "Illegal comment.",
      [1]: "CDATA section is allowed only in XML context.",
      [2]: "Duplicate attribute.",
      [3]: "End tag cannot have attributes.",
      [4]: "Illegal '/' in tags.",
      [5]: "Unexpected EOF in tag.",
      [6]: "Unexpected EOF in CDATA section.",
      [7]: "Unexpected EOF in comment.",
      [8]: "Unexpected EOF in script.",
      [9]: "Unexpected EOF in tag.",
      [10]: "Incorrectly closed comment.",
      [11]: "Incorrectly opened comment.",
      [12]: "Illegal tag name. Use '&lt;' to print '<'.",
      [13]: "Attribute value was expected.",
      [14]: "End tag name was expected.",
      [15]: "Whitespace was expected.",
      [16]: "Unexpected '<!--' in comment.",
      [17]: `Attribute name cannot contain U+0022 ("), U+0027 ('), and U+003C (<).`,
      [18]: "Unquoted attribute value cannot contain U+0022 (\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).",
      [19]: "Attribute name cannot start with '='.",
      [21]: "'<?' is allowed only in XML context.",
      [20]: `Unexpected null character.`,
      [22]: "Illegal '/' in tags.",
      [23]: "Invalid end tag.",
      [24]: "Element is missing end tag.",
      [25]: "Interpolation end sign was not found.",
      [27]: "End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.",
      [26]: "Legal directive name was expected.",
      [28]: `v-if/v-else-if is missing expression.`,
      [29]: `v-if/else branches must use unique keys.`,
      [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,
      [31]: `v-for is missing expression.`,
      [32]: `v-for has invalid expression.`,
      [33]: `<template v-for> key should be placed on the <template> tag.`,
      [34]: `v-bind is missing expression.`,
      [35]: `v-on is missing expression.`,
      [36]: `Unexpected custom directive on <slot> outlet.`,
      [37]: `Mixed v-slot usage on both the component and nested <template>.When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,
      [38]: `Duplicate slot names found. `,
      [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,
      [40]: `v-slot can only be used on components or <template> tags.`,
      [41]: `v-model is missing expression.`,
      [42]: `v-model value must be a valid JavaScript member expression.`,
      [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,
      [44]: `Error parsing JavaScript expression: `,
      [45]: `<KeepAlive> expects exactly one child component.`,
      [46]: `"prefixIdentifiers" option is not supported in this build of compiler.`,
      [47]: `ES module mode is not supported in this build of compiler.`,
      [48]: `"cacheHandlers" option is only supported when the "prefixIdentifiers" option is enabled.`,
      [49]: `"scopeId" option is only supported in module mode.`,
      [50]: ``
    };
    FRAGMENT = Symbol(true ? `Fragment` : ``);
    TELEPORT = Symbol(true ? `Teleport` : ``);
    SUSPENSE = Symbol(true ? `Suspense` : ``);
    KEEP_ALIVE = Symbol(true ? `KeepAlive` : ``);
    BASE_TRANSITION = Symbol(true ? `BaseTransition` : ``);
    OPEN_BLOCK = Symbol(true ? `openBlock` : ``);
    CREATE_BLOCK = Symbol(true ? `createBlock` : ``);
    CREATE_ELEMENT_BLOCK = Symbol(true ? `createElementBlock` : ``);
    CREATE_VNODE = Symbol(true ? `createVNode` : ``);
    CREATE_ELEMENT_VNODE = Symbol(true ? `createElementVNode` : ``);
    CREATE_COMMENT = Symbol(true ? `createCommentVNode` : ``);
    CREATE_TEXT = Symbol(true ? `createTextVNode` : ``);
    CREATE_STATIC = Symbol(true ? `createStaticVNode` : ``);
    RESOLVE_COMPONENT = Symbol(true ? `resolveComponent` : ``);
    RESOLVE_DYNAMIC_COMPONENT = Symbol(true ? `resolveDynamicComponent` : ``);
    RESOLVE_DIRECTIVE = Symbol(true ? `resolveDirective` : ``);
    RESOLVE_FILTER = Symbol(true ? `resolveFilter` : ``);
    WITH_DIRECTIVES = Symbol(true ? `withDirectives` : ``);
    RENDER_LIST = Symbol(true ? `renderList` : ``);
    RENDER_SLOT = Symbol(true ? `renderSlot` : ``);
    CREATE_SLOTS = Symbol(true ? `createSlots` : ``);
    TO_DISPLAY_STRING = Symbol(true ? `toDisplayString` : ``);
    MERGE_PROPS = Symbol(true ? `mergeProps` : ``);
    NORMALIZE_CLASS = Symbol(true ? `normalizeClass` : ``);
    NORMALIZE_STYLE = Symbol(true ? `normalizeStyle` : ``);
    NORMALIZE_PROPS = Symbol(true ? `normalizeProps` : ``);
    GUARD_REACTIVE_PROPS = Symbol(true ? `guardReactiveProps` : ``);
    TO_HANDLERS = Symbol(true ? `toHandlers` : ``);
    CAMELIZE = Symbol(true ? `camelize` : ``);
    CAPITALIZE = Symbol(true ? `capitalize` : ``);
    TO_HANDLER_KEY = Symbol(true ? `toHandlerKey` : ``);
    SET_BLOCK_TRACKING = Symbol(true ? `setBlockTracking` : ``);
    PUSH_SCOPE_ID = Symbol(true ? `pushScopeId` : ``);
    POP_SCOPE_ID = Symbol(true ? `popScopeId` : ``);
    WITH_CTX = Symbol(true ? `withCtx` : ``);
    UNREF = Symbol(true ? `unref` : ``);
    IS_REF = Symbol(true ? `isRef` : ``);
    WITH_MEMO = Symbol(true ? `withMemo` : ``);
    IS_MEMO_SAME = Symbol(true ? `isMemoSame` : ``);
    helperNameMap = {
      [FRAGMENT]: `Fragment`,
      [TELEPORT]: `Teleport`,
      [SUSPENSE]: `Suspense`,
      [KEEP_ALIVE]: `KeepAlive`,
      [BASE_TRANSITION]: `BaseTransition`,
      [OPEN_BLOCK]: `openBlock`,
      [CREATE_BLOCK]: `createBlock`,
      [CREATE_ELEMENT_BLOCK]: `createElementBlock`,
      [CREATE_VNODE]: `createVNode`,
      [CREATE_ELEMENT_VNODE]: `createElementVNode`,
      [CREATE_COMMENT]: `createCommentVNode`,
      [CREATE_TEXT]: `createTextVNode`,
      [CREATE_STATIC]: `createStaticVNode`,
      [RESOLVE_COMPONENT]: `resolveComponent`,
      [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,
      [RESOLVE_DIRECTIVE]: `resolveDirective`,
      [RESOLVE_FILTER]: `resolveFilter`,
      [WITH_DIRECTIVES]: `withDirectives`,
      [RENDER_LIST]: `renderList`,
      [RENDER_SLOT]: `renderSlot`,
      [CREATE_SLOTS]: `createSlots`,
      [TO_DISPLAY_STRING]: `toDisplayString`,
      [MERGE_PROPS]: `mergeProps`,
      [NORMALIZE_CLASS]: `normalizeClass`,
      [NORMALIZE_STYLE]: `normalizeStyle`,
      [NORMALIZE_PROPS]: `normalizeProps`,
      [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,
      [TO_HANDLERS]: `toHandlers`,
      [CAMELIZE]: `camelize`,
      [CAPITALIZE]: `capitalize`,
      [TO_HANDLER_KEY]: `toHandlerKey`,
      [SET_BLOCK_TRACKING]: `setBlockTracking`,
      [PUSH_SCOPE_ID]: `pushScopeId`,
      [POP_SCOPE_ID]: `popScopeId`,
      [WITH_CTX]: `withCtx`,
      [UNREF]: `unref`,
      [IS_REF]: `isRef`,
      [WITH_MEMO]: `withMemo`,
      [IS_MEMO_SAME]: `isMemoSame`
    };
    locStub = {
      source: "",
      start: { line: 1, column: 1, offset: 0 },
      end: { line: 1, column: 1, offset: 0 }
    };
    isStaticExp = (p) => p.type === 4 && p.isStatic;
    isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);
    nonIdentifierRE = /^\d|[^\$\w]/;
    isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);
    validFirstIdentCharRE = /[A-Za-z_$\xA0-\uFFFF]/;
    validIdentCharRE = /[\.\?\w$\xA0-\uFFFF]/;
    whitespaceRE = /\s+[.[]\s*|\s*[.[]\s+/g;
    isMemberExpressionBrowser = (path) => {
      path = path.trim().replace(whitespaceRE, (s) => s.trim());
      let state = 0;
      let stateStack = [];
      let currentOpenBracketCount = 0;
      let currentOpenParensCount = 0;
      let currentStringType = null;
      for (let i = 0; i < path.length; i++) {
        const char = path.charAt(i);
        switch (state) {
          case 0:
            if (char === "[") {
              stateStack.push(state);
              state = 1;
              currentOpenBracketCount++;
            } else if (char === "(") {
              stateStack.push(state);
              state = 2;
              currentOpenParensCount++;
            } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {
              return false;
            }
            break;
          case 1:
            if (char === `'` || char === `"` || char === "`") {
              stateStack.push(state);
              state = 3;
              currentStringType = char;
            } else if (char === `[`) {
              currentOpenBracketCount++;
            } else if (char === `]`) {
              if (!--currentOpenBracketCount) {
                state = stateStack.pop();
              }
            }
            break;
          case 2:
            if (char === `'` || char === `"` || char === "`") {
              stateStack.push(state);
              state = 3;
              currentStringType = char;
            } else if (char === `(`) {
              currentOpenParensCount++;
            } else if (char === `)`) {
              if (i === path.length - 1) {
                return false;
              }
              if (!--currentOpenParensCount) {
                state = stateStack.pop();
              }
            }
            break;
          case 3:
            if (char === currentStringType) {
              state = stateStack.pop();
              currentStringType = null;
            }
            break;
        }
      }
      return !currentOpenBracketCount && !currentOpenParensCount;
    };
    isMemberExpressionNode = NOOP;
    isMemberExpression = isMemberExpressionBrowser;
    propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);
    deprecationData = {
      ["COMPILER_IS_ON_ELEMENT"]: {
        message: `Platform-native elements with "is" prop will no longer be treated as components in Vue 3 unless the "is" value is explicitly prefixed with "vue:".`,
        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`
      },
      ["COMPILER_V_BIND_SYNC"]: {
        message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \`v-bind:${key}.sync\` should be changed to \`v-model:${key}\`.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`
      },
      ["COMPILER_V_BIND_PROP"]: {
        message: `.prop modifier for v-bind has been removed and no longer necessary. Vue 3 will automatically set a binding as DOM property when appropriate.`
      },
      ["COMPILER_V_BIND_OBJECT_ORDER"]: {
        message: `v-bind="obj" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`
      },
      ["COMPILER_V_ON_NATIVE"]: {
        message: `.native modifier for v-on has been removed as is no longer necessary.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`
      },
      ["COMPILER_V_IF_V_FOR_PRECEDENCE"]: {
        message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`
      },
      ["COMPILER_NATIVE_TEMPLATE"]: {
        message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`
      },
      ["COMPILER_INLINE_TEMPLATE"]: {
        message: `"inline-template" has been removed in Vue 3.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`
      },
      ["COMPILER_FILTER"]: {
        message: `filters have been removed in Vue 3. The "|" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`
      }
    };
    decodeRE = /&(gt|lt|amp|apos|quot);/g;
    decodeMap = {
      gt: ">",
      lt: "<",
      amp: "&",
      apos: "'",
      quot: '"'
    };
    defaultParserOptions = {
      delimiters: [`{{`, `}}`],
      getNamespace: () => 0,
      getTextMode: () => 0,
      isVoidTag: NO,
      isPreTag: NO,
      isCustomElement: NO,
      decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),
      onError: defaultOnError,
      onWarn: defaultOnWarn,
      comments: true
    };
    isSpecialTemplateDirective = makeMap(`if,else,else-if,for,slot`);
    allowHoistedHelperSet = /* @__PURE__ */ new Set([
      NORMALIZE_CLASS,
      NORMALIZE_STYLE,
      NORMALIZE_PROPS,
      GUARD_REACTIVE_PROPS
    ]);
    PURE_ANNOTATION = `/*#__PURE__*/`;
    aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;
    isFunctionType = (node) => {
      return /Function(?:Expression|Declaration)$|Method$/.test(node.type);
    };
    isStaticProperty = (node) => node && (node.type === "ObjectProperty" || node.type === "ObjectMethod") && !node.computed;
    isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;
    prohibitedKeywordRE = new RegExp("\\b" + "do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments,typeof,void".split(",").join("\\b|\\b") + "\\b");
    stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;
    transformExpression = (node, context) => {
      if (node.type === 5) {
        node.content = processExpression(node.content, context);
      } else if (node.type === 1) {
        for (let i = 0; i < node.props.length; i++) {
          const dir = node.props[i];
          if (dir.type === 7 && dir.name !== "for") {
            const exp = dir.exp;
            const arg = dir.arg;
            if (exp && exp.type === 4 && !(dir.name === "on" && arg)) {
              dir.exp = processExpression(
                exp,
                context,
                dir.name === "slot"
              );
            }
            if (arg && arg.type === 4 && !arg.isStatic) {
              dir.arg = processExpression(arg, context);
            }
          }
        }
      }
    };
    transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {
      return processIf(node, dir, context, (ifNode, branch, isRoot) => {
        const siblings = context.parent.children;
        let i = siblings.indexOf(ifNode);
        let key = 0;
        while (i-- >= 0) {
          const sibling = siblings[i];
          if (sibling && sibling.type === 9) {
            key += sibling.branches.length;
          }
        }
        return () => {
          if (isRoot) {
            ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);
          } else {
            const parentCondition = getParentCondition(ifNode.codegenNode);
            parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);
          }
        };
      });
    });
    transformFor = createStructuralDirectiveTransform("for", (node, dir, context) => {
      const { helper, removeHelper } = context;
      return processFor(node, dir, context, (forNode) => {
        const renderExp = createCallExpression(helper(RENDER_LIST), [
          forNode.source
        ]);
        const isTemplate = isTemplateNode(node);
        const memo = findDir(node, "memo");
        const keyProp = findProp(node, `key`);
        const keyExp = keyProp && (keyProp.type === 6 ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);
        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;
        const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;
        const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;
        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), void 0, renderExp, fragmentFlag + (true ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), void 0, void 0, true, !isStableFragment, false, node.loc);
        return () => {
          let childBlock;
          const { children } = forNode;
          if (isTemplate) {
            node.children.some((c) => {
              if (c.type === 1) {
                const key = findProp(c, "key");
                if (key) {
                  context.onError(createCompilerError(33, key.loc));
                  return true;
                }
              }
            });
          }
          const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;
          const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;
          if (slotOutlet) {
            childBlock = slotOutlet.codegenNode;
            if (isTemplate && keyProperty) {
              injectProp(childBlock, keyProperty, context);
            }
          } else if (needFragmentWrapper) {
            childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : void 0, node.children, 64 + (true ? ` /* ${PatchFlagNames[64]} */` : ``), void 0, void 0, true, void 0, false);
          } else {
            childBlock = children[0].codegenNode;
            if (isTemplate && keyProperty) {
              injectProp(childBlock, keyProperty, context);
            }
            if (childBlock.isBlock !== !isStableFragment) {
              if (childBlock.isBlock) {
                removeHelper(OPEN_BLOCK);
                removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));
              } else {
                removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));
              }
            }
            childBlock.isBlock = !isStableFragment;
            if (childBlock.isBlock) {
              helper(OPEN_BLOCK);
              helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));
            } else {
              helper(getVNodeHelper(context.inSSR, childBlock.isComponent));
            }
          }
          if (memo) {
            const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [
              createSimpleExpression(`_cached`)
            ]));
            loop.body = createBlockStatement([
              createCompoundExpression([`const _memo = (`, memo.exp, `)`]),
              createCompoundExpression([
                `if (_cached`,
                ...keyExp ? [` && _cached.key === `, keyExp] : [],
                ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`
              ]),
              createCompoundExpression([`const _item = `, childBlock]),
              createSimpleExpression(`_item.memo = _memo`),
              createSimpleExpression(`return _item`)
            ]);
            renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));
          } else {
            renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true));
          }
        };
      });
    });
    forAliasRE = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/;
    forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
    stripParensRE = /^\(|\)$/g;
    defaultFallback = createSimpleExpression(`undefined`, false);
    trackSlotScopes = (node, context) => {
      if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {
        const vSlot = findDir(node, "slot");
        if (vSlot) {
          vSlot.exp;
          context.scopes.vSlot++;
          return () => {
            context.scopes.vSlot--;
          };
        }
      }
    };
    trackVForSlotScopes = (node, context) => {
      let vFor;
      if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, "for"))) {
        const result = vFor.parseResult = parseForExpression(vFor.exp, context);
        if (result) {
          const { value, key, index } = result;
          const { addIdentifiers, removeIdentifiers } = context;
          value && addIdentifiers(value);
          key && addIdentifiers(key);
          index && addIdentifiers(index);
          return () => {
            value && removeIdentifiers(value);
            key && removeIdentifiers(key);
            index && removeIdentifiers(index);
          };
        }
      }
    };
    buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false, true, children.length ? children[0].loc : loc);
    directiveImportMap = /* @__PURE__ */ new WeakMap();
    transformElement = (node, context) => {
      return function postTransformElement() {
        node = context.currentNode;
        if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {
          return;
        }
        const { tag, props } = node;
        const isComponent2 = node.tagType === 1;
        let vnodeTag = isComponent2 ? resolveComponentType(node, context) : `"${tag}"`;
        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;
        let vnodeProps;
        let vnodeChildren;
        let vnodePatchFlag;
        let patchFlag = 0;
        let vnodeDynamicProps;
        let dynamicPropNames;
        let vnodeDirectives;
        let shouldUseBlock = isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent2 && (tag === "svg" || tag === "foreignObject");
        if (props.length > 0) {
          const propsBuildResult = buildProps(node, context, void 0, isComponent2, isDynamicComponent);
          vnodeProps = propsBuildResult.props;
          patchFlag = propsBuildResult.patchFlag;
          dynamicPropNames = propsBuildResult.dynamicPropNames;
          const directives = propsBuildResult.directives;
          vnodeDirectives = directives && directives.length ? createArrayExpression(directives.map((dir) => buildDirectiveArgs(dir, context))) : void 0;
          if (propsBuildResult.shouldUseBlock) {
            shouldUseBlock = true;
          }
        }
        if (node.children.length > 0) {
          if (vnodeTag === KEEP_ALIVE) {
            shouldUseBlock = true;
            patchFlag |= 1024;
            if (node.children.length > 1) {
              context.onError(createCompilerError(45, {
                start: node.children[0].loc.start,
                end: node.children[node.children.length - 1].loc.end,
                source: ""
              }));
            }
          }
          const shouldBuildAsSlots = isComponent2 && vnodeTag !== TELEPORT && vnodeTag !== KEEP_ALIVE;
          if (shouldBuildAsSlots) {
            const { slots, hasDynamicSlots } = buildSlots(node, context);
            vnodeChildren = slots;
            if (hasDynamicSlots) {
              patchFlag |= 1024;
            }
          } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {
            const child = node.children[0];
            const type = child.type;
            const hasDynamicTextChild = type === 5 || type === 8;
            if (hasDynamicTextChild && getConstantType(child, context) === 0) {
              patchFlag |= 1;
            }
            if (hasDynamicTextChild || type === 2) {
              vnodeChildren = child;
            } else {
              vnodeChildren = node.children;
            }
          } else {
            vnodeChildren = node.children;
          }
        }
        if (patchFlag !== 0) {
          if (true) {
            if (patchFlag < 0) {
              vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;
            } else {
              const flagNames = Object.keys(PatchFlagNames).map(Number).filter((n) => n > 0 && patchFlag & n).map((n) => PatchFlagNames[n]).join(`, `);
              vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;
            }
          } else {
            vnodePatchFlag = String(patchFlag);
          }
          if (dynamicPropNames && dynamicPropNames.length) {
            vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);
          }
        }
        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false, isComponent2, node.loc);
      };
    };
    true ? Object.freeze({}) : {};
    true ? Object.freeze([]) : [];
    cacheStringFunction = (fn) => {
      const cache = /* @__PURE__ */ Object.create(null);
      return (str) => {
        const hit = cache[str];
        return hit || (cache[str] = fn(str));
      };
    };
    camelizeRE = /-(\w)/g;
    camelize2 = cacheStringFunction((str) => {
      return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : "");
    });
    transformSlotOutlet = (node, context) => {
      if (isSlotOutlet(node)) {
        const { children, loc } = node;
        const { slotName, slotProps } = processSlotOutlet(node, context);
        const slotArgs = [
          context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,
          slotName,
          "{}",
          "undefined",
          "true"
        ];
        let expectedLen = 2;
        if (slotProps) {
          slotArgs[2] = slotProps;
          expectedLen = 3;
        }
        if (children.length) {
          slotArgs[3] = createFunctionExpression([], children, false, false, loc);
          expectedLen = 4;
        }
        if (context.scopeId && !context.slotted) {
          expectedLen = 5;
        }
        slotArgs.splice(expectedLen);
        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);
      }
    };
    fnExpRE = /^\s*([\w$_]+|(async\s*)?\([^)]*?\))\s*=>|^\s*(async\s+)?function(?:\s+[\w$]+)?\s*\(/;
    transformOn = (dir, node, context, augmentor) => {
      const { loc, modifiers, arg } = dir;
      if (!dir.exp && !modifiers.length) {
        context.onError(createCompilerError(35, loc));
      }
      let eventName;
      if (arg.type === 4) {
        if (arg.isStatic) {
          let rawName = arg.content;
          if (rawName.startsWith("vue:")) {
            rawName = `vnode-${rawName.slice(4)}`;
          }
          const eventString = node.tagType === 1 || rawName.startsWith("vnode") || !/[A-Z]/.test(rawName) ? toHandlerKey(camelize(rawName)) : `on:${rawName}`;
          eventName = createSimpleExpression(eventString, true, arg.loc);
        } else {
          eventName = createCompoundExpression([
            `${context.helperString(TO_HANDLER_KEY)}(`,
            arg,
            `)`
          ]);
        }
      } else {
        eventName = arg;
        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);
        eventName.children.push(`)`);
      }
      let exp = dir.exp;
      if (exp && !exp.content.trim()) {
        exp = void 0;
      }
      let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;
      if (exp) {
        const isMemberExp = isMemberExpression(exp.content);
        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));
        const hasMultipleStatements = exp.content.includes(`;`);
        if (true) {
          validateBrowserExpression(exp, context, false, hasMultipleStatements);
        }
        if (isInlineStatement || shouldCache && isMemberExp) {
          exp = createCompoundExpression([
            `${isInlineStatement ? `$event` : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,
            exp,
            hasMultipleStatements ? `}` : `)`
          ]);
        }
      }
      let ret = {
        props: [
          createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))
        ]
      };
      if (augmentor) {
        ret = augmentor(ret);
      }
      if (shouldCache) {
        ret.props[0].value = context.cache(ret.props[0].value);
      }
      ret.props.forEach((p) => p.key.isHandlerKey = true);
      return ret;
    };
    transformBind = (dir, _node, context) => {
      const { exp, modifiers, loc } = dir;
      const arg = dir.arg;
      if (arg.type !== 4) {
        arg.children.unshift(`(`);
        arg.children.push(`) || ""`);
      } else if (!arg.isStatic) {
        arg.content = `${arg.content} || ""`;
      }
      if (modifiers.includes("camel")) {
        if (arg.type === 4) {
          if (arg.isStatic) {
            arg.content = camelize(arg.content);
          } else {
            arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;
          }
        } else {
          arg.children.unshift(`${context.helperString(CAMELIZE)}(`);
          arg.children.push(`)`);
        }
      }
      if (!context.inSSR) {
        if (modifiers.includes("prop")) {
          injectPrefix(arg, ".");
        }
        if (modifiers.includes("attr")) {
          injectPrefix(arg, "^");
        }
      }
      if (!exp || exp.type === 4 && !exp.content.trim()) {
        context.onError(createCompilerError(34, loc));
        return {
          props: [createObjectProperty(arg, createSimpleExpression("", true, loc))]
        };
      }
      return {
        props: [createObjectProperty(arg, exp)]
      };
    };
    injectPrefix = (arg, prefix) => {
      if (arg.type === 4) {
        if (arg.isStatic) {
          arg.content = prefix + arg.content;
        } else {
          arg.content = `\`${prefix}\${${arg.content}}\``;
        }
      } else {
        arg.children.unshift(`'${prefix}' + (`);
        arg.children.push(`)`);
      }
    };
    transformText = (node, context) => {
      if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {
        return () => {
          const children = node.children;
          let currentContainer = void 0;
          let hasText = false;
          for (let i = 0; i < children.length; i++) {
            const child = children[i];
            if (isText(child)) {
              hasText = true;
              for (let j = i + 1; j < children.length; j++) {
                const next = children[j];
                if (isText(next)) {
                  if (!currentContainer) {
                    currentContainer = children[i] = createCompoundExpression([child], child.loc);
                  }
                  currentContainer.children.push(` + `, next);
                  children.splice(j, 1);
                  j--;
                } else {
                  currentContainer = void 0;
                  break;
                }
              }
            }
          }
          if (!hasText || children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && !node.props.find((p) => p.type === 7 && !context.directiveTransforms[p.name]) && !(node.tag === "template"))) {
            return;
          }
          for (let i = 0; i < children.length; i++) {
            const child = children[i];
            if (isText(child) || child.type === 8) {
              const callArgs = [];
              if (child.type !== 2 || child.content !== " ") {
                callArgs.push(child);
              }
              if (!context.ssr && getConstantType(child, context) === 0) {
                callArgs.push(1 + (true ? ` /* ${PatchFlagNames[1]} */` : ``));
              }
              children[i] = {
                type: 12,
                content: child,
                loc: child.loc,
                codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)
              };
            }
          }
        };
      }
    };
    seen = /* @__PURE__ */ new WeakSet();
    transformOnce = (node, context) => {
      if (node.type === 1 && findDir(node, "once", true)) {
        if (seen.has(node) || context.inVOnce) {
          return;
        }
        seen.add(node);
        context.inVOnce = true;
        context.helper(SET_BLOCK_TRACKING);
        return () => {
          context.inVOnce = false;
          const cur = context.currentNode;
          if (cur.codegenNode) {
            cur.codegenNode = context.cache(cur.codegenNode, true);
          }
        };
      }
    };
    transformModel = (dir, node, context) => {
      const { exp, arg } = dir;
      if (!exp) {
        context.onError(createCompilerError(41, dir.loc));
        return createTransformProps();
      }
      const rawExp = exp.loc.source;
      const expString = exp.type === 4 ? exp.content : rawExp;
      context.bindingMetadata[rawExp];
      const maybeRef = false;
      if (!expString.trim() || !isMemberExpression(expString) && !maybeRef) {
        context.onError(createCompilerError(42, exp.loc));
        return createTransformProps();
      }
      const propName = arg ? arg : createSimpleExpression("modelValue", true);
      const eventName = arg ? isStaticExp(arg) ? `onUpdate:${arg.content}` : createCompoundExpression(['"onUpdate:" + ', arg]) : `onUpdate:modelValue`;
      let assignmentExp;
      const eventArg = context.isTS ? `($event: any)` : `$event`;
      {
        assignmentExp = createCompoundExpression([
          `${eventArg} => ((`,
          exp,
          `) = $event)`
        ]);
      }
      const props = [
        createObjectProperty(propName, dir.exp),
        createObjectProperty(eventName, assignmentExp)
      ];
      if (dir.modifiers.length && node.tagType === 1) {
        const modifiers = dir.modifiers.map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);
        const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + "Modifiers"']) : `modelModifiers`;
        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2)));
      }
      return createTransformProps(props);
    };
    validDivisionCharRE = /[\w).+\-_$\]]/;
    transformFilter = (node, context) => {
      if (!isCompatEnabled("COMPILER_FILTER", context)) {
        return;
      }
      if (node.type === 5) {
        rewriteFilter(node.content, context);
      }
      if (node.type === 1) {
        node.props.forEach((prop) => {
          if (prop.type === 7 && prop.name !== "for" && prop.exp) {
            rewriteFilter(prop.exp, context);
          }
        });
      }
    };
    seen$1 = /* @__PURE__ */ new WeakSet();
    transformMemo = (node, context) => {
      if (node.type === 1) {
        const dir = findDir(node, "memo");
        if (!dir || seen$1.has(node)) {
          return;
        }
        seen$1.add(node);
        return () => {
          const codegenNode = node.codegenNode || context.currentNode.codegenNode;
          if (codegenNode && codegenNode.type === 13) {
            if (node.tagType !== 1) {
              makeBlock(codegenNode, context);
            }
            node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [
              dir.exp,
              createFunctionExpression(void 0, codegenNode),
              `_cache`,
              String(context.cached++)
            ]);
          }
        };
      }
    };
    noopDirectiveTransform = () => ({ props: [] });
  }
});

// node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js
var compiler_dom_esm_bundler_exports = {};
__export(compiler_dom_esm_bundler_exports, {
  BASE_TRANSITION: () => BASE_TRANSITION,
  CAMELIZE: () => CAMELIZE,
  CAPITALIZE: () => CAPITALIZE,
  CREATE_BLOCK: () => CREATE_BLOCK,
  CREATE_COMMENT: () => CREATE_COMMENT,
  CREATE_ELEMENT_BLOCK: () => CREATE_ELEMENT_BLOCK,
  CREATE_ELEMENT_VNODE: () => CREATE_ELEMENT_VNODE,
  CREATE_SLOTS: () => CREATE_SLOTS,
  CREATE_STATIC: () => CREATE_STATIC,
  CREATE_TEXT: () => CREATE_TEXT,
  CREATE_VNODE: () => CREATE_VNODE,
  DOMDirectiveTransforms: () => DOMDirectiveTransforms,
  DOMNodeTransforms: () => DOMNodeTransforms,
  FRAGMENT: () => FRAGMENT,
  GUARD_REACTIVE_PROPS: () => GUARD_REACTIVE_PROPS,
  IS_MEMO_SAME: () => IS_MEMO_SAME,
  IS_REF: () => IS_REF,
  KEEP_ALIVE: () => KEEP_ALIVE,
  MERGE_PROPS: () => MERGE_PROPS,
  NORMALIZE_CLASS: () => NORMALIZE_CLASS,
  NORMALIZE_PROPS: () => NORMALIZE_PROPS,
  NORMALIZE_STYLE: () => NORMALIZE_STYLE,
  OPEN_BLOCK: () => OPEN_BLOCK,
  POP_SCOPE_ID: () => POP_SCOPE_ID,
  PUSH_SCOPE_ID: () => PUSH_SCOPE_ID,
  RENDER_LIST: () => RENDER_LIST,
  RENDER_SLOT: () => RENDER_SLOT,
  RESOLVE_COMPONENT: () => RESOLVE_COMPONENT,
  RESOLVE_DIRECTIVE: () => RESOLVE_DIRECTIVE,
  RESOLVE_DYNAMIC_COMPONENT: () => RESOLVE_DYNAMIC_COMPONENT,
  RESOLVE_FILTER: () => RESOLVE_FILTER,
  SET_BLOCK_TRACKING: () => SET_BLOCK_TRACKING,
  SUSPENSE: () => SUSPENSE,
  TELEPORT: () => TELEPORT,
  TO_DISPLAY_STRING: () => TO_DISPLAY_STRING,
  TO_HANDLERS: () => TO_HANDLERS,
  TO_HANDLER_KEY: () => TO_HANDLER_KEY,
  TRANSITION: () => TRANSITION,
  TRANSITION_GROUP: () => TRANSITION_GROUP,
  UNREF: () => UNREF,
  V_MODEL_CHECKBOX: () => V_MODEL_CHECKBOX,
  V_MODEL_DYNAMIC: () => V_MODEL_DYNAMIC,
  V_MODEL_RADIO: () => V_MODEL_RADIO,
  V_MODEL_SELECT: () => V_MODEL_SELECT,
  V_MODEL_TEXT: () => V_MODEL_TEXT,
  V_ON_WITH_KEYS: () => V_ON_WITH_KEYS,
  V_ON_WITH_MODIFIERS: () => V_ON_WITH_MODIFIERS,
  V_SHOW: () => V_SHOW,
  WITH_CTX: () => WITH_CTX,
  WITH_DIRECTIVES: () => WITH_DIRECTIVES,
  WITH_MEMO: () => WITH_MEMO,
  advancePositionWithClone: () => advancePositionWithClone,
  advancePositionWithMutation: () => advancePositionWithMutation,
  assert: () => assert,
  baseCompile: () => baseCompile,
  baseParse: () => baseParse,
  buildDirectiveArgs: () => buildDirectiveArgs,
  buildProps: () => buildProps,
  buildSlots: () => buildSlots,
  checkCompatEnabled: () => checkCompatEnabled,
  compile: () => compile,
  createArrayExpression: () => createArrayExpression,
  createAssignmentExpression: () => createAssignmentExpression,
  createBlockStatement: () => createBlockStatement,
  createCacheExpression: () => createCacheExpression,
  createCallExpression: () => createCallExpression,
  createCompilerError: () => createCompilerError,
  createCompoundExpression: () => createCompoundExpression,
  createConditionalExpression: () => createConditionalExpression,
  createDOMCompilerError: () => createDOMCompilerError,
  createForLoopParams: () => createForLoopParams,
  createFunctionExpression: () => createFunctionExpression,
  createIfStatement: () => createIfStatement,
  createInterpolation: () => createInterpolation,
  createObjectExpression: () => createObjectExpression,
  createObjectProperty: () => createObjectProperty,
  createReturnStatement: () => createReturnStatement,
  createRoot: () => createRoot,
  createSequenceExpression: () => createSequenceExpression,
  createSimpleExpression: () => createSimpleExpression,
  createStructuralDirectiveTransform: () => createStructuralDirectiveTransform,
  createTemplateLiteral: () => createTemplateLiteral,
  createTransformContext: () => createTransformContext,
  createVNodeCall: () => createVNodeCall,
  extractIdentifiers: () => extractIdentifiers,
  findDir: () => findDir,
  findProp: () => findProp,
  generate: () => generate,
  generateCodeFrame: () => generateCodeFrame,
  getBaseTransformPreset: () => getBaseTransformPreset,
  getConstantType: () => getConstantType,
  getInnerRange: () => getInnerRange,
  getMemoedVNodeCall: () => getMemoedVNodeCall,
  getVNodeBlockHelper: () => getVNodeBlockHelper,
  getVNodeHelper: () => getVNodeHelper,
  hasDynamicKeyVBind: () => hasDynamicKeyVBind,
  hasScopeRef: () => hasScopeRef,
  helperNameMap: () => helperNameMap,
  injectProp: () => injectProp,
  isBuiltInType: () => isBuiltInType,
  isCoreComponent: () => isCoreComponent,
  isFunctionType: () => isFunctionType,
  isInDestructureAssignment: () => isInDestructureAssignment,
  isMemberExpression: () => isMemberExpression,
  isMemberExpressionBrowser: () => isMemberExpressionBrowser,
  isMemberExpressionNode: () => isMemberExpressionNode,
  isReferencedIdentifier: () => isReferencedIdentifier,
  isSimpleIdentifier: () => isSimpleIdentifier,
  isSlotOutlet: () => isSlotOutlet,
  isStaticArgOf: () => isStaticArgOf,
  isStaticExp: () => isStaticExp,
  isStaticProperty: () => isStaticProperty,
  isStaticPropertyKey: () => isStaticPropertyKey,
  isTemplateNode: () => isTemplateNode,
  isText: () => isText,
  isVSlot: () => isVSlot,
  locStub: () => locStub,
  makeBlock: () => makeBlock,
  noopDirectiveTransform: () => noopDirectiveTransform,
  parse: () => parse,
  parserOptions: () => parserOptions,
  processExpression: () => processExpression,
  processFor: () => processFor,
  processIf: () => processIf,
  processSlotOutlet: () => processSlotOutlet,
  registerRuntimeHelpers: () => registerRuntimeHelpers,
  resolveComponentType: () => resolveComponentType,
  toValidAssetId: () => toValidAssetId,
  trackSlotScopes: () => trackSlotScopes,
  trackVForSlotScopes: () => trackVForSlotScopes,
  transform: () => transform,
  transformBind: () => transformBind,
  transformElement: () => transformElement,
  transformExpression: () => transformExpression,
  transformModel: () => transformModel,
  transformOn: () => transformOn,
  transformStyle: () => transformStyle,
  traverseNode: () => traverseNode,
  walkBlockDeclarations: () => walkBlockDeclarations,
  walkFunctionParams: () => walkFunctionParams,
  walkIdentifiers: () => walkIdentifiers,
  warnDeprecation: () => warnDeprecation
});
function decodeHtmlBrowser(raw, asAttr = false) {
  if (!decoder) {
    decoder = document.createElement("div");
  }
  if (asAttr) {
    decoder.innerHTML = `<div foo="${raw.replace(/"/g, "&quot;")}">`;
    return decoder.children[0].getAttribute("foo");
  } else {
    decoder.innerHTML = raw;
    return decoder.textContent;
  }
}
function createDOMCompilerError(code, loc) {
  return createCompilerError(code, loc, true ? DOMErrorMessages : void 0);
}
function hasMultipleChildren(node) {
  const children = node.children = node.children.filter((c) => c.type !== 3 && !(c.type === 2 && !c.content.trim()));
  const child = children[0];
  return children.length !== 1 || child.type === 11 || child.type === 9 && child.branches.some(hasMultipleChildren);
}
function compile(template, options = {}) {
  return baseCompile(template, extend({}, parserOptions, options, {
    nodeTransforms: [
      ignoreSideEffectTags,
      ...DOMNodeTransforms,
      ...options.nodeTransforms || []
    ],
    directiveTransforms: extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),
    transformHoist: null
  }));
}
function parse(template, options = {}) {
  return baseParse(template, extend({}, parserOptions, options));
}
var V_MODEL_RADIO, V_MODEL_CHECKBOX, V_MODEL_TEXT, V_MODEL_SELECT, V_MODEL_DYNAMIC, V_ON_WITH_MODIFIERS, V_ON_WITH_KEYS, V_SHOW, TRANSITION, TRANSITION_GROUP, decoder, isRawTextContainer, parserOptions, transformStyle, parseInlineCSS, DOMErrorMessages, transformVHtml, transformVText, transformModel2, isEventOptionModifier, isNonKeyModifier, maybeKeyModifier, isKeyboardEvent, resolveModifiers, transformClick, transformOn2, transformShow, transformTransition, ignoreSideEffectTags, DOMNodeTransforms, DOMDirectiveTransforms;
var init_compiler_dom_esm_bundler = __esm({
  "node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js"() {
    init_compiler_core_esm_bundler();
    init_compiler_core_esm_bundler();
    init_shared_esm_bundler();
    V_MODEL_RADIO = Symbol(true ? `vModelRadio` : ``);
    V_MODEL_CHECKBOX = Symbol(true ? `vModelCheckbox` : ``);
    V_MODEL_TEXT = Symbol(true ? `vModelText` : ``);
    V_MODEL_SELECT = Symbol(true ? `vModelSelect` : ``);
    V_MODEL_DYNAMIC = Symbol(true ? `vModelDynamic` : ``);
    V_ON_WITH_MODIFIERS = Symbol(true ? `vOnModifiersGuard` : ``);
    V_ON_WITH_KEYS = Symbol(true ? `vOnKeysGuard` : ``);
    V_SHOW = Symbol(true ? `vShow` : ``);
    TRANSITION = Symbol(true ? `Transition` : ``);
    TRANSITION_GROUP = Symbol(true ? `TransitionGroup` : ``);
    registerRuntimeHelpers({
      [V_MODEL_RADIO]: `vModelRadio`,
      [V_MODEL_CHECKBOX]: `vModelCheckbox`,
      [V_MODEL_TEXT]: `vModelText`,
      [V_MODEL_SELECT]: `vModelSelect`,
      [V_MODEL_DYNAMIC]: `vModelDynamic`,
      [V_ON_WITH_MODIFIERS]: `withModifiers`,
      [V_ON_WITH_KEYS]: `withKeys`,
      [V_SHOW]: `vShow`,
      [TRANSITION]: `Transition`,
      [TRANSITION_GROUP]: `TransitionGroup`
    });
    isRawTextContainer = makeMap("style,iframe,script,noscript", true);
    parserOptions = {
      isVoidTag,
      isNativeTag: (tag) => isHTMLTag(tag) || isSVGTag(tag),
      isPreTag: (tag) => tag === "pre",
      decodeEntities: decodeHtmlBrowser,
      isBuiltInComponent: (tag) => {
        if (isBuiltInType(tag, `Transition`)) {
          return TRANSITION;
        } else if (isBuiltInType(tag, `TransitionGroup`)) {
          return TRANSITION_GROUP;
        }
      },
      getNamespace(tag, parent) {
        let ns = parent ? parent.ns : 0;
        if (parent && ns === 2) {
          if (parent.tag === "annotation-xml") {
            if (tag === "svg") {
              return 1;
            }
            if (parent.props.some((a) => a.type === 6 && a.name === "encoding" && a.value != null && (a.value.content === "text/html" || a.value.content === "application/xhtml+xml"))) {
              ns = 0;
            }
          } else if (/^m(?:[ions]|text)$/.test(parent.tag) && tag !== "mglyph" && tag !== "malignmark") {
            ns = 0;
          }
        } else if (parent && ns === 1) {
          if (parent.tag === "foreignObject" || parent.tag === "desc" || parent.tag === "title") {
            ns = 0;
          }
        }
        if (ns === 0) {
          if (tag === "svg") {
            return 1;
          }
          if (tag === "math") {
            return 2;
          }
        }
        return ns;
      },
      getTextMode({ tag, ns }) {
        if (ns === 0) {
          if (tag === "textarea" || tag === "title") {
            return 1;
          }
          if (isRawTextContainer(tag)) {
            return 2;
          }
        }
        return 0;
      }
    };
    transformStyle = (node) => {
      if (node.type === 1) {
        node.props.forEach((p, i) => {
          if (p.type === 6 && p.name === "style" && p.value) {
            node.props[i] = {
              type: 7,
              name: `bind`,
              arg: createSimpleExpression(`style`, true, p.loc),
              exp: parseInlineCSS(p.value.content, p.loc),
              modifiers: [],
              loc: p.loc
            };
          }
        });
      }
    };
    parseInlineCSS = (cssText, loc) => {
      const normalized = parseStringStyle(cssText);
      return createSimpleExpression(JSON.stringify(normalized), false, loc, 3);
    };
    DOMErrorMessages = {
      [50]: `v-html is missing expression.`,
      [51]: `v-html will override element children.`,
      [52]: `v-text is missing expression.`,
      [53]: `v-text will override element children.`,
      [54]: `v-model can only be used on <input>, <textarea> and <select> elements.`,
      [55]: `v-model argument is not supported on plain elements.`,
      [56]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,
      [57]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,
      [58]: `v-show is missing expression.`,
      [59]: `<Transition> expects exactly one child element or component.`,
      [60]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`
    };
    transformVHtml = (dir, node, context) => {
      const { exp, loc } = dir;
      if (!exp) {
        context.onError(createDOMCompilerError(50, loc));
      }
      if (node.children.length) {
        context.onError(createDOMCompilerError(51, loc));
        node.children.length = 0;
      }
      return {
        props: [
          createObjectProperty(createSimpleExpression(`innerHTML`, true, loc), exp || createSimpleExpression("", true))
        ]
      };
    };
    transformVText = (dir, node, context) => {
      const { exp, loc } = dir;
      if (!exp) {
        context.onError(createDOMCompilerError(52, loc));
      }
      if (node.children.length) {
        context.onError(createDOMCompilerError(53, loc));
        node.children.length = 0;
      }
      return {
        props: [
          createObjectProperty(createSimpleExpression(`textContent`, true), exp ? getConstantType(exp, context) > 0 ? exp : createCallExpression(context.helperString(TO_DISPLAY_STRING), [exp], loc) : createSimpleExpression("", true))
        ]
      };
    };
    transformModel2 = (dir, node, context) => {
      const baseResult = transformModel(dir, node, context);
      if (!baseResult.props.length || node.tagType === 1) {
        return baseResult;
      }
      if (dir.arg) {
        context.onError(createDOMCompilerError(55, dir.arg.loc));
      }
      function checkDuplicatedValue() {
        const value = findProp(node, "value");
        if (value) {
          context.onError(createDOMCompilerError(57, value.loc));
        }
      }
      const { tag } = node;
      const isCustomElement = context.isCustomElement(tag);
      if (tag === "input" || tag === "textarea" || tag === "select" || isCustomElement) {
        let directiveToUse = V_MODEL_TEXT;
        let isInvalidType = false;
        if (tag === "input" || isCustomElement) {
          const type = findProp(node, `type`);
          if (type) {
            if (type.type === 7) {
              directiveToUse = V_MODEL_DYNAMIC;
            } else if (type.value) {
              switch (type.value.content) {
                case "radio":
                  directiveToUse = V_MODEL_RADIO;
                  break;
                case "checkbox":
                  directiveToUse = V_MODEL_CHECKBOX;
                  break;
                case "file":
                  isInvalidType = true;
                  context.onError(createDOMCompilerError(56, dir.loc));
                  break;
                default:
                  checkDuplicatedValue();
                  break;
              }
            }
          } else if (hasDynamicKeyVBind(node)) {
            directiveToUse = V_MODEL_DYNAMIC;
          } else {
            checkDuplicatedValue();
          }
        } else if (tag === "select") {
          directiveToUse = V_MODEL_SELECT;
        } else {
          checkDuplicatedValue();
        }
        if (!isInvalidType) {
          baseResult.needRuntime = context.helper(directiveToUse);
        }
      } else {
        context.onError(createDOMCompilerError(54, dir.loc));
      }
      baseResult.props = baseResult.props.filter((p) => !(p.key.type === 4 && p.key.content === "modelValue"));
      return baseResult;
    };
    isEventOptionModifier = makeMap(`passive,once,capture`);
    isNonKeyModifier = makeMap(
      `stop,prevent,self,ctrl,shift,alt,meta,exact,middle`
    );
    maybeKeyModifier = makeMap("left,right");
    isKeyboardEvent = makeMap(`onkeyup,onkeydown,onkeypress`, true);
    resolveModifiers = (key, modifiers, context, loc) => {
      const keyModifiers = [];
      const nonKeyModifiers = [];
      const eventOptionModifiers = [];
      for (let i = 0; i < modifiers.length; i++) {
        const modifier = modifiers[i];
        if (modifier === "native" && checkCompatEnabled("COMPILER_V_ON_NATIVE", context, loc)) {
          eventOptionModifiers.push(modifier);
        } else if (isEventOptionModifier(modifier)) {
          eventOptionModifiers.push(modifier);
        } else {
          if (maybeKeyModifier(modifier)) {
            if (isStaticExp(key)) {
              if (isKeyboardEvent(key.content)) {
                keyModifiers.push(modifier);
              } else {
                nonKeyModifiers.push(modifier);
              }
            } else {
              keyModifiers.push(modifier);
              nonKeyModifiers.push(modifier);
            }
          } else {
            if (isNonKeyModifier(modifier)) {
              nonKeyModifiers.push(modifier);
            } else {
              keyModifiers.push(modifier);
            }
          }
        }
      }
      return {
        keyModifiers,
        nonKeyModifiers,
        eventOptionModifiers
      };
    };
    transformClick = (key, event) => {
      const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === "onclick";
      return isStaticClick ? createSimpleExpression(event, true) : key.type !== 4 ? createCompoundExpression([
        `(`,
        key,
        `) === "onClick" ? "${event}" : (`,
        key,
        `)`
      ]) : key;
    };
    transformOn2 = (dir, node, context) => {
      return transformOn(dir, node, context, (baseResult) => {
        const { modifiers } = dir;
        if (!modifiers.length)
          return baseResult;
        let { key, value: handlerExp } = baseResult.props[0];
        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);
        if (nonKeyModifiers.includes("right")) {
          key = transformClick(key, `onContextmenu`);
        }
        if (nonKeyModifiers.includes("middle")) {
          key = transformClick(key, `onMouseup`);
        }
        if (nonKeyModifiers.length) {
          handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [
            handlerExp,
            JSON.stringify(nonKeyModifiers)
          ]);
        }
        if (keyModifiers.length && (!isStaticExp(key) || isKeyboardEvent(key.content))) {
          handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [
            handlerExp,
            JSON.stringify(keyModifiers)
          ]);
        }
        if (eventOptionModifiers.length) {
          const modifierPostfix = eventOptionModifiers.map(capitalize).join("");
          key = isStaticExp(key) ? createSimpleExpression(`${key.content}${modifierPostfix}`, true) : createCompoundExpression([`(`, key, `) + "${modifierPostfix}"`]);
        }
        return {
          props: [createObjectProperty(key, handlerExp)]
        };
      });
    };
    transformShow = (dir, node, context) => {
      const { exp, loc } = dir;
      if (!exp) {
        context.onError(createDOMCompilerError(58, loc));
      }
      return {
        props: [],
        needRuntime: context.helper(V_SHOW)
      };
    };
    transformTransition = (node, context) => {
      if (node.type === 1 && node.tagType === 1) {
        const component = context.isBuiltInComponent(node.tag);
        if (component === TRANSITION) {
          return () => {
            if (!node.children.length) {
              return;
            }
            if (hasMultipleChildren(node)) {
              context.onError(createDOMCompilerError(59, {
                start: node.children[0].loc.start,
                end: node.children[node.children.length - 1].loc.end,
                source: ""
              }));
            }
            const child = node.children[0];
            if (child.type === 1) {
              for (const p of child.props) {
                if (p.type === 7 && p.name === "show") {
                  node.props.push({
                    type: 6,
                    name: "persisted",
                    value: void 0,
                    loc: node.loc
                  });
                }
              }
            }
          };
        }
      }
    };
    ignoreSideEffectTags = (node, context) => {
      if (node.type === 1 && node.tagType === 0 && (node.tag === "script" || node.tag === "style")) {
        context.onError(createDOMCompilerError(60, node.loc));
        context.removeNode();
      }
    };
    DOMNodeTransforms = [
      transformStyle,
      ...true ? [transformTransition] : []
    ];
    DOMDirectiveTransforms = {
      cloak: noopDirectiveTransform,
      html: transformVHtml,
      text: transformVText,
      model: transformModel2,
      on: transformOn2,
      show: transformShow
    };
  }
});

// node_modules/vue/dist/vue.cjs.js
var require_vue_cjs = __commonJS({
  "node_modules/vue/dist/vue.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var compilerDom = (init_compiler_dom_esm_bundler(), __toCommonJS(compiler_dom_esm_bundler_exports));
    var runtimeDom = (init_runtime_dom_esm_bundler(), __toCommonJS(runtime_dom_esm_bundler_exports));
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      if (e) {
        Object.keys(e).forEach(function(k) {
          n[k] = e[k];
        });
      }
      n["default"] = e;
      return Object.freeze(n);
    }
    var runtimeDom__namespace = _interopNamespace(runtimeDom);
    var compileCache = /* @__PURE__ */ Object.create(null);
    function compileToFunction(template, options) {
      if (!shared.isString(template)) {
        if (template.nodeType) {
          template = template.innerHTML;
        } else {
          runtimeDom.warn(`invalid template option: `, template);
          return shared.NOOP;
        }
      }
      const key = template;
      const cached = compileCache[key];
      if (cached) {
        return cached;
      }
      if (template[0] === "#") {
        const el = document.querySelector(template);
        if (!el) {
          runtimeDom.warn(`Template element not found or is empty: ${template}`);
        }
        template = el ? el.innerHTML : ``;
      }
      const opts = shared.extend({
        hoistStatic: true,
        onError,
        onWarn: (e) => onError(e, true)
      }, options);
      if (!opts.isCustomElement && typeof customElements !== "undefined") {
        opts.isCustomElement = (tag) => !!customElements.get(tag);
      }
      const { code } = compilerDom.compile(template, opts);
      function onError(err, asWarning = false) {
        const message = asWarning ? err.message : `Template compilation error: ${err.message}`;
        const codeFrame = err.loc && shared.generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);
        runtimeDom.warn(codeFrame ? `${message}
${codeFrame}` : message);
      }
      const render = new Function("Vue", code)(runtimeDom__namespace);
      render._rc = true;
      return compileCache[key] = render;
    }
    runtimeDom.registerRuntimeCompiler(compileToFunction);
    Object.keys(runtimeDom).forEach(function(k) {
      if (k !== "default")
        exports[k] = runtimeDom[k];
    });
    exports.compile = compileToFunction;
  }
});

// node_modules/vue/index.js
var require_vue = __commonJS({
  "node_modules/vue/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_vue_cjs();
    }
  }
});

// node_modules/lodash/lodash.js
var require_lodash = __commonJS({
  "node_modules/lodash/lodash.js"(exports, module) {
    (function() {
      var undefined2;
      var VERSION = "4.17.21";
      var LARGE_ARRAY_SIZE = 200;
      var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
      var HASH_UNDEFINED = "__lodash_hash_undefined__";
      var MAX_MEMOIZE_SIZE = 500;
      var PLACEHOLDER = "__lodash_placeholder__";
      var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
      var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
      var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
      var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
      var HOT_COUNT = 800, HOT_SPAN = 16;
      var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
      var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN = 0 / 0;
      var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
      var wrapFlags = [
        ["ary", WRAP_ARY_FLAG],
        ["bind", WRAP_BIND_FLAG],
        ["bindKey", WRAP_BIND_KEY_FLAG],
        ["curry", WRAP_CURRY_FLAG],
        ["curryRight", WRAP_CURRY_RIGHT_FLAG],
        ["flip", WRAP_FLIP_FLAG],
        ["partial", WRAP_PARTIAL_FLAG],
        ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
        ["rearg", WRAP_REARG_FLAG]
      ];
      var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
      var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
      var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
      var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
      var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
      var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
      var reTrimStart = /^\s+/;
      var reWhitespace = /\s/;
      var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
      var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
      var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
      var reEscapeChar = /\\(\\)?/g;
      var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
      var reFlags = /\w*$/;
      var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
      var reIsBinary = /^0b[01]+$/i;
      var reIsHostCtor = /^\[object .+?Constructor\]$/;
      var reIsOctal = /^0o[0-7]+$/i;
      var reIsUint = /^(?:0|[1-9]\d*)$/;
      var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
      var reNoMatch = /($^)/;
      var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
      var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
      var rsApos = "['\u2019]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
      var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
      var reApos = RegExp(rsApos, "g");
      var reComboMark = RegExp(rsCombo, "g");
      var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
      var reUnicodeWord = RegExp([
        rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
        rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
        rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
        rsUpper + "+" + rsOptContrUpper,
        rsOrdUpper,
        rsOrdLower,
        rsDigits,
        rsEmoji
      ].join("|"), "g");
      var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
      var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
      var contextProps = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ];
      var templateCounter = -1;
      var typedArrayTags = {};
      typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
      typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
      var cloneableTags = {};
      cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
      cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
      var deburredLetters = {
        "\xC0": "A",
        "\xC1": "A",
        "\xC2": "A",
        "\xC3": "A",
        "\xC4": "A",
        "\xC5": "A",
        "\xE0": "a",
        "\xE1": "a",
        "\xE2": "a",
        "\xE3": "a",
        "\xE4": "a",
        "\xE5": "a",
        "\xC7": "C",
        "\xE7": "c",
        "\xD0": "D",
        "\xF0": "d",
        "\xC8": "E",
        "\xC9": "E",
        "\xCA": "E",
        "\xCB": "E",
        "\xE8": "e",
        "\xE9": "e",
        "\xEA": "e",
        "\xEB": "e",
        "\xCC": "I",
        "\xCD": "I",
        "\xCE": "I",
        "\xCF": "I",
        "\xEC": "i",
        "\xED": "i",
        "\xEE": "i",
        "\xEF": "i",
        "\xD1": "N",
        "\xF1": "n",
        "\xD2": "O",
        "\xD3": "O",
        "\xD4": "O",
        "\xD5": "O",
        "\xD6": "O",
        "\xD8": "O",
        "\xF2": "o",
        "\xF3": "o",
        "\xF4": "o",
        "\xF5": "o",
        "\xF6": "o",
        "\xF8": "o",
        "\xD9": "U",
        "\xDA": "U",
        "\xDB": "U",
        "\xDC": "U",
        "\xF9": "u",
        "\xFA": "u",
        "\xFB": "u",
        "\xFC": "u",
        "\xDD": "Y",
        "\xFD": "y",
        "\xFF": "y",
        "\xC6": "Ae",
        "\xE6": "ae",
        "\xDE": "Th",
        "\xFE": "th",
        "\xDF": "ss",
        "\u0100": "A",
        "\u0102": "A",
        "\u0104": "A",
        "\u0101": "a",
        "\u0103": "a",
        "\u0105": "a",
        "\u0106": "C",
        "\u0108": "C",
        "\u010A": "C",
        "\u010C": "C",
        "\u0107": "c",
        "\u0109": "c",
        "\u010B": "c",
        "\u010D": "c",
        "\u010E": "D",
        "\u0110": "D",
        "\u010F": "d",
        "\u0111": "d",
        "\u0112": "E",
        "\u0114": "E",
        "\u0116": "E",
        "\u0118": "E",
        "\u011A": "E",
        "\u0113": "e",
        "\u0115": "e",
        "\u0117": "e",
        "\u0119": "e",
        "\u011B": "e",
        "\u011C": "G",
        "\u011E": "G",
        "\u0120": "G",
        "\u0122": "G",
        "\u011D": "g",
        "\u011F": "g",
        "\u0121": "g",
        "\u0123": "g",
        "\u0124": "H",
        "\u0126": "H",
        "\u0125": "h",
        "\u0127": "h",
        "\u0128": "I",
        "\u012A": "I",
        "\u012C": "I",
        "\u012E": "I",
        "\u0130": "I",
        "\u0129": "i",
        "\u012B": "i",
        "\u012D": "i",
        "\u012F": "i",
        "\u0131": "i",
        "\u0134": "J",
        "\u0135": "j",
        "\u0136": "K",
        "\u0137": "k",
        "\u0138": "k",
        "\u0139": "L",
        "\u013B": "L",
        "\u013D": "L",
        "\u013F": "L",
        "\u0141": "L",
        "\u013A": "l",
        "\u013C": "l",
        "\u013E": "l",
        "\u0140": "l",
        "\u0142": "l",
        "\u0143": "N",
        "\u0145": "N",
        "\u0147": "N",
        "\u014A": "N",
        "\u0144": "n",
        "\u0146": "n",
        "\u0148": "n",
        "\u014B": "n",
        "\u014C": "O",
        "\u014E": "O",
        "\u0150": "O",
        "\u014D": "o",
        "\u014F": "o",
        "\u0151": "o",
        "\u0154": "R",
        "\u0156": "R",
        "\u0158": "R",
        "\u0155": "r",
        "\u0157": "r",
        "\u0159": "r",
        "\u015A": "S",
        "\u015C": "S",
        "\u015E": "S",
        "\u0160": "S",
        "\u015B": "s",
        "\u015D": "s",
        "\u015F": "s",
        "\u0161": "s",
        "\u0162": "T",
        "\u0164": "T",
        "\u0166": "T",
        "\u0163": "t",
        "\u0165": "t",
        "\u0167": "t",
        "\u0168": "U",
        "\u016A": "U",
        "\u016C": "U",
        "\u016E": "U",
        "\u0170": "U",
        "\u0172": "U",
        "\u0169": "u",
        "\u016B": "u",
        "\u016D": "u",
        "\u016F": "u",
        "\u0171": "u",
        "\u0173": "u",
        "\u0174": "W",
        "\u0175": "w",
        "\u0176": "Y",
        "\u0177": "y",
        "\u0178": "Y",
        "\u0179": "Z",
        "\u017B": "Z",
        "\u017D": "Z",
        "\u017A": "z",
        "\u017C": "z",
        "\u017E": "z",
        "\u0132": "IJ",
        "\u0133": "ij",
        "\u0152": "Oe",
        "\u0153": "oe",
        "\u0149": "'n",
        "\u017F": "s"
      };
      var htmlEscapes = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      };
      var htmlUnescapes = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      };
      var stringEscapes = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      };
      var freeParseFloat = parseFloat, freeParseInt = parseInt;
      var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
      var freeSelf = typeof self == "object" && self && self.Object === Object && self;
      var root = freeGlobal || freeSelf || Function("return this")();
      var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
      var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
      var moduleExports = freeModule && freeModule.exports === freeExports;
      var freeProcess = moduleExports && freeGlobal.process;
      var nodeUtil = function() {
        try {
          var types = freeModule && freeModule.require && freeModule.require("util").types;
          if (types) {
            return types;
          }
          return freeProcess && freeProcess.binding && freeProcess.binding("util");
        } catch (e) {
        }
      }();
      var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
      function apply(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }
      function arrayAggregator(array, setter, iteratee, accumulator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          var value = array[index];
          setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
      }
      function arrayEach(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (iteratee(array[index], index, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEachRight(array, iteratee) {
        var length = array == null ? 0 : array.length;
        while (length--) {
          if (iteratee(array[length], length, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEvery(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (!predicate(array[index], index, array)) {
            return false;
          }
        }
        return true;
      }
      function arrayFilter(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (predicate(value, index, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      function arrayIncludes(array, value) {
        var length = array == null ? 0 : array.length;
        return !!length && baseIndexOf(array, value, 0) > -1;
      }
      function arrayIncludesWith(array, value, comparator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (comparator(value, array[index])) {
            return true;
          }
        }
        return false;
      }
      function arrayMap(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length, result = Array(length);
        while (++index < length) {
          result[index] = iteratee(array[index], index, array);
        }
        return result;
      }
      function arrayPush(array, values) {
        var index = -1, length = values.length, offset = array.length;
        while (++index < length) {
          array[offset + index] = values[index];
        }
        return array;
      }
      function arrayReduce(array, iteratee, accumulator, initAccum) {
        var index = -1, length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[++index];
        }
        while (++index < length) {
          accumulator = iteratee(accumulator, array[index], index, array);
        }
        return accumulator;
      }
      function arrayReduceRight(array, iteratee, accumulator, initAccum) {
        var length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[--length];
        }
        while (length--) {
          accumulator = iteratee(accumulator, array[length], length, array);
        }
        return accumulator;
      }
      function arraySome(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (predicate(array[index], index, array)) {
            return true;
          }
        }
        return false;
      }
      var asciiSize = baseProperty("length");
      function asciiToArray(string) {
        return string.split("");
      }
      function asciiWords(string) {
        return string.match(reAsciiWord) || [];
      }
      function baseFindKey(collection, predicate, eachFunc) {
        var result;
        eachFunc(collection, function(value, key, collection2) {
          if (predicate(value, key, collection2)) {
            result = key;
            return false;
          }
        });
        return result;
      }
      function baseFindIndex(array, predicate, fromIndex, fromRight) {
        var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
        while (fromRight ? index-- : ++index < length) {
          if (predicate(array[index], index, array)) {
            return index;
          }
        }
        return -1;
      }
      function baseIndexOf(array, value, fromIndex) {
        return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
      }
      function baseIndexOfWith(array, value, fromIndex, comparator) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (comparator(array[index], value)) {
            return index;
          }
        }
        return -1;
      }
      function baseIsNaN(value) {
        return value !== value;
      }
      function baseMean(array, iteratee) {
        var length = array == null ? 0 : array.length;
        return length ? baseSum(array, iteratee) / length : NAN;
      }
      function baseProperty(key) {
        return function(object) {
          return object == null ? undefined2 : object[key];
        };
      }
      function basePropertyOf(object) {
        return function(key) {
          return object == null ? undefined2 : object[key];
        };
      }
      function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value, index, collection2) {
          accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection2);
        });
        return accumulator;
      }
      function baseSortBy(array, comparer) {
        var length = array.length;
        array.sort(comparer);
        while (length--) {
          array[length] = array[length].value;
        }
        return array;
      }
      function baseSum(array, iteratee) {
        var result, index = -1, length = array.length;
        while (++index < length) {
          var current = iteratee(array[index]);
          if (current !== undefined2) {
            result = result === undefined2 ? current : result + current;
          }
        }
        return result;
      }
      function baseTimes(n, iteratee) {
        var index = -1, result = Array(n);
        while (++index < n) {
          result[index] = iteratee(index);
        }
        return result;
      }
      function baseToPairs(object, props) {
        return arrayMap(props, function(key) {
          return [key, object[key]];
        });
      }
      function baseTrim(string) {
        return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
      }
      function baseUnary(func) {
        return function(value) {
          return func(value);
        };
      }
      function baseValues(object, props) {
        return arrayMap(props, function(key) {
          return object[key];
        });
      }
      function cacheHas(cache, key) {
        return cache.has(key);
      }
      function charsStartIndex(strSymbols, chrSymbols) {
        var index = -1, length = strSymbols.length;
        while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function charsEndIndex(strSymbols, chrSymbols) {
        var index = strSymbols.length;
        while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function countHolders(array, placeholder) {
        var length = array.length, result = 0;
        while (length--) {
          if (array[length] === placeholder) {
            ++result;
          }
        }
        return result;
      }
      var deburrLetter = basePropertyOf(deburredLetters);
      var escapeHtmlChar = basePropertyOf(htmlEscapes);
      function escapeStringChar(chr) {
        return "\\" + stringEscapes[chr];
      }
      function getValue(object, key) {
        return object == null ? undefined2 : object[key];
      }
      function hasUnicode(string) {
        return reHasUnicode.test(string);
      }
      function hasUnicodeWord(string) {
        return reHasUnicodeWord.test(string);
      }
      function iteratorToArray(iterator) {
        var data, result = [];
        while (!(data = iterator.next()).done) {
          result.push(data.value);
        }
        return result;
      }
      function mapToArray(map) {
        var index = -1, result = Array(map.size);
        map.forEach(function(value, key) {
          result[++index] = [key, value];
        });
        return result;
      }
      function overArg(func, transform2) {
        return function(arg) {
          return func(transform2(arg));
        };
      }
      function replaceHolders(array, placeholder) {
        var index = -1, length = array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (value === placeholder || value === PLACEHOLDER) {
            array[index] = PLACEHOLDER;
            result[resIndex++] = index;
          }
        }
        return result;
      }
      function setToArray(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = value;
        });
        return result;
      }
      function setToPairs(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = [value, value];
        });
        return result;
      }
      function strictIndexOf(array, value, fromIndex) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (array[index] === value) {
            return index;
          }
        }
        return -1;
      }
      function strictLastIndexOf(array, value, fromIndex) {
        var index = fromIndex + 1;
        while (index--) {
          if (array[index] === value) {
            return index;
          }
        }
        return index;
      }
      function stringSize(string) {
        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
      }
      function stringToArray(string) {
        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
      }
      function trimmedEndIndex(string) {
        var index = string.length;
        while (index-- && reWhitespace.test(string.charAt(index))) {
        }
        return index;
      }
      var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
      function unicodeSize(string) {
        var result = reUnicode.lastIndex = 0;
        while (reUnicode.test(string)) {
          ++result;
        }
        return result;
      }
      function unicodeToArray(string) {
        return string.match(reUnicode) || [];
      }
      function unicodeWords(string) {
        return string.match(reUnicodeWord) || [];
      }
      var runInContext = function runInContext2(context) {
        context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
        var Array2 = context.Array, Date2 = context.Date, Error2 = context.Error, Function2 = context.Function, Math2 = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String2 = context.String, TypeError = context.TypeError;
        var arrayProto = Array2.prototype, funcProto = Function2.prototype, objectProto = Object2.prototype;
        var coreJsData = context["__core-js_shared__"];
        var funcToString = funcProto.toString;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var idCounter = 0;
        var maskSrcKey = function() {
          var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
          return uid ? "Symbol(src)_1." + uid : "";
        }();
        var nativeObjectToString = objectProto.toString;
        var objectCtorString = funcToString.call(Object2);
        var oldDash = root._;
        var reIsNative = RegExp2(
          "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        );
        var Buffer = moduleExports ? context.Buffer : undefined2, Symbol2 = context.Symbol, Uint8Array2 = context.Uint8Array, allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined2, getPrototype = overArg(Object2.getPrototypeOf, Object2), objectCreate = Object2.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : undefined2, symIterator = Symbol2 ? Symbol2.iterator : undefined2, symToStringTag = Symbol2 ? Symbol2.toStringTag : undefined2;
        var defineProperty = function() {
          try {
            var func = getNative(Object2, "defineProperty");
            func({}, "", {});
            return func;
          } catch (e) {
          }
        }();
        var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date2 && Date2.now !== root.Date.now && Date2.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
        var nativeCeil = Math2.ceil, nativeFloor = Math2.floor, nativeGetSymbols = Object2.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined2, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object2.keys, Object2), nativeMax = Math2.max, nativeMin = Math2.min, nativeNow = Date2.now, nativeParseInt = context.parseInt, nativeRandom = Math2.random, nativeReverse = arrayProto.reverse;
        var DataView = getNative(context, "DataView"), Map2 = getNative(context, "Map"), Promise2 = getNative(context, "Promise"), Set2 = getNative(context, "Set"), WeakMap2 = getNative(context, "WeakMap"), nativeCreate = getNative(Object2, "create");
        var metaMap = WeakMap2 && new WeakMap2();
        var realNames = {};
        var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map2), promiseCtorString = toSource(Promise2), setCtorString = toSource(Set2), weakMapCtorString = toSource(WeakMap2);
        var symbolProto = Symbol2 ? Symbol2.prototype : undefined2, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined2, symbolToString = symbolProto ? symbolProto.toString : undefined2;
        function lodash(value) {
          if (isObjectLike(value) && !isArray2(value) && !(value instanceof LazyWrapper)) {
            if (value instanceof LodashWrapper) {
              return value;
            }
            if (hasOwnProperty.call(value, "__wrapped__")) {
              return wrapperClone(value);
            }
          }
          return new LodashWrapper(value);
        }
        var baseCreate = function() {
          function object() {
          }
          return function(proto) {
            if (!isObject2(proto)) {
              return {};
            }
            if (objectCreate) {
              return objectCreate(proto);
            }
            object.prototype = proto;
            var result2 = new object();
            object.prototype = undefined2;
            return result2;
          };
        }();
        function baseLodash() {
        }
        function LodashWrapper(value, chainAll) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__chain__ = !!chainAll;
          this.__index__ = 0;
          this.__values__ = undefined2;
        }
        lodash.templateSettings = {
          "escape": reEscape,
          "evaluate": reEvaluate,
          "interpolate": reInterpolate,
          "variable": "",
          "imports": {
            "_": lodash
          }
        };
        lodash.prototype = baseLodash.prototype;
        lodash.prototype.constructor = lodash;
        LodashWrapper.prototype = baseCreate(baseLodash.prototype);
        LodashWrapper.prototype.constructor = LodashWrapper;
        function LazyWrapper(value) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__dir__ = 1;
          this.__filtered__ = false;
          this.__iteratees__ = [];
          this.__takeCount__ = MAX_ARRAY_LENGTH;
          this.__views__ = [];
        }
        function lazyClone() {
          var result2 = new LazyWrapper(this.__wrapped__);
          result2.__actions__ = copyArray(this.__actions__);
          result2.__dir__ = this.__dir__;
          result2.__filtered__ = this.__filtered__;
          result2.__iteratees__ = copyArray(this.__iteratees__);
          result2.__takeCount__ = this.__takeCount__;
          result2.__views__ = copyArray(this.__views__);
          return result2;
        }
        function lazyReverse() {
          if (this.__filtered__) {
            var result2 = new LazyWrapper(this);
            result2.__dir__ = -1;
            result2.__filtered__ = true;
          } else {
            result2 = this.clone();
            result2.__dir__ *= -1;
          }
          return result2;
        }
        function lazyValue() {
          var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray2(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
          if (!isArr || !isRight && arrLength == length && takeCount == length) {
            return baseWrapperValue(array, this.__actions__);
          }
          var result2 = [];
          outer:
            while (length-- && resIndex < takeCount) {
              index += dir;
              var iterIndex = -1, value = array[index];
              while (++iterIndex < iterLength) {
                var data = iteratees[iterIndex], iteratee2 = data.iteratee, type = data.type, computed = iteratee2(value);
                if (type == LAZY_MAP_FLAG) {
                  value = computed;
                } else if (!computed) {
                  if (type == LAZY_FILTER_FLAG) {
                    continue outer;
                  } else {
                    break outer;
                  }
                }
              }
              result2[resIndex++] = value;
            }
          return result2;
        }
        LazyWrapper.prototype = baseCreate(baseLodash.prototype);
        LazyWrapper.prototype.constructor = LazyWrapper;
        function Hash(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function hashClear() {
          this.__data__ = nativeCreate ? nativeCreate(null) : {};
          this.size = 0;
        }
        function hashDelete(key) {
          var result2 = this.has(key) && delete this.__data__[key];
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function hashGet(key) {
          var data = this.__data__;
          if (nativeCreate) {
            var result2 = data[key];
            return result2 === HASH_UNDEFINED ? undefined2 : result2;
          }
          return hasOwnProperty.call(data, key) ? data[key] : undefined2;
        }
        function hashHas(key) {
          var data = this.__data__;
          return nativeCreate ? data[key] !== undefined2 : hasOwnProperty.call(data, key);
        }
        function hashSet(key, value) {
          var data = this.__data__;
          this.size += this.has(key) ? 0 : 1;
          data[key] = nativeCreate && value === undefined2 ? HASH_UNDEFINED : value;
          return this;
        }
        Hash.prototype.clear = hashClear;
        Hash.prototype["delete"] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;
        function ListCache(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function listCacheClear() {
          this.__data__ = [];
          this.size = 0;
        }
        function listCacheDelete(key) {
          var data = this.__data__, index = assocIndexOf(data, key);
          if (index < 0) {
            return false;
          }
          var lastIndex = data.length - 1;
          if (index == lastIndex) {
            data.pop();
          } else {
            splice.call(data, index, 1);
          }
          --this.size;
          return true;
        }
        function listCacheGet(key) {
          var data = this.__data__, index = assocIndexOf(data, key);
          return index < 0 ? undefined2 : data[index][1];
        }
        function listCacheHas(key) {
          return assocIndexOf(this.__data__, key) > -1;
        }
        function listCacheSet(key, value) {
          var data = this.__data__, index = assocIndexOf(data, key);
          if (index < 0) {
            ++this.size;
            data.push([key, value]);
          } else {
            data[index][1] = value;
          }
          return this;
        }
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype["delete"] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        function MapCache(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function mapCacheClear() {
          this.size = 0;
          this.__data__ = {
            "hash": new Hash(),
            "map": new (Map2 || ListCache)(),
            "string": new Hash()
          };
        }
        function mapCacheDelete(key) {
          var result2 = getMapData(this, key)["delete"](key);
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function mapCacheGet(key) {
          return getMapData(this, key).get(key);
        }
        function mapCacheHas(key) {
          return getMapData(this, key).has(key);
        }
        function mapCacheSet(key, value) {
          var data = getMapData(this, key), size2 = data.size;
          data.set(key, value);
          this.size += data.size == size2 ? 0 : 1;
          return this;
        }
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype["delete"] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;
        function SetCache(values2) {
          var index = -1, length = values2 == null ? 0 : values2.length;
          this.__data__ = new MapCache();
          while (++index < length) {
            this.add(values2[index]);
          }
        }
        function setCacheAdd(value) {
          this.__data__.set(value, HASH_UNDEFINED);
          return this;
        }
        function setCacheHas(value) {
          return this.__data__.has(value);
        }
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;
        function Stack(entries) {
          var data = this.__data__ = new ListCache(entries);
          this.size = data.size;
        }
        function stackClear() {
          this.__data__ = new ListCache();
          this.size = 0;
        }
        function stackDelete(key) {
          var data = this.__data__, result2 = data["delete"](key);
          this.size = data.size;
          return result2;
        }
        function stackGet(key) {
          return this.__data__.get(key);
        }
        function stackHas(key) {
          return this.__data__.has(key);
        }
        function stackSet(key, value) {
          var data = this.__data__;
          if (data instanceof ListCache) {
            var pairs = data.__data__;
            if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
              pairs.push([key, value]);
              this.size = ++data.size;
              return this;
            }
            data = this.__data__ = new MapCache(pairs);
          }
          data.set(key, value);
          this.size = data.size;
          return this;
        }
        Stack.prototype.clear = stackClear;
        Stack.prototype["delete"] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;
        function arrayLikeKeys(value, inherited) {
          var isArr = isArray2(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes(value.length, String2) : [], length = result2.length;
          for (var key in value) {
            if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length)))) {
              result2.push(key);
            }
          }
          return result2;
        }
        function arraySample(array) {
          var length = array.length;
          return length ? array[baseRandom(0, length - 1)] : undefined2;
        }
        function arraySampleSize(array, n) {
          return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
        }
        function arrayShuffle(array) {
          return shuffleSelf(copyArray(array));
        }
        function assignMergeValue(object, key, value) {
          if (value !== undefined2 && !eq(object[key], value) || value === undefined2 && !(key in object)) {
            baseAssignValue(object, key, value);
          }
        }
        function assignValue(object, key, value) {
          var objValue = object[key];
          if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined2 && !(key in object)) {
            baseAssignValue(object, key, value);
          }
        }
        function assocIndexOf(array, key) {
          var length = array.length;
          while (length--) {
            if (eq(array[length][0], key)) {
              return length;
            }
          }
          return -1;
        }
        function baseAggregator(collection, setter, iteratee2, accumulator) {
          baseEach(collection, function(value, key, collection2) {
            setter(accumulator, value, iteratee2(value), collection2);
          });
          return accumulator;
        }
        function baseAssign(object, source) {
          return object && copyObject(source, keys(source), object);
        }
        function baseAssignIn(object, source) {
          return object && copyObject(source, keysIn(source), object);
        }
        function baseAssignValue(object, key, value) {
          if (key == "__proto__" && defineProperty) {
            defineProperty(object, key, {
              "configurable": true,
              "enumerable": true,
              "value": value,
              "writable": true
            });
          } else {
            object[key] = value;
          }
        }
        function baseAt(object, paths) {
          var index = -1, length = paths.length, result2 = Array2(length), skip = object == null;
          while (++index < length) {
            result2[index] = skip ? undefined2 : get(object, paths[index]);
          }
          return result2;
        }
        function baseClamp(number, lower, upper) {
          if (number === number) {
            if (upper !== undefined2) {
              number = number <= upper ? number : upper;
            }
            if (lower !== undefined2) {
              number = number >= lower ? number : lower;
            }
          }
          return number;
        }
        function baseClone(value, bitmask, customizer, key, object, stack) {
          var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
          if (customizer) {
            result2 = object ? customizer(value, key, object, stack) : customizer(value);
          }
          if (result2 !== undefined2) {
            return result2;
          }
          if (!isObject2(value)) {
            return value;
          }
          var isArr = isArray2(value);
          if (isArr) {
            result2 = initCloneArray(value);
            if (!isDeep) {
              return copyArray(value, result2);
            }
          } else {
            var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
            if (isBuffer(value)) {
              return cloneBuffer(value, isDeep);
            }
            if (tag == objectTag || tag == argsTag || isFunc && !object) {
              result2 = isFlat || isFunc ? {} : initCloneObject(value);
              if (!isDeep) {
                return isFlat ? copySymbolsIn(value, baseAssignIn(result2, value)) : copySymbols(value, baseAssign(result2, value));
              }
            } else {
              if (!cloneableTags[tag]) {
                return object ? value : {};
              }
              result2 = initCloneByTag(value, tag, isDeep);
            }
          }
          stack || (stack = new Stack());
          var stacked = stack.get(value);
          if (stacked) {
            return stacked;
          }
          stack.set(value, result2);
          if (isSet(value)) {
            value.forEach(function(subValue) {
              result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
            });
          } else if (isMap(value)) {
            value.forEach(function(subValue, key2) {
              result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
            });
          }
          var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
          var props = isArr ? undefined2 : keysFunc(value);
          arrayEach(props || value, function(subValue, key2) {
            if (props) {
              key2 = subValue;
              subValue = value[key2];
            }
            assignValue(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
          });
          return result2;
        }
        function baseConforms(source) {
          var props = keys(source);
          return function(object) {
            return baseConformsTo(object, source, props);
          };
        }
        function baseConformsTo(object, source, props) {
          var length = props.length;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (length--) {
            var key = props[length], predicate = source[key], value = object[key];
            if (value === undefined2 && !(key in object) || !predicate(value)) {
              return false;
            }
          }
          return true;
        }
        function baseDelay(func, wait, args) {
          if (typeof func != "function") {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          return setTimeout2(function() {
            func.apply(undefined2, args);
          }, wait);
        }
        function baseDifference(array, values2, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
          if (!length) {
            return result2;
          }
          if (iteratee2) {
            values2 = arrayMap(values2, baseUnary(iteratee2));
          }
          if (comparator) {
            includes2 = arrayIncludesWith;
            isCommon = false;
          } else if (values2.length >= LARGE_ARRAY_SIZE) {
            includes2 = cacheHas;
            isCommon = false;
            values2 = new SetCache(values2);
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 == null ? value : iteratee2(value);
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var valuesIndex = valuesLength;
                while (valuesIndex--) {
                  if (values2[valuesIndex] === computed) {
                    continue outer;
                  }
                }
                result2.push(value);
              } else if (!includes2(values2, computed, comparator)) {
                result2.push(value);
              }
            }
          return result2;
        }
        var baseEach = createBaseEach(baseForOwn);
        var baseEachRight = createBaseEach(baseForOwnRight, true);
        function baseEvery(collection, predicate) {
          var result2 = true;
          baseEach(collection, function(value, index, collection2) {
            result2 = !!predicate(value, index, collection2);
            return result2;
          });
          return result2;
        }
        function baseExtremum(array, iteratee2, comparator) {
          var index = -1, length = array.length;
          while (++index < length) {
            var value = array[index], current = iteratee2(value);
            if (current != null && (computed === undefined2 ? current === current && !isSymbol2(current) : comparator(current, computed))) {
              var computed = current, result2 = value;
            }
          }
          return result2;
        }
        function baseFill(array, value, start, end) {
          var length = array.length;
          start = toInteger(start);
          if (start < 0) {
            start = -start > length ? 0 : length + start;
          }
          end = end === undefined2 || end > length ? length : toInteger(end);
          if (end < 0) {
            end += length;
          }
          end = start > end ? 0 : toLength(end);
          while (start < end) {
            array[start++] = value;
          }
          return array;
        }
        function baseFilter(collection, predicate) {
          var result2 = [];
          baseEach(collection, function(value, index, collection2) {
            if (predicate(value, index, collection2)) {
              result2.push(value);
            }
          });
          return result2;
        }
        function baseFlatten(array, depth, predicate, isStrict, result2) {
          var index = -1, length = array.length;
          predicate || (predicate = isFlattenable);
          result2 || (result2 = []);
          while (++index < length) {
            var value = array[index];
            if (depth > 0 && predicate(value)) {
              if (depth > 1) {
                baseFlatten(value, depth - 1, predicate, isStrict, result2);
              } else {
                arrayPush(result2, value);
              }
            } else if (!isStrict) {
              result2[result2.length] = value;
            }
          }
          return result2;
        }
        var baseFor = createBaseFor();
        var baseForRight = createBaseFor(true);
        function baseForOwn(object, iteratee2) {
          return object && baseFor(object, iteratee2, keys);
        }
        function baseForOwnRight(object, iteratee2) {
          return object && baseForRight(object, iteratee2, keys);
        }
        function baseFunctions(object, props) {
          return arrayFilter(props, function(key) {
            return isFunction(object[key]);
          });
        }
        function baseGet(object, path) {
          path = castPath(path, object);
          var index = 0, length = path.length;
          while (object != null && index < length) {
            object = object[toKey(path[index++])];
          }
          return index && index == length ? object : undefined2;
        }
        function baseGetAllKeys(object, keysFunc, symbolsFunc) {
          var result2 = keysFunc(object);
          return isArray2(object) ? result2 : arrayPush(result2, symbolsFunc(object));
        }
        function baseGetTag(value) {
          if (value == null) {
            return value === undefined2 ? undefinedTag : nullTag;
          }
          return symToStringTag && symToStringTag in Object2(value) ? getRawTag(value) : objectToString(value);
        }
        function baseGt(value, other) {
          return value > other;
        }
        function baseHas(object, key) {
          return object != null && hasOwnProperty.call(object, key);
        }
        function baseHasIn(object, key) {
          return object != null && key in Object2(object);
        }
        function baseInRange(number, start, end) {
          return number >= nativeMin(start, end) && number < nativeMax(start, end);
        }
        function baseIntersection(arrays, iteratee2, comparator) {
          var includes2 = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = Infinity, result2 = [];
          while (othIndex--) {
            var array = arrays[othIndex];
            if (othIndex && iteratee2) {
              array = arrayMap(array, baseUnary(iteratee2));
            }
            maxLength = nativeMin(array.length, maxLength);
            caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined2;
          }
          array = arrays[0];
          var index = -1, seen2 = caches[0];
          outer:
            while (++index < length && result2.length < maxLength) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (!(seen2 ? cacheHas(seen2, computed) : includes2(result2, computed, comparator))) {
                othIndex = othLength;
                while (--othIndex) {
                  var cache = caches[othIndex];
                  if (!(cache ? cacheHas(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
                    continue outer;
                  }
                }
                if (seen2) {
                  seen2.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseInverter(object, setter, iteratee2, accumulator) {
          baseForOwn(object, function(value, key, object2) {
            setter(accumulator, iteratee2(value), key, object2);
          });
          return accumulator;
        }
        function baseInvoke(object, path, args) {
          path = castPath(path, object);
          object = parent(object, path);
          var func = object == null ? object : object[toKey(last2(path))];
          return func == null ? undefined2 : apply(func, object, args);
        }
        function baseIsArguments(value) {
          return isObjectLike(value) && baseGetTag(value) == argsTag;
        }
        function baseIsArrayBuffer(value) {
          return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
        }
        function baseIsDate(value) {
          return isObjectLike(value) && baseGetTag(value) == dateTag;
        }
        function baseIsEqual(value, other, bitmask, customizer, stack) {
          if (value === other) {
            return true;
          }
          if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
            return value !== value && other !== other;
          }
          return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }
        function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
          var objIsArr = isArray2(object), othIsArr = isArray2(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
          objTag = objTag == argsTag ? objectTag : objTag;
          othTag = othTag == argsTag ? objectTag : othTag;
          var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
          if (isSameTag && isBuffer(object)) {
            if (!isBuffer(other)) {
              return false;
            }
            objIsArr = true;
            objIsObj = false;
          }
          if (isSameTag && !objIsObj) {
            stack || (stack = new Stack());
            return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
          }
          if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
            var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
            if (objIsWrapped || othIsWrapped) {
              var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
              stack || (stack = new Stack());
              return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
            }
          }
          if (!isSameTag) {
            return false;
          }
          stack || (stack = new Stack());
          return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }
        function baseIsMap(value) {
          return isObjectLike(value) && getTag(value) == mapTag;
        }
        function baseIsMatch(object, source, matchData, customizer) {
          var index = matchData.length, length = index, noCustomizer = !customizer;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (index--) {
            var data = matchData[index];
            if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
              return false;
            }
          }
          while (++index < length) {
            data = matchData[index];
            var key = data[0], objValue = object[key], srcValue = data[1];
            if (noCustomizer && data[2]) {
              if (objValue === undefined2 && !(key in object)) {
                return false;
              }
            } else {
              var stack = new Stack();
              if (customizer) {
                var result2 = customizer(objValue, srcValue, key, object, source, stack);
              }
              if (!(result2 === undefined2 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result2)) {
                return false;
              }
            }
          }
          return true;
        }
        function baseIsNative(value) {
          if (!isObject2(value) || isMasked(value)) {
            return false;
          }
          var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
          return pattern.test(toSource(value));
        }
        function baseIsRegExp(value) {
          return isObjectLike(value) && baseGetTag(value) == regexpTag;
        }
        function baseIsSet(value) {
          return isObjectLike(value) && getTag(value) == setTag;
        }
        function baseIsTypedArray(value) {
          return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
        }
        function baseIteratee(value) {
          if (typeof value == "function") {
            return value;
          }
          if (value == null) {
            return identity;
          }
          if (typeof value == "object") {
            return isArray2(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
          }
          return property(value);
        }
        function baseKeys(object) {
          if (!isPrototype(object)) {
            return nativeKeys(object);
          }
          var result2 = [];
          for (var key in Object2(object)) {
            if (hasOwnProperty.call(object, key) && key != "constructor") {
              result2.push(key);
            }
          }
          return result2;
        }
        function baseKeysIn(object) {
          if (!isObject2(object)) {
            return nativeKeysIn(object);
          }
          var isProto = isPrototype(object), result2 = [];
          for (var key in object) {
            if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) {
              result2.push(key);
            }
          }
          return result2;
        }
        function baseLt(value, other) {
          return value < other;
        }
        function baseMap(collection, iteratee2) {
          var index = -1, result2 = isArrayLike(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value, key, collection2) {
            result2[++index] = iteratee2(value, key, collection2);
          });
          return result2;
        }
        function baseMatches(source) {
          var matchData = getMatchData(source);
          if (matchData.length == 1 && matchData[0][2]) {
            return matchesStrictComparable(matchData[0][0], matchData[0][1]);
          }
          return function(object) {
            return object === source || baseIsMatch(object, source, matchData);
          };
        }
        function baseMatchesProperty(path, srcValue) {
          if (isKey(path) && isStrictComparable(srcValue)) {
            return matchesStrictComparable(toKey(path), srcValue);
          }
          return function(object) {
            var objValue = get(object, path);
            return objValue === undefined2 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
          };
        }
        function baseMerge(object, source, srcIndex, customizer, stack) {
          if (object === source) {
            return;
          }
          baseFor(source, function(srcValue, key) {
            stack || (stack = new Stack());
            if (isObject2(srcValue)) {
              baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
            } else {
              var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined2;
              if (newValue === undefined2) {
                newValue = srcValue;
              }
              assignMergeValue(object, key, newValue);
            }
          }, keysIn);
        }
        function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
          var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
          if (stacked) {
            assignMergeValue(object, key, stacked);
            return;
          }
          var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined2;
          var isCommon = newValue === undefined2;
          if (isCommon) {
            var isArr = isArray2(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
            newValue = srcValue;
            if (isArr || isBuff || isTyped) {
              if (isArray2(objValue)) {
                newValue = objValue;
              } else if (isArrayLikeObject(objValue)) {
                newValue = copyArray(objValue);
              } else if (isBuff) {
                isCommon = false;
                newValue = cloneBuffer(srcValue, true);
              } else if (isTyped) {
                isCommon = false;
                newValue = cloneTypedArray(srcValue, true);
              } else {
                newValue = [];
              }
            } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
              newValue = objValue;
              if (isArguments(objValue)) {
                newValue = toPlainObject(objValue);
              } else if (!isObject2(objValue) || isFunction(objValue)) {
                newValue = initCloneObject(srcValue);
              }
            } else {
              isCommon = false;
            }
          }
          if (isCommon) {
            stack.set(srcValue, newValue);
            mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
            stack["delete"](srcValue);
          }
          assignMergeValue(object, key, newValue);
        }
        function baseNth(array, n) {
          var length = array.length;
          if (!length) {
            return;
          }
          n += n < 0 ? length : 0;
          return isIndex(n, length) ? array[n] : undefined2;
        }
        function baseOrderBy(collection, iteratees, orders) {
          if (iteratees.length) {
            iteratees = arrayMap(iteratees, function(iteratee2) {
              if (isArray2(iteratee2)) {
                return function(value) {
                  return baseGet(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
                };
              }
              return iteratee2;
            });
          } else {
            iteratees = [identity];
          }
          var index = -1;
          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
          var result2 = baseMap(collection, function(value, key, collection2) {
            var criteria = arrayMap(iteratees, function(iteratee2) {
              return iteratee2(value);
            });
            return { "criteria": criteria, "index": ++index, "value": value };
          });
          return baseSortBy(result2, function(object, other) {
            return compareMultiple(object, other, orders);
          });
        }
        function basePick(object, paths) {
          return basePickBy(object, paths, function(value, path) {
            return hasIn(object, path);
          });
        }
        function basePickBy(object, paths, predicate) {
          var index = -1, length = paths.length, result2 = {};
          while (++index < length) {
            var path = paths[index], value = baseGet(object, path);
            if (predicate(value, path)) {
              baseSet(result2, castPath(path, object), value);
            }
          }
          return result2;
        }
        function basePropertyDeep(path) {
          return function(object) {
            return baseGet(object, path);
          };
        }
        function basePullAll(array, values2, iteratee2, comparator) {
          var indexOf2 = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values2.length, seen2 = array;
          if (array === values2) {
            values2 = copyArray(values2);
          }
          if (iteratee2) {
            seen2 = arrayMap(array, baseUnary(iteratee2));
          }
          while (++index < length) {
            var fromIndex = 0, value = values2[index], computed = iteratee2 ? iteratee2(value) : value;
            while ((fromIndex = indexOf2(seen2, computed, fromIndex, comparator)) > -1) {
              if (seen2 !== array) {
                splice.call(seen2, fromIndex, 1);
              }
              splice.call(array, fromIndex, 1);
            }
          }
          return array;
        }
        function basePullAt(array, indexes) {
          var length = array ? indexes.length : 0, lastIndex = length - 1;
          while (length--) {
            var index = indexes[length];
            if (length == lastIndex || index !== previous) {
              var previous = index;
              if (isIndex(index)) {
                splice.call(array, index, 1);
              } else {
                baseUnset(array, index);
              }
            }
          }
          return array;
        }
        function baseRandom(lower, upper) {
          return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
        }
        function baseRange(start, end, step, fromRight) {
          var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result2 = Array2(length);
          while (length--) {
            result2[fromRight ? length : ++index] = start;
            start += step;
          }
          return result2;
        }
        function baseRepeat(string, n) {
          var result2 = "";
          if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
            return result2;
          }
          do {
            if (n % 2) {
              result2 += string;
            }
            n = nativeFloor(n / 2);
            if (n) {
              string += string;
            }
          } while (n);
          return result2;
        }
        function baseRest(func, start) {
          return setToString(overRest(func, start, identity), func + "");
        }
        function baseSample(collection) {
          return arraySample(values(collection));
        }
        function baseSampleSize(collection, n) {
          var array = values(collection);
          return shuffleSelf(array, baseClamp(n, 0, array.length));
        }
        function baseSet(object, path, value, customizer) {
          if (!isObject2(object)) {
            return object;
          }
          path = castPath(path, object);
          var index = -1, length = path.length, lastIndex = length - 1, nested = object;
          while (nested != null && ++index < length) {
            var key = toKey(path[index]), newValue = value;
            if (key === "__proto__" || key === "constructor" || key === "prototype") {
              return object;
            }
            if (index != lastIndex) {
              var objValue = nested[key];
              newValue = customizer ? customizer(objValue, key, nested) : undefined2;
              if (newValue === undefined2) {
                newValue = isObject2(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
              }
            }
            assignValue(nested, key, newValue);
            nested = nested[key];
          }
          return object;
        }
        var baseSetData = !metaMap ? identity : function(func, data) {
          metaMap.set(func, data);
          return func;
        };
        var baseSetToString = !defineProperty ? identity : function(func, string) {
          return defineProperty(func, "toString", {
            "configurable": true,
            "enumerable": false,
            "value": constant(string),
            "writable": true
          });
        };
        function baseShuffle(collection) {
          return shuffleSelf(values(collection));
        }
        function baseSlice(array, start, end) {
          var index = -1, length = array.length;
          if (start < 0) {
            start = -start > length ? 0 : length + start;
          }
          end = end > length ? length : end;
          if (end < 0) {
            end += length;
          }
          length = start > end ? 0 : end - start >>> 0;
          start >>>= 0;
          var result2 = Array2(length);
          while (++index < length) {
            result2[index] = array[index + start];
          }
          return result2;
        }
        function baseSome(collection, predicate) {
          var result2;
          baseEach(collection, function(value, index, collection2) {
            result2 = predicate(value, index, collection2);
            return !result2;
          });
          return !!result2;
        }
        function baseSortedIndex(array, value, retHighest) {
          var low = 0, high = array == null ? low : array.length;
          if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
            while (low < high) {
              var mid = low + high >>> 1, computed = array[mid];
              if (computed !== null && !isSymbol2(computed) && (retHighest ? computed <= value : computed < value)) {
                low = mid + 1;
              } else {
                high = mid;
              }
            }
            return high;
          }
          return baseSortedIndexBy(array, value, identity, retHighest);
        }
        function baseSortedIndexBy(array, value, iteratee2, retHighest) {
          var low = 0, high = array == null ? 0 : array.length;
          if (high === 0) {
            return 0;
          }
          value = iteratee2(value);
          var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol2(value), valIsUndefined = value === undefined2;
          while (low < high) {
            var mid = nativeFloor((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined2, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol2(computed);
            if (valIsNaN) {
              var setLow = retHighest || othIsReflexive;
            } else if (valIsUndefined) {
              setLow = othIsReflexive && (retHighest || othIsDefined);
            } else if (valIsNull) {
              setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
            } else if (valIsSymbol) {
              setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
            } else if (othIsNull || othIsSymbol) {
              setLow = false;
            } else {
              setLow = retHighest ? computed <= value : computed < value;
            }
            if (setLow) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }
          return nativeMin(high, MAX_ARRAY_INDEX);
        }
        function baseSortedUniq(array, iteratee2) {
          var index = -1, length = array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
            if (!index || !eq(computed, seen2)) {
              var seen2 = computed;
              result2[resIndex++] = value === 0 ? 0 : value;
            }
          }
          return result2;
        }
        function baseToNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol2(value)) {
            return NAN;
          }
          return +value;
        }
        function baseToString(value) {
          if (typeof value == "string") {
            return value;
          }
          if (isArray2(value)) {
            return arrayMap(value, baseToString) + "";
          }
          if (isSymbol2(value)) {
            return symbolToString ? symbolToString.call(value) : "";
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
        }
        function baseUniq(array, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, length = array.length, isCommon = true, result2 = [], seen2 = result2;
          if (comparator) {
            isCommon = false;
            includes2 = arrayIncludesWith;
          } else if (length >= LARGE_ARRAY_SIZE) {
            var set2 = iteratee2 ? null : createSet(array);
            if (set2) {
              return setToArray(set2);
            }
            isCommon = false;
            includes2 = cacheHas;
            seen2 = new SetCache();
          } else {
            seen2 = iteratee2 ? [] : result2;
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var seenIndex = seen2.length;
                while (seenIndex--) {
                  if (seen2[seenIndex] === computed) {
                    continue outer;
                  }
                }
                if (iteratee2) {
                  seen2.push(computed);
                }
                result2.push(value);
              } else if (!includes2(seen2, computed, comparator)) {
                if (seen2 !== result2) {
                  seen2.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseUnset(object, path) {
          path = castPath(path, object);
          object = parent(object, path);
          return object == null || delete object[toKey(last2(path))];
        }
        function baseUpdate(object, path, updater, customizer) {
          return baseSet(object, path, updater(baseGet(object, path)), customizer);
        }
        function baseWhile(array, predicate, isDrop, fromRight) {
          var length = array.length, index = fromRight ? length : -1;
          while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {
          }
          return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
        }
        function baseWrapperValue(value, actions) {
          var result2 = value;
          if (result2 instanceof LazyWrapper) {
            result2 = result2.value();
          }
          return arrayReduce(actions, function(result3, action) {
            return action.func.apply(action.thisArg, arrayPush([result3], action.args));
          }, result2);
        }
        function baseXor(arrays, iteratee2, comparator) {
          var length = arrays.length;
          if (length < 2) {
            return length ? baseUniq(arrays[0]) : [];
          }
          var index = -1, result2 = Array2(length);
          while (++index < length) {
            var array = arrays[index], othIndex = -1;
            while (++othIndex < length) {
              if (othIndex != index) {
                result2[index] = baseDifference(result2[index] || array, arrays[othIndex], iteratee2, comparator);
              }
            }
          }
          return baseUniq(baseFlatten(result2, 1), iteratee2, comparator);
        }
        function baseZipObject(props, values2, assignFunc) {
          var index = -1, length = props.length, valsLength = values2.length, result2 = {};
          while (++index < length) {
            var value = index < valsLength ? values2[index] : undefined2;
            assignFunc(result2, props[index], value);
          }
          return result2;
        }
        function castArrayLikeObject(value) {
          return isArrayLikeObject(value) ? value : [];
        }
        function castFunction(value) {
          return typeof value == "function" ? value : identity;
        }
        function castPath(value, object) {
          if (isArray2(value)) {
            return value;
          }
          return isKey(value, object) ? [value] : stringToPath(toString(value));
        }
        var castRest = baseRest;
        function castSlice(array, start, end) {
          var length = array.length;
          end = end === undefined2 ? length : end;
          return !start && end >= length ? array : baseSlice(array, start, end);
        }
        var clearTimeout2 = ctxClearTimeout || function(id) {
          return root.clearTimeout(id);
        };
        function cloneBuffer(buffer, isDeep) {
          if (isDeep) {
            return buffer.slice();
          }
          var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
          buffer.copy(result2);
          return result2;
        }
        function cloneArrayBuffer(arrayBuffer) {
          var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
          new Uint8Array2(result2).set(new Uint8Array2(arrayBuffer));
          return result2;
        }
        function cloneDataView(dataView, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
          return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }
        function cloneRegExp(regexp) {
          var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
          result2.lastIndex = regexp.lastIndex;
          return result2;
        }
        function cloneSymbol(symbol) {
          return symbolValueOf ? Object2(symbolValueOf.call(symbol)) : {};
        }
        function cloneTypedArray(typedArray, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
          return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }
        function compareAscending(value, other) {
          if (value !== other) {
            var valIsDefined = value !== undefined2, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol2(value);
            var othIsDefined = other !== undefined2, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol2(other);
            if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
              return 1;
            }
            if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
              return -1;
            }
          }
          return 0;
        }
        function compareMultiple(object, other, orders) {
          var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
          while (++index < length) {
            var result2 = compareAscending(objCriteria[index], othCriteria[index]);
            if (result2) {
              if (index >= ordersLength) {
                return result2;
              }
              var order = orders[index];
              return result2 * (order == "desc" ? -1 : 1);
            }
          }
          return object.index - other.index;
        }
        function composeArgs(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried;
          while (++leftIndex < leftLength) {
            result2[leftIndex] = partials[leftIndex];
          }
          while (++argsIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[holders[argsIndex]] = args[argsIndex];
            }
          }
          while (rangeLength--) {
            result2[leftIndex++] = args[argsIndex++];
          }
          return result2;
        }
        function composeArgsRight(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried;
          while (++argsIndex < rangeLength) {
            result2[argsIndex] = args[argsIndex];
          }
          var offset = argsIndex;
          while (++rightIndex < rightLength) {
            result2[offset + rightIndex] = partials[rightIndex];
          }
          while (++holdersIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[offset + holders[holdersIndex]] = args[argsIndex++];
            }
          }
          return result2;
        }
        function copyArray(source, array) {
          var index = -1, length = source.length;
          array || (array = Array2(length));
          while (++index < length) {
            array[index] = source[index];
          }
          return array;
        }
        function copyObject(source, props, object, customizer) {
          var isNew = !object;
          object || (object = {});
          var index = -1, length = props.length;
          while (++index < length) {
            var key = props[index];
            var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined2;
            if (newValue === undefined2) {
              newValue = source[key];
            }
            if (isNew) {
              baseAssignValue(object, key, newValue);
            } else {
              assignValue(object, key, newValue);
            }
          }
          return object;
        }
        function copySymbols(source, object) {
          return copyObject(source, getSymbols(source), object);
        }
        function copySymbolsIn(source, object) {
          return copyObject(source, getSymbolsIn(source), object);
        }
        function createAggregator(setter, initializer) {
          return function(collection, iteratee2) {
            var func = isArray2(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
            return func(collection, setter, getIteratee(iteratee2, 2), accumulator);
          };
        }
        function createAssigner(assigner) {
          return baseRest(function(object, sources) {
            var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined2, guard = length > 2 ? sources[2] : undefined2;
            customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined2;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) {
              customizer = length < 3 ? undefined2 : customizer;
              length = 1;
            }
            object = Object2(object);
            while (++index < length) {
              var source = sources[index];
              if (source) {
                assigner(object, source, index, customizer);
              }
            }
            return object;
          });
        }
        function createBaseEach(eachFunc, fromRight) {
          return function(collection, iteratee2) {
            if (collection == null) {
              return collection;
            }
            if (!isArrayLike(collection)) {
              return eachFunc(collection, iteratee2);
            }
            var length = collection.length, index = fromRight ? length : -1, iterable = Object2(collection);
            while (fromRight ? index-- : ++index < length) {
              if (iteratee2(iterable[index], index, iterable) === false) {
                break;
              }
            }
            return collection;
          };
        }
        function createBaseFor(fromRight) {
          return function(object, iteratee2, keysFunc) {
            var index = -1, iterable = Object2(object), props = keysFunc(object), length = props.length;
            while (length--) {
              var key = props[fromRight ? length : ++index];
              if (iteratee2(iterable[key], key, iterable) === false) {
                break;
              }
            }
            return object;
          };
        }
        function createBind(func, bitmask, thisArg) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
            return fn.apply(isBind ? thisArg : this, arguments);
          }
          return wrapper;
        }
        function createCaseFirst(methodName) {
          return function(string) {
            string = toString(string);
            var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined2;
            var chr = strSymbols ? strSymbols[0] : string.charAt(0);
            var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
            return chr[methodName]() + trailing;
          };
        }
        function createCompounder(callback) {
          return function(string) {
            return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
          };
        }
        function createCtor(Ctor) {
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return new Ctor();
              case 1:
                return new Ctor(args[0]);
              case 2:
                return new Ctor(args[0], args[1]);
              case 3:
                return new Ctor(args[0], args[1], args[2]);
              case 4:
                return new Ctor(args[0], args[1], args[2], args[3]);
              case 5:
                return new Ctor(args[0], args[1], args[2], args[3], args[4]);
              case 6:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
              case 7:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
            }
            var thisBinding = baseCreate(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
            return isObject2(result2) ? result2 : thisBinding;
          };
        }
        function createCurry(func, bitmask, arity) {
          var Ctor = createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length, placeholder = getHolder(wrapper);
            while (index--) {
              args[index] = arguments[index];
            }
            var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
            length -= holders.length;
            if (length < arity) {
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                undefined2,
                args,
                holders,
                undefined2,
                undefined2,
                arity - length
              );
            }
            var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
            return apply(fn, this, args);
          }
          return wrapper;
        }
        function createFind(findIndexFunc) {
          return function(collection, predicate, fromIndex) {
            var iterable = Object2(collection);
            if (!isArrayLike(collection)) {
              var iteratee2 = getIteratee(predicate, 3);
              collection = keys(collection);
              predicate = function(key) {
                return iteratee2(iterable[key], key, iterable);
              };
            }
            var index = findIndexFunc(collection, predicate, fromIndex);
            return index > -1 ? iterable[iteratee2 ? collection[index] : index] : undefined2;
          };
        }
        function createFlow(fromRight) {
          return flatRest(function(funcs) {
            var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
            if (fromRight) {
              funcs.reverse();
            }
            while (index--) {
              var func = funcs[index];
              if (typeof func != "function") {
                throw new TypeError(FUNC_ERROR_TEXT);
              }
              if (prereq && !wrapper && getFuncName(func) == "wrapper") {
                var wrapper = new LodashWrapper([], true);
              }
            }
            index = wrapper ? index : length;
            while (++index < length) {
              func = funcs[index];
              var funcName = getFuncName(func), data = funcName == "wrapper" ? getData(func) : undefined2;
              if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
                wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
              } else {
                wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
              }
            }
            return function() {
              var args = arguments, value = args[0];
              if (wrapper && args.length == 1 && isArray2(value)) {
                return wrapper.plant(value).value();
              }
              var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
              while (++index2 < length) {
                result2 = funcs[index2].call(this, result2);
              }
              return result2;
            };
          });
        }
        function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
          var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined2 : createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length;
            while (index--) {
              args[index] = arguments[index];
            }
            if (isCurried) {
              var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
            }
            if (partials) {
              args = composeArgs(args, partials, holders, isCurried);
            }
            if (partialsRight) {
              args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
            }
            length -= holdersCount;
            if (isCurried && length < arity) {
              var newHolders = replaceHolders(args, placeholder);
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                thisArg,
                args,
                newHolders,
                argPos,
                ary2,
                arity - length
              );
            }
            var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
            length = args.length;
            if (argPos) {
              args = reorder(args, argPos);
            } else if (isFlip && length > 1) {
              args.reverse();
            }
            if (isAry && ary2 < length) {
              args.length = ary2;
            }
            if (this && this !== root && this instanceof wrapper) {
              fn = Ctor || createCtor(fn);
            }
            return fn.apply(thisBinding, args);
          }
          return wrapper;
        }
        function createInverter(setter, toIteratee) {
          return function(object, iteratee2) {
            return baseInverter(object, setter, toIteratee(iteratee2), {});
          };
        }
        function createMathOperation(operator, defaultValue) {
          return function(value, other) {
            var result2;
            if (value === undefined2 && other === undefined2) {
              return defaultValue;
            }
            if (value !== undefined2) {
              result2 = value;
            }
            if (other !== undefined2) {
              if (result2 === undefined2) {
                return other;
              }
              if (typeof value == "string" || typeof other == "string") {
                value = baseToString(value);
                other = baseToString(other);
              } else {
                value = baseToNumber(value);
                other = baseToNumber(other);
              }
              result2 = operator(value, other);
            }
            return result2;
          };
        }
        function createOver(arrayFunc) {
          return flatRest(function(iteratees) {
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            return baseRest(function(args) {
              var thisArg = this;
              return arrayFunc(iteratees, function(iteratee2) {
                return apply(iteratee2, thisArg, args);
              });
            });
          });
        }
        function createPadding(length, chars) {
          chars = chars === undefined2 ? " " : baseToString(chars);
          var charsLength = chars.length;
          if (charsLength < 2) {
            return charsLength ? baseRepeat(chars, length) : chars;
          }
          var result2 = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
          return hasUnicode(chars) ? castSlice(stringToArray(result2), 0, length).join("") : result2.slice(0, length);
        }
        function createPartial(func, bitmask, thisArg, partials) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
            while (++leftIndex < leftLength) {
              args[leftIndex] = partials[leftIndex];
            }
            while (argsLength--) {
              args[leftIndex++] = arguments[++argsIndex];
            }
            return apply(fn, isBind ? thisArg : this, args);
          }
          return wrapper;
        }
        function createRange(fromRight) {
          return function(start, end, step) {
            if (step && typeof step != "number" && isIterateeCall(start, end, step)) {
              end = step = undefined2;
            }
            start = toFinite(start);
            if (end === undefined2) {
              end = start;
              start = 0;
            } else {
              end = toFinite(end);
            }
            step = step === undefined2 ? start < end ? 1 : -1 : toFinite(step);
            return baseRange(start, end, step, fromRight);
          };
        }
        function createRelationalOperation(operator) {
          return function(value, other) {
            if (!(typeof value == "string" && typeof other == "string")) {
              value = toNumber(value);
              other = toNumber(other);
            }
            return operator(value, other);
          };
        }
        function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
          var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined2, newHoldersRight = isCurry ? undefined2 : holders, newPartials = isCurry ? partials : undefined2, newPartialsRight = isCurry ? undefined2 : partials;
          bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
          bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
          if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
            bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
          }
          var newData = [
            func,
            bitmask,
            thisArg,
            newPartials,
            newHolders,
            newPartialsRight,
            newHoldersRight,
            argPos,
            ary2,
            arity
          ];
          var result2 = wrapFunc.apply(undefined2, newData);
          if (isLaziable(func)) {
            setData(result2, newData);
          }
          result2.placeholder = placeholder;
          return setWrapToString(result2, func, bitmask);
        }
        function createRound(methodName) {
          var func = Math2[methodName];
          return function(number, precision) {
            number = toNumber(number);
            precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
            if (precision && nativeIsFinite(number)) {
              var pair = (toString(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
              pair = (toString(value) + "e").split("e");
              return +(pair[0] + "e" + (+pair[1] - precision));
            }
            return func(number);
          };
        }
        var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop : function(values2) {
          return new Set2(values2);
        };
        function createToPairs(keysFunc) {
          return function(object) {
            var tag = getTag(object);
            if (tag == mapTag) {
              return mapToArray(object);
            }
            if (tag == setTag) {
              return setToPairs(object);
            }
            return baseToPairs(object, keysFunc(object));
          };
        }
        function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
          var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
          if (!isBindKey && typeof func != "function") {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          var length = partials ? partials.length : 0;
          if (!length) {
            bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
            partials = holders = undefined2;
          }
          ary2 = ary2 === undefined2 ? ary2 : nativeMax(toInteger(ary2), 0);
          arity = arity === undefined2 ? arity : toInteger(arity);
          length -= holders ? holders.length : 0;
          if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
            var partialsRight = partials, holdersRight = holders;
            partials = holders = undefined2;
          }
          var data = isBindKey ? undefined2 : getData(func);
          var newData = [
            func,
            bitmask,
            thisArg,
            partials,
            holders,
            partialsRight,
            holdersRight,
            argPos,
            ary2,
            arity
          ];
          if (data) {
            mergeData(newData, data);
          }
          func = newData[0];
          bitmask = newData[1];
          thisArg = newData[2];
          partials = newData[3];
          holders = newData[4];
          arity = newData[9] = newData[9] === undefined2 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
          if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
            bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
          }
          if (!bitmask || bitmask == WRAP_BIND_FLAG) {
            var result2 = createBind(func, bitmask, thisArg);
          } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
            result2 = createCurry(func, bitmask, arity);
          } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
            result2 = createPartial(func, bitmask, thisArg, partials);
          } else {
            result2 = createHybrid.apply(undefined2, newData);
          }
          var setter = data ? baseSetData : setData;
          return setWrapToString(setter(result2, newData), func, bitmask);
        }
        function customDefaultsAssignIn(objValue, srcValue, key, object) {
          if (objValue === undefined2 || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
            return srcValue;
          }
          return objValue;
        }
        function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
          if (isObject2(objValue) && isObject2(srcValue)) {
            stack.set(srcValue, objValue);
            baseMerge(objValue, srcValue, undefined2, customDefaultsMerge, stack);
            stack["delete"](srcValue);
          }
          return objValue;
        }
        function customOmitClone(value) {
          return isPlainObject(value) ? undefined2 : value;
        }
        function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
          if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
            return false;
          }
          var arrStacked = stack.get(array);
          var othStacked = stack.get(other);
          if (arrStacked && othStacked) {
            return arrStacked == other && othStacked == array;
          }
          var index = -1, result2 = true, seen2 = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined2;
          stack.set(array, other);
          stack.set(other, array);
          while (++index < arrLength) {
            var arrValue = array[index], othValue = other[index];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
            }
            if (compared !== undefined2) {
              if (compared) {
                continue;
              }
              result2 = false;
              break;
            }
            if (seen2) {
              if (!arraySome(other, function(othValue2, othIndex) {
                if (!cacheHas(seen2, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                  return seen2.push(othIndex);
                }
              })) {
                result2 = false;
                break;
              }
            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              result2 = false;
              break;
            }
          }
          stack["delete"](array);
          stack["delete"](other);
          return result2;
        }
        function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
          switch (tag) {
            case dataViewTag:
              if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                return false;
              }
              object = object.buffer;
              other = other.buffer;
            case arrayBufferTag:
              if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
                return false;
              }
              return true;
            case boolTag:
            case dateTag:
            case numberTag:
              return eq(+object, +other);
            case errorTag:
              return object.name == other.name && object.message == other.message;
            case regexpTag:
            case stringTag:
              return object == other + "";
            case mapTag:
              var convert = mapToArray;
            case setTag:
              var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
              convert || (convert = setToArray);
              if (object.size != other.size && !isPartial) {
                return false;
              }
              var stacked = stack.get(object);
              if (stacked) {
                return stacked == other;
              }
              bitmask |= COMPARE_UNORDERED_FLAG;
              stack.set(object, other);
              var result2 = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
              stack["delete"](object);
              return result2;
            case symbolTag:
              if (symbolValueOf) {
                return symbolValueOf.call(object) == symbolValueOf.call(other);
              }
          }
          return false;
        }
        function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
          if (objLength != othLength && !isPartial) {
            return false;
          }
          var index = objLength;
          while (index--) {
            var key = objProps[index];
            if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
              return false;
            }
          }
          var objStacked = stack.get(object);
          var othStacked = stack.get(other);
          if (objStacked && othStacked) {
            return objStacked == other && othStacked == object;
          }
          var result2 = true;
          stack.set(object, other);
          stack.set(other, object);
          var skipCtor = isPartial;
          while (++index < objLength) {
            key = objProps[index];
            var objValue = object[key], othValue = other[key];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
            }
            if (!(compared === undefined2 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
              result2 = false;
              break;
            }
            skipCtor || (skipCtor = key == "constructor");
          }
          if (result2 && !skipCtor) {
            var objCtor = object.constructor, othCtor = other.constructor;
            if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
              result2 = false;
            }
          }
          stack["delete"](object);
          stack["delete"](other);
          return result2;
        }
        function flatRest(func) {
          return setToString(overRest(func, undefined2, flatten), func + "");
        }
        function getAllKeys(object) {
          return baseGetAllKeys(object, keys, getSymbols);
        }
        function getAllKeysIn(object) {
          return baseGetAllKeys(object, keysIn, getSymbolsIn);
        }
        var getData = !metaMap ? noop : function(func) {
          return metaMap.get(func);
        };
        function getFuncName(func) {
          var result2 = func.name + "", array = realNames[result2], length = hasOwnProperty.call(realNames, result2) ? array.length : 0;
          while (length--) {
            var data = array[length], otherFunc = data.func;
            if (otherFunc == null || otherFunc == func) {
              return data.name;
            }
          }
          return result2;
        }
        function getHolder(func) {
          var object = hasOwnProperty.call(lodash, "placeholder") ? lodash : func;
          return object.placeholder;
        }
        function getIteratee() {
          var result2 = lodash.iteratee || iteratee;
          result2 = result2 === iteratee ? baseIteratee : result2;
          return arguments.length ? result2(arguments[0], arguments[1]) : result2;
        }
        function getMapData(map2, key) {
          var data = map2.__data__;
          return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
        }
        function getMatchData(object) {
          var result2 = keys(object), length = result2.length;
          while (length--) {
            var key = result2[length], value = object[key];
            result2[length] = [key, value, isStrictComparable(value)];
          }
          return result2;
        }
        function getNative(object, key) {
          var value = getValue(object, key);
          return baseIsNative(value) ? value : undefined2;
        }
        function getRawTag(value) {
          var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
          try {
            value[symToStringTag] = undefined2;
            var unmasked = true;
          } catch (e) {
          }
          var result2 = nativeObjectToString.call(value);
          if (unmasked) {
            if (isOwn) {
              value[symToStringTag] = tag;
            } else {
              delete value[symToStringTag];
            }
          }
          return result2;
        }
        var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
          if (object == null) {
            return [];
          }
          object = Object2(object);
          return arrayFilter(nativeGetSymbols(object), function(symbol) {
            return propertyIsEnumerable.call(object, symbol);
          });
        };
        var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
          var result2 = [];
          while (object) {
            arrayPush(result2, getSymbols(object));
            object = getPrototype(object);
          }
          return result2;
        };
        var getTag = baseGetTag;
        if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
          getTag = function(value) {
            var result2 = baseGetTag(value), Ctor = result2 == objectTag ? value.constructor : undefined2, ctorString = Ctor ? toSource(Ctor) : "";
            if (ctorString) {
              switch (ctorString) {
                case dataViewCtorString:
                  return dataViewTag;
                case mapCtorString:
                  return mapTag;
                case promiseCtorString:
                  return promiseTag;
                case setCtorString:
                  return setTag;
                case weakMapCtorString:
                  return weakMapTag;
              }
            }
            return result2;
          };
        }
        function getView(start, end, transforms) {
          var index = -1, length = transforms.length;
          while (++index < length) {
            var data = transforms[index], size2 = data.size;
            switch (data.type) {
              case "drop":
                start += size2;
                break;
              case "dropRight":
                end -= size2;
                break;
              case "take":
                end = nativeMin(end, start + size2);
                break;
              case "takeRight":
                start = nativeMax(start, end - size2);
                break;
            }
          }
          return { "start": start, "end": end };
        }
        function getWrapDetails(source) {
          var match = source.match(reWrapDetails);
          return match ? match[1].split(reSplitDetails) : [];
        }
        function hasPath(object, path, hasFunc) {
          path = castPath(path, object);
          var index = -1, length = path.length, result2 = false;
          while (++index < length) {
            var key = toKey(path[index]);
            if (!(result2 = object != null && hasFunc(object, key))) {
              break;
            }
            object = object[key];
          }
          if (result2 || ++index != length) {
            return result2;
          }
          length = object == null ? 0 : object.length;
          return !!length && isLength(length) && isIndex(key, length) && (isArray2(object) || isArguments(object));
        }
        function initCloneArray(array) {
          var length = array.length, result2 = new array.constructor(length);
          if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
            result2.index = array.index;
            result2.input = array.input;
          }
          return result2;
        }
        function initCloneObject(object) {
          return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
        }
        function initCloneByTag(object, tag, isDeep) {
          var Ctor = object.constructor;
          switch (tag) {
            case arrayBufferTag:
              return cloneArrayBuffer(object);
            case boolTag:
            case dateTag:
              return new Ctor(+object);
            case dataViewTag:
              return cloneDataView(object, isDeep);
            case float32Tag:
            case float64Tag:
            case int8Tag:
            case int16Tag:
            case int32Tag:
            case uint8Tag:
            case uint8ClampedTag:
            case uint16Tag:
            case uint32Tag:
              return cloneTypedArray(object, isDeep);
            case mapTag:
              return new Ctor();
            case numberTag:
            case stringTag:
              return new Ctor(object);
            case regexpTag:
              return cloneRegExp(object);
            case setTag:
              return new Ctor();
            case symbolTag:
              return cloneSymbol(object);
          }
        }
        function insertWrapDetails(source, details) {
          var length = details.length;
          if (!length) {
            return source;
          }
          var lastIndex = length - 1;
          details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
          details = details.join(length > 2 ? ", " : " ");
          return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
        }
        function isFlattenable(value) {
          return isArray2(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
        }
        function isIndex(value, length) {
          var type = typeof value;
          length = length == null ? MAX_SAFE_INTEGER : length;
          return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
        }
        function isIterateeCall(value, index, object) {
          if (!isObject2(object)) {
            return false;
          }
          var type = typeof index;
          if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
            return eq(object[index], value);
          }
          return false;
        }
        function isKey(value, object) {
          if (isArray2(value)) {
            return false;
          }
          var type = typeof value;
          if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol2(value)) {
            return true;
          }
          return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object2(object);
        }
        function isKeyable(value) {
          var type = typeof value;
          return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
        }
        function isLaziable(func) {
          var funcName = getFuncName(func), other = lodash[funcName];
          if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
            return false;
          }
          if (func === other) {
            return true;
          }
          var data = getData(other);
          return !!data && func === data[0];
        }
        function isMasked(func) {
          return !!maskSrcKey && maskSrcKey in func;
        }
        var isMaskable = coreJsData ? isFunction : stubFalse;
        function isPrototype(value) {
          var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
          return value === proto;
        }
        function isStrictComparable(value) {
          return value === value && !isObject2(value);
        }
        function matchesStrictComparable(key, srcValue) {
          return function(object) {
            if (object == null) {
              return false;
            }
            return object[key] === srcValue && (srcValue !== undefined2 || key in Object2(object));
          };
        }
        function memoizeCapped(func) {
          var result2 = memoize(func, function(key) {
            if (cache.size === MAX_MEMOIZE_SIZE) {
              cache.clear();
            }
            return key;
          });
          var cache = result2.cache;
          return result2;
        }
        function mergeData(data, source) {
          var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
          var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
          if (!(isCommon || isCombo)) {
            return data;
          }
          if (srcBitmask & WRAP_BIND_FLAG) {
            data[2] = source[2];
            newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
          }
          var value = source[3];
          if (value) {
            var partials = data[3];
            data[3] = partials ? composeArgs(partials, value, source[4]) : value;
            data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
          }
          value = source[5];
          if (value) {
            partials = data[5];
            data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
            data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
          }
          value = source[7];
          if (value) {
            data[7] = value;
          }
          if (srcBitmask & WRAP_ARY_FLAG) {
            data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
          }
          if (data[9] == null) {
            data[9] = source[9];
          }
          data[0] = source[0];
          data[1] = newBitmask;
          return data;
        }
        function nativeKeysIn(object) {
          var result2 = [];
          if (object != null) {
            for (var key in Object2(object)) {
              result2.push(key);
            }
          }
          return result2;
        }
        function objectToString(value) {
          return nativeObjectToString.call(value);
        }
        function overRest(func, start, transform3) {
          start = nativeMax(start === undefined2 ? func.length - 1 : start, 0);
          return function() {
            var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array2(length);
            while (++index < length) {
              array[index] = args[start + index];
            }
            index = -1;
            var otherArgs = Array2(start + 1);
            while (++index < start) {
              otherArgs[index] = args[index];
            }
            otherArgs[start] = transform3(array);
            return apply(func, this, otherArgs);
          };
        }
        function parent(object, path) {
          return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
        }
        function reorder(array, indexes) {
          var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
          while (length--) {
            var index = indexes[length];
            array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined2;
          }
          return array;
        }
        function safeGet(object, key) {
          if (key === "constructor" && typeof object[key] === "function") {
            return;
          }
          if (key == "__proto__") {
            return;
          }
          return object[key];
        }
        var setData = shortOut(baseSetData);
        var setTimeout2 = ctxSetTimeout || function(func, wait) {
          return root.setTimeout(func, wait);
        };
        var setToString = shortOut(baseSetToString);
        function setWrapToString(wrapper, reference, bitmask) {
          var source = reference + "";
          return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
        }
        function shortOut(func) {
          var count = 0, lastCalled = 0;
          return function() {
            var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
            lastCalled = stamp;
            if (remaining > 0) {
              if (++count >= HOT_COUNT) {
                return arguments[0];
              }
            } else {
              count = 0;
            }
            return func.apply(undefined2, arguments);
          };
        }
        function shuffleSelf(array, size2) {
          var index = -1, length = array.length, lastIndex = length - 1;
          size2 = size2 === undefined2 ? length : size2;
          while (++index < size2) {
            var rand = baseRandom(index, lastIndex), value = array[rand];
            array[rand] = array[index];
            array[index] = value;
          }
          array.length = size2;
          return array;
        }
        var stringToPath = memoizeCapped(function(string) {
          var result2 = [];
          if (string.charCodeAt(0) === 46) {
            result2.push("");
          }
          string.replace(rePropName, function(match, number, quote, subString) {
            result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
          });
          return result2;
        });
        function toKey(value) {
          if (typeof value == "string" || isSymbol2(value)) {
            return value;
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
        }
        function toSource(func) {
          if (func != null) {
            try {
              return funcToString.call(func);
            } catch (e) {
            }
            try {
              return func + "";
            } catch (e) {
            }
          }
          return "";
        }
        function updateWrapDetails(details, bitmask) {
          arrayEach(wrapFlags, function(pair) {
            var value = "_." + pair[0];
            if (bitmask & pair[1] && !arrayIncludes(details, value)) {
              details.push(value);
            }
          });
          return details.sort();
        }
        function wrapperClone(wrapper) {
          if (wrapper instanceof LazyWrapper) {
            return wrapper.clone();
          }
          var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
          result2.__actions__ = copyArray(wrapper.__actions__);
          result2.__index__ = wrapper.__index__;
          result2.__values__ = wrapper.__values__;
          return result2;
        }
        function chunk(array, size2, guard) {
          if (guard ? isIterateeCall(array, size2, guard) : size2 === undefined2) {
            size2 = 1;
          } else {
            size2 = nativeMax(toInteger(size2), 0);
          }
          var length = array == null ? 0 : array.length;
          if (!length || size2 < 1) {
            return [];
          }
          var index = 0, resIndex = 0, result2 = Array2(nativeCeil(length / size2));
          while (index < length) {
            result2[resIndex++] = baseSlice(array, index, index += size2);
          }
          return result2;
        }
        function compact(array) {
          var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index];
            if (value) {
              result2[resIndex++] = value;
            }
          }
          return result2;
        }
        function concat() {
          var length = arguments.length;
          if (!length) {
            return [];
          }
          var args = Array2(length - 1), array = arguments[0], index = length;
          while (index--) {
            args[index - 1] = arguments[index];
          }
          return arrayPush(isArray2(array) ? copyArray(array) : [array], baseFlatten(args, 1));
        }
        var difference = baseRest(function(array, values2) {
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true)) : [];
        });
        var differenceBy = baseRest(function(array, values2) {
          var iteratee2 = last2(values2);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2)) : [];
        });
        var differenceWith = baseRest(function(array, values2) {
          var comparator = last2(values2);
          if (isArrayLikeObject(comparator)) {
            comparator = undefined2;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), undefined2, comparator) : [];
        });
        function drop(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          return baseSlice(array, n < 0 ? 0 : n, length);
        }
        function dropRight(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          n = length - n;
          return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        function dropRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
        }
        function dropWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
        }
        function fill(array, value, start, end) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (start && typeof start != "number" && isIterateeCall(array, value, start)) {
            start = 0;
            end = length;
          }
          return baseFill(array, value, start, end);
        }
        function findIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index);
        }
        function findLastIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length - 1;
          if (fromIndex !== undefined2) {
            index = toInteger(fromIndex);
            index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index, true);
        }
        function flatten(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, 1) : [];
        }
        function flattenDeep(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, INFINITY) : [];
        }
        function flattenDepth(array, depth) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          depth = depth === undefined2 ? 1 : toInteger(depth);
          return baseFlatten(array, depth);
        }
        function fromPairs(pairs) {
          var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
          while (++index < length) {
            var pair = pairs[index];
            result2[pair[0]] = pair[1];
          }
          return result2;
        }
        function head(array) {
          return array && array.length ? array[0] : undefined2;
        }
        function indexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseIndexOf(array, value, index);
        }
        function initial(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 0, -1) : [];
        }
        var intersection = baseRest(function(arrays) {
          var mapped = arrayMap(arrays, castArrayLikeObject);
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
        });
        var intersectionBy = baseRest(function(arrays) {
          var iteratee2 = last2(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
          if (iteratee2 === last2(mapped)) {
            iteratee2 = undefined2;
          } else {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee2, 2)) : [];
        });
        var intersectionWith = baseRest(function(arrays) {
          var comparator = last2(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          if (comparator) {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined2, comparator) : [];
        });
        function join(array, separator) {
          return array == null ? "" : nativeJoin.call(array, separator);
        }
        function last2(array) {
          var length = array == null ? 0 : array.length;
          return length ? array[length - 1] : undefined2;
        }
        function lastIndexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length;
          if (fromIndex !== undefined2) {
            index = toInteger(fromIndex);
            index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
        }
        function nth(array, n) {
          return array && array.length ? baseNth(array, toInteger(n)) : undefined2;
        }
        var pull = baseRest(pullAll);
        function pullAll(array, values2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2) : array;
        }
        function pullAllBy(array, values2, iteratee2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, getIteratee(iteratee2, 2)) : array;
        }
        function pullAllWith(array, values2, comparator) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, undefined2, comparator) : array;
        }
        var pullAt = flatRest(function(array, indexes) {
          var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);
          basePullAt(array, arrayMap(indexes, function(index) {
            return isIndex(index, length) ? +index : index;
          }).sort(compareAscending));
          return result2;
        });
        function remove(array, predicate) {
          var result2 = [];
          if (!(array && array.length)) {
            return result2;
          }
          var index = -1, indexes = [], length = array.length;
          predicate = getIteratee(predicate, 3);
          while (++index < length) {
            var value = array[index];
            if (predicate(value, index, array)) {
              result2.push(value);
              indexes.push(index);
            }
          }
          basePullAt(array, indexes);
          return result2;
        }
        function reverse(array) {
          return array == null ? array : nativeReverse.call(array);
        }
        function slice(array, start, end) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (end && typeof end != "number" && isIterateeCall(array, start, end)) {
            start = 0;
            end = length;
          } else {
            start = start == null ? 0 : toInteger(start);
            end = end === undefined2 ? length : toInteger(end);
          }
          return baseSlice(array, start, end);
        }
        function sortedIndex(array, value) {
          return baseSortedIndex(array, value);
        }
        function sortedIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2));
        }
        function sortedIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value);
            if (index < length && eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedLastIndex(array, value) {
          return baseSortedIndex(array, value, true);
        }
        function sortedLastIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2), true);
        }
        function sortedLastIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value, true) - 1;
            if (eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedUniq(array) {
          return array && array.length ? baseSortedUniq(array) : [];
        }
        function sortedUniqBy(array, iteratee2) {
          return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function tail(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 1, length) : [];
        }
        function take(array, n, guard) {
          if (!(array && array.length)) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        function takeRight(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          n = length - n;
          return baseSlice(array, n < 0 ? 0 : n, length);
        }
        function takeRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
        }
        function takeWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
        }
        var union = baseRest(function(arrays) {
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
        });
        var unionBy = baseRest(function(arrays) {
          var iteratee2 = last2(arrays);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2));
        });
        var unionWith = baseRest(function(arrays) {
          var comparator = last2(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined2, comparator);
        });
        function uniq(array) {
          return array && array.length ? baseUniq(array) : [];
        }
        function uniqBy(array, iteratee2) {
          return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function uniqWith(array, comparator) {
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return array && array.length ? baseUniq(array, undefined2, comparator) : [];
        }
        function unzip(array) {
          if (!(array && array.length)) {
            return [];
          }
          var length = 0;
          array = arrayFilter(array, function(group) {
            if (isArrayLikeObject(group)) {
              length = nativeMax(group.length, length);
              return true;
            }
          });
          return baseTimes(length, function(index) {
            return arrayMap(array, baseProperty(index));
          });
        }
        function unzipWith(array, iteratee2) {
          if (!(array && array.length)) {
            return [];
          }
          var result2 = unzip(array);
          if (iteratee2 == null) {
            return result2;
          }
          return arrayMap(result2, function(group) {
            return apply(iteratee2, undefined2, group);
          });
        }
        var without = baseRest(function(array, values2) {
          return isArrayLikeObject(array) ? baseDifference(array, values2) : [];
        });
        var xor = baseRest(function(arrays) {
          return baseXor(arrayFilter(arrays, isArrayLikeObject));
        });
        var xorBy = baseRest(function(arrays) {
          var iteratee2 = last2(arrays);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee2, 2));
        });
        var xorWith = baseRest(function(arrays) {
          var comparator = last2(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined2, comparator);
        });
        var zip = baseRest(unzip);
        function zipObject(props, values2) {
          return baseZipObject(props || [], values2 || [], assignValue);
        }
        function zipObjectDeep(props, values2) {
          return baseZipObject(props || [], values2 || [], baseSet);
        }
        var zipWith = baseRest(function(arrays) {
          var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined2;
          iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : undefined2;
          return unzipWith(arrays, iteratee2);
        });
        function chain(value) {
          var result2 = lodash(value);
          result2.__chain__ = true;
          return result2;
        }
        function tap(value, interceptor) {
          interceptor(value);
          return value;
        }
        function thru(value, interceptor) {
          return interceptor(value);
        }
        var wrapperAt = flatRest(function(paths) {
          var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
            return baseAt(object, paths);
          };
          if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
            return this.thru(interceptor);
          }
          value = value.slice(start, +start + (length ? 1 : 0));
          value.__actions__.push({
            "func": thru,
            "args": [interceptor],
            "thisArg": undefined2
          });
          return new LodashWrapper(value, this.__chain__).thru(function(array) {
            if (length && !array.length) {
              array.push(undefined2);
            }
            return array;
          });
        });
        function wrapperChain() {
          return chain(this);
        }
        function wrapperCommit() {
          return new LodashWrapper(this.value(), this.__chain__);
        }
        function wrapperNext() {
          if (this.__values__ === undefined2) {
            this.__values__ = toArray(this.value());
          }
          var done = this.__index__ >= this.__values__.length, value = done ? undefined2 : this.__values__[this.__index__++];
          return { "done": done, "value": value };
        }
        function wrapperToIterator() {
          return this;
        }
        function wrapperPlant(value) {
          var result2, parent2 = this;
          while (parent2 instanceof baseLodash) {
            var clone2 = wrapperClone(parent2);
            clone2.__index__ = 0;
            clone2.__values__ = undefined2;
            if (result2) {
              previous.__wrapped__ = clone2;
            } else {
              result2 = clone2;
            }
            var previous = clone2;
            parent2 = parent2.__wrapped__;
          }
          previous.__wrapped__ = value;
          return result2;
        }
        function wrapperReverse() {
          var value = this.__wrapped__;
          if (value instanceof LazyWrapper) {
            var wrapped = value;
            if (this.__actions__.length) {
              wrapped = new LazyWrapper(this);
            }
            wrapped = wrapped.reverse();
            wrapped.__actions__.push({
              "func": thru,
              "args": [reverse],
              "thisArg": undefined2
            });
            return new LodashWrapper(wrapped, this.__chain__);
          }
          return this.thru(reverse);
        }
        function wrapperValue() {
          return baseWrapperValue(this.__wrapped__, this.__actions__);
        }
        var countBy = createAggregator(function(result2, value, key) {
          if (hasOwnProperty.call(result2, key)) {
            ++result2[key];
          } else {
            baseAssignValue(result2, key, 1);
          }
        });
        function every(collection, predicate, guard) {
          var func = isArray2(collection) ? arrayEvery : baseEvery;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        function filter(collection, predicate) {
          var func = isArray2(collection) ? arrayFilter : baseFilter;
          return func(collection, getIteratee(predicate, 3));
        }
        var find = createFind(findIndex);
        var findLast = createFind(findLastIndex);
        function flatMap(collection, iteratee2) {
          return baseFlatten(map(collection, iteratee2), 1);
        }
        function flatMapDeep(collection, iteratee2) {
          return baseFlatten(map(collection, iteratee2), INFINITY);
        }
        function flatMapDepth(collection, iteratee2, depth) {
          depth = depth === undefined2 ? 1 : toInteger(depth);
          return baseFlatten(map(collection, iteratee2), depth);
        }
        function forEach(collection, iteratee2) {
          var func = isArray2(collection) ? arrayEach : baseEach;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function forEachRight(collection, iteratee2) {
          var func = isArray2(collection) ? arrayEachRight : baseEachRight;
          return func(collection, getIteratee(iteratee2, 3));
        }
        var groupBy = createAggregator(function(result2, value, key) {
          if (hasOwnProperty.call(result2, key)) {
            result2[key].push(value);
          } else {
            baseAssignValue(result2, key, [value]);
          }
        });
        function includes(collection, value, fromIndex, guard) {
          collection = isArrayLike(collection) ? collection : values(collection);
          fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
          var length = collection.length;
          if (fromIndex < 0) {
            fromIndex = nativeMax(length + fromIndex, 0);
          }
          return isString2(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
        }
        var invokeMap = baseRest(function(collection, path, args) {
          var index = -1, isFunc = typeof path == "function", result2 = isArrayLike(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value) {
            result2[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
          });
          return result2;
        });
        var keyBy = createAggregator(function(result2, value, key) {
          baseAssignValue(result2, key, value);
        });
        function map(collection, iteratee2) {
          var func = isArray2(collection) ? arrayMap : baseMap;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function orderBy(collection, iteratees, orders, guard) {
          if (collection == null) {
            return [];
          }
          if (!isArray2(iteratees)) {
            iteratees = iteratees == null ? [] : [iteratees];
          }
          orders = guard ? undefined2 : orders;
          if (!isArray2(orders)) {
            orders = orders == null ? [] : [orders];
          }
          return baseOrderBy(collection, iteratees, orders);
        }
        var partition = createAggregator(function(result2, value, key) {
          result2[key ? 0 : 1].push(value);
        }, function() {
          return [[], []];
        });
        function reduce(collection, iteratee2, accumulator) {
          var func = isArray2(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach);
        }
        function reduceRight(collection, iteratee2, accumulator) {
          var func = isArray2(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);
        }
        function reject(collection, predicate) {
          var func = isArray2(collection) ? arrayFilter : baseFilter;
          return func(collection, negate(getIteratee(predicate, 3)));
        }
        function sample(collection) {
          var func = isArray2(collection) ? arraySample : baseSample;
          return func(collection);
        }
        function sampleSize(collection, n, guard) {
          if (guard ? isIterateeCall(collection, n, guard) : n === undefined2) {
            n = 1;
          } else {
            n = toInteger(n);
          }
          var func = isArray2(collection) ? arraySampleSize : baseSampleSize;
          return func(collection, n);
        }
        function shuffle(collection) {
          var func = isArray2(collection) ? arrayShuffle : baseShuffle;
          return func(collection);
        }
        function size(collection) {
          if (collection == null) {
            return 0;
          }
          if (isArrayLike(collection)) {
            return isString2(collection) ? stringSize(collection) : collection.length;
          }
          var tag = getTag(collection);
          if (tag == mapTag || tag == setTag) {
            return collection.size;
          }
          return baseKeys(collection).length;
        }
        function some(collection, predicate, guard) {
          var func = isArray2(collection) ? arraySome : baseSome;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        var sortBy = baseRest(function(collection, iteratees) {
          if (collection == null) {
            return [];
          }
          var length = iteratees.length;
          if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
            iteratees = [];
          } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
            iteratees = [iteratees[0]];
          }
          return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
        });
        var now = ctxNow || function() {
          return root.Date.now();
        };
        function after(n, func) {
          if (typeof func != "function") {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          n = toInteger(n);
          return function() {
            if (--n < 1) {
              return func.apply(this, arguments);
            }
          };
        }
        function ary(func, n, guard) {
          n = guard ? undefined2 : n;
          n = func && n == null ? func.length : n;
          return createWrap(func, WRAP_ARY_FLAG, undefined2, undefined2, undefined2, undefined2, n);
        }
        function before(n, func) {
          var result2;
          if (typeof func != "function") {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          n = toInteger(n);
          return function() {
            if (--n > 0) {
              result2 = func.apply(this, arguments);
            }
            if (n <= 1) {
              func = undefined2;
            }
            return result2;
          };
        }
        var bind = baseRest(function(func, thisArg, partials) {
          var bitmask = WRAP_BIND_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bind));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(func, bitmask, thisArg, partials, holders);
        });
        var bindKey = baseRest(function(object, key, partials) {
          var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bindKey));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(key, bitmask, object, partials, holders);
        });
        function curry(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curry.placeholder;
          return result2;
        }
        function curryRight(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curryRight.placeholder;
          return result2;
        }
        function debounce(func, wait, options) {
          var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
          if (typeof func != "function") {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject2(options)) {
            leading = !!options.leading;
            maxing = "maxWait" in options;
            maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          function invokeFunc(time) {
            var args = lastArgs, thisArg = lastThis;
            lastArgs = lastThis = undefined2;
            lastInvokeTime = time;
            result2 = func.apply(thisArg, args);
            return result2;
          }
          function leadingEdge(time) {
            lastInvokeTime = time;
            timerId = setTimeout2(timerExpired, wait);
            return leading ? invokeFunc(time) : result2;
          }
          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
            return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
          }
          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
            return lastCallTime === undefined2 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
          }
          function timerExpired() {
            var time = now();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            timerId = setTimeout2(timerExpired, remainingWait(time));
          }
          function trailingEdge(time) {
            timerId = undefined2;
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined2;
            return result2;
          }
          function cancel() {
            if (timerId !== undefined2) {
              clearTimeout2(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined2;
          }
          function flush() {
            return timerId === undefined2 ? result2 : trailingEdge(now());
          }
          function debounced() {
            var time = now(), isInvoking = shouldInvoke(time);
            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;
            if (isInvoking) {
              if (timerId === undefined2) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                clearTimeout2(timerId);
                timerId = setTimeout2(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined2) {
              timerId = setTimeout2(timerExpired, wait);
            }
            return result2;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }
        var defer = baseRest(function(func, args) {
          return baseDelay(func, 1, args);
        });
        var delay = baseRest(function(func, wait, args) {
          return baseDelay(func, toNumber(wait) || 0, args);
        });
        function flip(func) {
          return createWrap(func, WRAP_FLIP_FLAG);
        }
        function memoize(func, resolver) {
          if (typeof func != "function" || resolver != null && typeof resolver != "function") {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          var memoized = function() {
            var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
            if (cache.has(key)) {
              return cache.get(key);
            }
            var result2 = func.apply(this, args);
            memoized.cache = cache.set(key, result2) || cache;
            return result2;
          };
          memoized.cache = new (memoize.Cache || MapCache)();
          return memoized;
        }
        memoize.Cache = MapCache;
        function negate(predicate) {
          if (typeof predicate != "function") {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return !predicate.call(this);
              case 1:
                return !predicate.call(this, args[0]);
              case 2:
                return !predicate.call(this, args[0], args[1]);
              case 3:
                return !predicate.call(this, args[0], args[1], args[2]);
            }
            return !predicate.apply(this, args);
          };
        }
        function once(func) {
          return before(2, func);
        }
        var overArgs = castRest(function(func, transforms) {
          transforms = transforms.length == 1 && isArray2(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
          var funcsLength = transforms.length;
          return baseRest(function(args) {
            var index = -1, length = nativeMin(args.length, funcsLength);
            while (++index < length) {
              args[index] = transforms[index].call(this, args[index]);
            }
            return apply(func, this, args);
          });
        });
        var partial = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partial));
          return createWrap(func, WRAP_PARTIAL_FLAG, undefined2, partials, holders);
        });
        var partialRight = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partialRight));
          return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined2, partials, holders);
        });
        var rearg = flatRest(function(func, indexes) {
          return createWrap(func, WRAP_REARG_FLAG, undefined2, undefined2, undefined2, indexes);
        });
        function rest(func, start) {
          if (typeof func != "function") {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          start = start === undefined2 ? start : toInteger(start);
          return baseRest(func, start);
        }
        function spread(func, start) {
          if (typeof func != "function") {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          start = start == null ? 0 : nativeMax(toInteger(start), 0);
          return baseRest(function(args) {
            var array = args[start], otherArgs = castSlice(args, 0, start);
            if (array) {
              arrayPush(otherArgs, array);
            }
            return apply(func, this, otherArgs);
          });
        }
        function throttle(func, wait, options) {
          var leading = true, trailing = true;
          if (typeof func != "function") {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (isObject2(options)) {
            leading = "leading" in options ? !!options.leading : leading;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          return debounce(func, wait, {
            "leading": leading,
            "maxWait": wait,
            "trailing": trailing
          });
        }
        function unary(func) {
          return ary(func, 1);
        }
        function wrap(value, wrapper) {
          return partial(castFunction(wrapper), value);
        }
        function castArray() {
          if (!arguments.length) {
            return [];
          }
          var value = arguments[0];
          return isArray2(value) ? value : [value];
        }
        function clone(value) {
          return baseClone(value, CLONE_SYMBOLS_FLAG);
        }
        function cloneWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
        }
        function cloneDeep(value) {
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
        }
        function cloneDeepWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
        }
        function conformsTo(object, source) {
          return source == null || baseConformsTo(object, source, keys(source));
        }
        function eq(value, other) {
          return value === other || value !== value && other !== other;
        }
        var gt = createRelationalOperation(baseGt);
        var gte = createRelationalOperation(function(value, other) {
          return value >= other;
        });
        var isArguments = baseIsArguments(function() {
          return arguments;
        }()) ? baseIsArguments : function(value) {
          return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
        };
        var isArray2 = Array2.isArray;
        var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
        function isArrayLike(value) {
          return value != null && isLength(value.length) && !isFunction(value);
        }
        function isArrayLikeObject(value) {
          return isObjectLike(value) && isArrayLike(value);
        }
        function isBoolean(value) {
          return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
        }
        var isBuffer = nativeIsBuffer || stubFalse;
        var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
        function isElement(value) {
          return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
        }
        function isEmpty(value) {
          if (value == null) {
            return true;
          }
          if (isArrayLike(value) && (isArray2(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
            return !value.length;
          }
          var tag = getTag(value);
          if (tag == mapTag || tag == setTag) {
            return !value.size;
          }
          if (isPrototype(value)) {
            return !baseKeys(value).length;
          }
          for (var key in value) {
            if (hasOwnProperty.call(value, key)) {
              return false;
            }
          }
          return true;
        }
        function isEqual(value, other) {
          return baseIsEqual(value, other);
        }
        function isEqualWith(value, other, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          var result2 = customizer ? customizer(value, other) : undefined2;
          return result2 === undefined2 ? baseIsEqual(value, other, undefined2, customizer) : !!result2;
        }
        function isError(value) {
          if (!isObjectLike(value)) {
            return false;
          }
          var tag = baseGetTag(value);
          return tag == errorTag || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject(value);
        }
        function isFinite(value) {
          return typeof value == "number" && nativeIsFinite(value);
        }
        function isFunction(value) {
          if (!isObject2(value)) {
            return false;
          }
          var tag = baseGetTag(value);
          return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
        }
        function isInteger(value) {
          return typeof value == "number" && value == toInteger(value);
        }
        function isLength(value) {
          return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        function isObject2(value) {
          var type = typeof value;
          return value != null && (type == "object" || type == "function");
        }
        function isObjectLike(value) {
          return value != null && typeof value == "object";
        }
        var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
        function isMatch(object, source) {
          return object === source || baseIsMatch(object, source, getMatchData(source));
        }
        function isMatchWith(object, source, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseIsMatch(object, source, getMatchData(source), customizer);
        }
        function isNaN2(value) {
          return isNumber(value) && value != +value;
        }
        function isNative(value) {
          if (isMaskable(value)) {
            throw new Error2(CORE_ERROR_TEXT);
          }
          return baseIsNative(value);
        }
        function isNull(value) {
          return value === null;
        }
        function isNil(value) {
          return value == null;
        }
        function isNumber(value) {
          return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
        }
        function isPlainObject(value) {
          if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
            return false;
          }
          var proto = getPrototype(value);
          if (proto === null) {
            return true;
          }
          var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
          return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
        }
        var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
        function isSafeInteger(value) {
          return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
        }
        var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
        function isString2(value) {
          return typeof value == "string" || !isArray2(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
        }
        function isSymbol2(value) {
          return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
        }
        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
        function isUndefined(value) {
          return value === undefined2;
        }
        function isWeakMap(value) {
          return isObjectLike(value) && getTag(value) == weakMapTag;
        }
        function isWeakSet(value) {
          return isObjectLike(value) && baseGetTag(value) == weakSetTag;
        }
        var lt = createRelationalOperation(baseLt);
        var lte = createRelationalOperation(function(value, other) {
          return value <= other;
        });
        function toArray(value) {
          if (!value) {
            return [];
          }
          if (isArrayLike(value)) {
            return isString2(value) ? stringToArray(value) : copyArray(value);
          }
          if (symIterator && value[symIterator]) {
            return iteratorToArray(value[symIterator]());
          }
          var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
          return func(value);
        }
        function toFinite(value) {
          if (!value) {
            return value === 0 ? value : 0;
          }
          value = toNumber(value);
          if (value === INFINITY || value === -INFINITY) {
            var sign = value < 0 ? -1 : 1;
            return sign * MAX_INTEGER;
          }
          return value === value ? value : 0;
        }
        function toInteger(value) {
          var result2 = toFinite(value), remainder = result2 % 1;
          return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
        }
        function toLength(value) {
          return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
        }
        function toNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol2(value)) {
            return NAN;
          }
          if (isObject2(value)) {
            var other = typeof value.valueOf == "function" ? value.valueOf() : value;
            value = isObject2(other) ? other + "" : other;
          }
          if (typeof value != "string") {
            return value === 0 ? value : +value;
          }
          value = baseTrim(value);
          var isBinary = reIsBinary.test(value);
          return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
        }
        function toPlainObject(value) {
          return copyObject(value, keysIn(value));
        }
        function toSafeInteger(value) {
          return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
        }
        function toString(value) {
          return value == null ? "" : baseToString(value);
        }
        var assign = createAssigner(function(object, source) {
          if (isPrototype(source) || isArrayLike(source)) {
            copyObject(source, keys(source), object);
            return;
          }
          for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
              assignValue(object, key, source[key]);
            }
          }
        });
        var assignIn = createAssigner(function(object, source) {
          copyObject(source, keysIn(source), object);
        });
        var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keysIn(source), object, customizer);
        });
        var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keys(source), object, customizer);
        });
        var at = flatRest(baseAt);
        function create(prototype, properties) {
          var result2 = baseCreate(prototype);
          return properties == null ? result2 : baseAssign(result2, properties);
        }
        var defaults = baseRest(function(object, sources) {
          object = Object2(object);
          var index = -1;
          var length = sources.length;
          var guard = length > 2 ? sources[2] : undefined2;
          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            length = 1;
          }
          while (++index < length) {
            var source = sources[index];
            var props = keysIn(source);
            var propsIndex = -1;
            var propsLength = props.length;
            while (++propsIndex < propsLength) {
              var key = props[propsIndex];
              var value = object[key];
              if (value === undefined2 || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
                object[key] = source[key];
              }
            }
          }
          return object;
        });
        var defaultsDeep = baseRest(function(args) {
          args.push(undefined2, customDefaultsMerge);
          return apply(mergeWith, undefined2, args);
        });
        function findKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
        }
        function findLastKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
        }
        function forIn(object, iteratee2) {
          return object == null ? object : baseFor(object, getIteratee(iteratee2, 3), keysIn);
        }
        function forInRight(object, iteratee2) {
          return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn);
        }
        function forOwn(object, iteratee2) {
          return object && baseForOwn(object, getIteratee(iteratee2, 3));
        }
        function forOwnRight(object, iteratee2) {
          return object && baseForOwnRight(object, getIteratee(iteratee2, 3));
        }
        function functions(object) {
          return object == null ? [] : baseFunctions(object, keys(object));
        }
        function functionsIn(object) {
          return object == null ? [] : baseFunctions(object, keysIn(object));
        }
        function get(object, path, defaultValue) {
          var result2 = object == null ? undefined2 : baseGet(object, path);
          return result2 === undefined2 ? defaultValue : result2;
        }
        function has(object, path) {
          return object != null && hasPath(object, path, baseHas);
        }
        function hasIn(object, path) {
          return object != null && hasPath(object, path, baseHasIn);
        }
        var invert = createInverter(function(result2, value, key) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString.call(value);
          }
          result2[value] = key;
        }, constant(identity));
        var invertBy = createInverter(function(result2, value, key) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString.call(value);
          }
          if (hasOwnProperty.call(result2, value)) {
            result2[value].push(key);
          } else {
            result2[value] = [key];
          }
        }, getIteratee);
        var invoke = baseRest(baseInvoke);
        function keys(object) {
          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }
        function keysIn(object) {
          return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }
        function mapKeys(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key, object2) {
            baseAssignValue(result2, iteratee2(value, key, object2), value);
          });
          return result2;
        }
        function mapValues(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key, object2) {
            baseAssignValue(result2, key, iteratee2(value, key, object2));
          });
          return result2;
        }
        var merge = createAssigner(function(object, source, srcIndex) {
          baseMerge(object, source, srcIndex);
        });
        var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
          baseMerge(object, source, srcIndex, customizer);
        });
        var omit = flatRest(function(object, paths) {
          var result2 = {};
          if (object == null) {
            return result2;
          }
          var isDeep = false;
          paths = arrayMap(paths, function(path) {
            path = castPath(path, object);
            isDeep || (isDeep = path.length > 1);
            return path;
          });
          copyObject(object, getAllKeysIn(object), result2);
          if (isDeep) {
            result2 = baseClone(result2, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
          }
          var length = paths.length;
          while (length--) {
            baseUnset(result2, paths[length]);
          }
          return result2;
        });
        function omitBy(object, predicate) {
          return pickBy(object, negate(getIteratee(predicate)));
        }
        var pick = flatRest(function(object, paths) {
          return object == null ? {} : basePick(object, paths);
        });
        function pickBy(object, predicate) {
          if (object == null) {
            return {};
          }
          var props = arrayMap(getAllKeysIn(object), function(prop) {
            return [prop];
          });
          predicate = getIteratee(predicate);
          return basePickBy(object, props, function(value, path) {
            return predicate(value, path[0]);
          });
        }
        function result(object, path, defaultValue) {
          path = castPath(path, object);
          var index = -1, length = path.length;
          if (!length) {
            length = 1;
            object = undefined2;
          }
          while (++index < length) {
            var value = object == null ? undefined2 : object[toKey(path[index])];
            if (value === undefined2) {
              index = length;
              value = defaultValue;
            }
            object = isFunction(value) ? value.call(object) : value;
          }
          return object;
        }
        function set(object, path, value) {
          return object == null ? object : baseSet(object, path, value);
        }
        function setWith(object, path, value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseSet(object, path, value, customizer);
        }
        var toPairs = createToPairs(keys);
        var toPairsIn = createToPairs(keysIn);
        function transform2(object, iteratee2, accumulator) {
          var isArr = isArray2(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
          iteratee2 = getIteratee(iteratee2, 4);
          if (accumulator == null) {
            var Ctor = object && object.constructor;
            if (isArrLike) {
              accumulator = isArr ? new Ctor() : [];
            } else if (isObject2(object)) {
              accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
            } else {
              accumulator = {};
            }
          }
          (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object2) {
            return iteratee2(accumulator, value, index, object2);
          });
          return accumulator;
        }
        function unset(object, path) {
          return object == null ? true : baseUnset(object, path);
        }
        function update(object, path, updater) {
          return object == null ? object : baseUpdate(object, path, castFunction(updater));
        }
        function updateWith(object, path, updater, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
        }
        function values(object) {
          return object == null ? [] : baseValues(object, keys(object));
        }
        function valuesIn(object) {
          return object == null ? [] : baseValues(object, keysIn(object));
        }
        function clamp(number, lower, upper) {
          if (upper === undefined2) {
            upper = lower;
            lower = undefined2;
          }
          if (upper !== undefined2) {
            upper = toNumber(upper);
            upper = upper === upper ? upper : 0;
          }
          if (lower !== undefined2) {
            lower = toNumber(lower);
            lower = lower === lower ? lower : 0;
          }
          return baseClamp(toNumber(number), lower, upper);
        }
        function inRange(number, start, end) {
          start = toFinite(start);
          if (end === undefined2) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }
          number = toNumber(number);
          return baseInRange(number, start, end);
        }
        function random(lower, upper, floating) {
          if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) {
            upper = floating = undefined2;
          }
          if (floating === undefined2) {
            if (typeof upper == "boolean") {
              floating = upper;
              upper = undefined2;
            } else if (typeof lower == "boolean") {
              floating = lower;
              lower = undefined2;
            }
          }
          if (lower === undefined2 && upper === undefined2) {
            lower = 0;
            upper = 1;
          } else {
            lower = toFinite(lower);
            if (upper === undefined2) {
              upper = lower;
              lower = 0;
            } else {
              upper = toFinite(upper);
            }
          }
          if (lower > upper) {
            var temp = lower;
            lower = upper;
            upper = temp;
          }
          if (floating || lower % 1 || upper % 1) {
            var rand = nativeRandom();
            return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
          }
          return baseRandom(lower, upper);
        }
        var camelCase = createCompounder(function(result2, word, index) {
          word = word.toLowerCase();
          return result2 + (index ? capitalize2(word) : word);
        });
        function capitalize2(string) {
          return upperFirst(toString(string).toLowerCase());
        }
        function deburr(string) {
          string = toString(string);
          return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
        }
        function endsWith(string, target, position) {
          string = toString(string);
          target = baseToString(target);
          var length = string.length;
          position = position === undefined2 ? length : baseClamp(toInteger(position), 0, length);
          var end = position;
          position -= target.length;
          return position >= 0 && string.slice(position, end) == target;
        }
        function escape(string) {
          string = toString(string);
          return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
        }
        function escapeRegExp(string) {
          string = toString(string);
          return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
        }
        var kebabCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "-" : "") + word.toLowerCase();
        });
        var lowerCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toLowerCase();
        });
        var lowerFirst = createCaseFirst("toLowerCase");
        function pad(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          if (!length || strLength >= length) {
            return string;
          }
          var mid = (length - strLength) / 2;
          return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
        }
        function padEnd(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
        }
        function padStart(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
        }
        function parseInt2(string, radix, guard) {
          if (guard || radix == null) {
            radix = 0;
          } else if (radix) {
            radix = +radix;
          }
          return nativeParseInt(toString(string).replace(reTrimStart, ""), radix || 0);
        }
        function repeat(string, n, guard) {
          if (guard ? isIterateeCall(string, n, guard) : n === undefined2) {
            n = 1;
          } else {
            n = toInteger(n);
          }
          return baseRepeat(toString(string), n);
        }
        function replace() {
          var args = arguments, string = toString(args[0]);
          return args.length < 3 ? string : string.replace(args[1], args[2]);
        }
        var snakeCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "_" : "") + word.toLowerCase();
        });
        function split(string, separator, limit) {
          if (limit && typeof limit != "number" && isIterateeCall(string, separator, limit)) {
            separator = limit = undefined2;
          }
          limit = limit === undefined2 ? MAX_ARRAY_LENGTH : limit >>> 0;
          if (!limit) {
            return [];
          }
          string = toString(string);
          if (string && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
            separator = baseToString(separator);
            if (!separator && hasUnicode(string)) {
              return castSlice(stringToArray(string), 0, limit);
            }
          }
          return string.split(separator, limit);
        }
        var startCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + upperFirst(word);
        });
        function startsWith2(string, target, position) {
          string = toString(string);
          position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
          target = baseToString(target);
          return string.slice(position, position + target.length) == target;
        }
        function template(string, options, guard) {
          var settings = lodash.templateSettings;
          if (guard && isIterateeCall(string, options, guard)) {
            options = undefined2;
          }
          string = toString(string);
          options = assignInWith({}, options, settings, customDefaultsAssignIn);
          var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
          var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
          var reDelimiters = RegExp2(
            (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
            "g"
          );
          var sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
          string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
            interpolateValue || (interpolateValue = esTemplateValue);
            source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
            if (escapeValue) {
              isEscaping = true;
              source += "' +\n__e(" + escapeValue + ") +\n'";
            }
            if (evaluateValue) {
              isEvaluating = true;
              source += "';\n" + evaluateValue + ";\n__p += '";
            }
            if (interpolateValue) {
              source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
            }
            index = offset + match.length;
            return match;
          });
          source += "';\n";
          var variable = hasOwnProperty.call(options, "variable") && options.variable;
          if (!variable) {
            source = "with (obj) {\n" + source + "\n}\n";
          } else if (reForbiddenIdentifierChars.test(variable)) {
            throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT);
          }
          source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
          source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
          var result2 = attempt(function() {
            return Function2(importsKeys, sourceURL + "return " + source).apply(undefined2, importsValues);
          });
          result2.source = source;
          if (isError(result2)) {
            throw result2;
          }
          return result2;
        }
        function toLower(value) {
          return toString(value).toLowerCase();
        }
        function toUpper(value) {
          return toString(value).toUpperCase();
        }
        function trim(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined2)) {
            return baseTrim(string);
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
          return castSlice(strSymbols, start, end).join("");
        }
        function trimEnd(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined2)) {
            return string.slice(0, trimmedEndIndex(string) + 1);
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
          return castSlice(strSymbols, 0, end).join("");
        }
        function trimStart(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined2)) {
            return string.replace(reTrimStart, "");
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
          return castSlice(strSymbols, start).join("");
        }
        function truncate(string, options) {
          var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
          if (isObject2(options)) {
            var separator = "separator" in options ? options.separator : separator;
            length = "length" in options ? toInteger(options.length) : length;
            omission = "omission" in options ? baseToString(options.omission) : omission;
          }
          string = toString(string);
          var strLength = string.length;
          if (hasUnicode(string)) {
            var strSymbols = stringToArray(string);
            strLength = strSymbols.length;
          }
          if (length >= strLength) {
            return string;
          }
          var end = length - stringSize(omission);
          if (end < 1) {
            return omission;
          }
          var result2 = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
          if (separator === undefined2) {
            return result2 + omission;
          }
          if (strSymbols) {
            end += result2.length - end;
          }
          if (isRegExp(separator)) {
            if (string.slice(end).search(separator)) {
              var match, substring = result2;
              if (!separator.global) {
                separator = RegExp2(separator.source, toString(reFlags.exec(separator)) + "g");
              }
              separator.lastIndex = 0;
              while (match = separator.exec(substring)) {
                var newEnd = match.index;
              }
              result2 = result2.slice(0, newEnd === undefined2 ? end : newEnd);
            }
          } else if (string.indexOf(baseToString(separator), end) != end) {
            var index = result2.lastIndexOf(separator);
            if (index > -1) {
              result2 = result2.slice(0, index);
            }
          }
          return result2 + omission;
        }
        function unescape(string) {
          string = toString(string);
          return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
        }
        var upperCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toUpperCase();
        });
        var upperFirst = createCaseFirst("toUpperCase");
        function words(string, pattern, guard) {
          string = toString(string);
          pattern = guard ? undefined2 : pattern;
          if (pattern === undefined2) {
            return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
          }
          return string.match(pattern) || [];
        }
        var attempt = baseRest(function(func, args) {
          try {
            return apply(func, undefined2, args);
          } catch (e) {
            return isError(e) ? e : new Error2(e);
          }
        });
        var bindAll = flatRest(function(object, methodNames) {
          arrayEach(methodNames, function(key) {
            key = toKey(key);
            baseAssignValue(object, key, bind(object[key], object));
          });
          return object;
        });
        function cond(pairs) {
          var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
          pairs = !length ? [] : arrayMap(pairs, function(pair) {
            if (typeof pair[1] != "function") {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            return [toIteratee(pair[0]), pair[1]];
          });
          return baseRest(function(args) {
            var index = -1;
            while (++index < length) {
              var pair = pairs[index];
              if (apply(pair[0], this, args)) {
                return apply(pair[1], this, args);
              }
            }
          });
        }
        function conforms(source) {
          return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
        }
        function constant(value) {
          return function() {
            return value;
          };
        }
        function defaultTo(value, defaultValue) {
          return value == null || value !== value ? defaultValue : value;
        }
        var flow = createFlow();
        var flowRight = createFlow(true);
        function identity(value) {
          return value;
        }
        function iteratee(func) {
          return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
        }
        function matches(source) {
          return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
        }
        function matchesProperty(path, srcValue) {
          return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
        }
        var method = baseRest(function(path, args) {
          return function(object) {
            return baseInvoke(object, path, args);
          };
        });
        var methodOf = baseRest(function(object, args) {
          return function(path) {
            return baseInvoke(object, path, args);
          };
        });
        function mixin(object, source, options) {
          var props = keys(source), methodNames = baseFunctions(source, props);
          if (options == null && !(isObject2(source) && (methodNames.length || !props.length))) {
            options = source;
            source = object;
            object = this;
            methodNames = baseFunctions(source, keys(source));
          }
          var chain2 = !(isObject2(options) && "chain" in options) || !!options.chain, isFunc = isFunction(object);
          arrayEach(methodNames, function(methodName) {
            var func = source[methodName];
            object[methodName] = func;
            if (isFunc) {
              object.prototype[methodName] = function() {
                var chainAll = this.__chain__;
                if (chain2 || chainAll) {
                  var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray(this.__actions__);
                  actions.push({ "func": func, "args": arguments, "thisArg": object });
                  result2.__chain__ = chainAll;
                  return result2;
                }
                return func.apply(object, arrayPush([this.value()], arguments));
              };
            }
          });
          return object;
        }
        function noConflict() {
          if (root._ === this) {
            root._ = oldDash;
          }
          return this;
        }
        function noop() {
        }
        function nthArg(n) {
          n = toInteger(n);
          return baseRest(function(args) {
            return baseNth(args, n);
          });
        }
        var over = createOver(arrayMap);
        var overEvery = createOver(arrayEvery);
        var overSome = createOver(arraySome);
        function property(path) {
          return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
        }
        function propertyOf(object) {
          return function(path) {
            return object == null ? undefined2 : baseGet(object, path);
          };
        }
        var range = createRange();
        var rangeRight = createRange(true);
        function stubArray() {
          return [];
        }
        function stubFalse() {
          return false;
        }
        function stubObject() {
          return {};
        }
        function stubString() {
          return "";
        }
        function stubTrue() {
          return true;
        }
        function times(n, iteratee2) {
          n = toInteger(n);
          if (n < 1 || n > MAX_SAFE_INTEGER) {
            return [];
          }
          var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
          iteratee2 = getIteratee(iteratee2);
          n -= MAX_ARRAY_LENGTH;
          var result2 = baseTimes(length, iteratee2);
          while (++index < n) {
            iteratee2(index);
          }
          return result2;
        }
        function toPath(value) {
          if (isArray2(value)) {
            return arrayMap(value, toKey);
          }
          return isSymbol2(value) ? [value] : copyArray(stringToPath(toString(value)));
        }
        function uniqueId(prefix) {
          var id = ++idCounter;
          return toString(prefix) + id;
        }
        var add = createMathOperation(function(augend, addend) {
          return augend + addend;
        }, 0);
        var ceil = createRound("ceil");
        var divide = createMathOperation(function(dividend, divisor) {
          return dividend / divisor;
        }, 1);
        var floor = createRound("floor");
        function max(array) {
          return array && array.length ? baseExtremum(array, identity, baseGt) : undefined2;
        }
        function maxBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined2;
        }
        function mean(array) {
          return baseMean(array, identity);
        }
        function meanBy(array, iteratee2) {
          return baseMean(array, getIteratee(iteratee2, 2));
        }
        function min(array) {
          return array && array.length ? baseExtremum(array, identity, baseLt) : undefined2;
        }
        function minBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined2;
        }
        var multiply = createMathOperation(function(multiplier, multiplicand) {
          return multiplier * multiplicand;
        }, 1);
        var round = createRound("round");
        var subtract = createMathOperation(function(minuend, subtrahend) {
          return minuend - subtrahend;
        }, 0);
        function sum(array) {
          return array && array.length ? baseSum(array, identity) : 0;
        }
        function sumBy(array, iteratee2) {
          return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;
        }
        lodash.after = after;
        lodash.ary = ary;
        lodash.assign = assign;
        lodash.assignIn = assignIn;
        lodash.assignInWith = assignInWith;
        lodash.assignWith = assignWith;
        lodash.at = at;
        lodash.before = before;
        lodash.bind = bind;
        lodash.bindAll = bindAll;
        lodash.bindKey = bindKey;
        lodash.castArray = castArray;
        lodash.chain = chain;
        lodash.chunk = chunk;
        lodash.compact = compact;
        lodash.concat = concat;
        lodash.cond = cond;
        lodash.conforms = conforms;
        lodash.constant = constant;
        lodash.countBy = countBy;
        lodash.create = create;
        lodash.curry = curry;
        lodash.curryRight = curryRight;
        lodash.debounce = debounce;
        lodash.defaults = defaults;
        lodash.defaultsDeep = defaultsDeep;
        lodash.defer = defer;
        lodash.delay = delay;
        lodash.difference = difference;
        lodash.differenceBy = differenceBy;
        lodash.differenceWith = differenceWith;
        lodash.drop = drop;
        lodash.dropRight = dropRight;
        lodash.dropRightWhile = dropRightWhile;
        lodash.dropWhile = dropWhile;
        lodash.fill = fill;
        lodash.filter = filter;
        lodash.flatMap = flatMap;
        lodash.flatMapDeep = flatMapDeep;
        lodash.flatMapDepth = flatMapDepth;
        lodash.flatten = flatten;
        lodash.flattenDeep = flattenDeep;
        lodash.flattenDepth = flattenDepth;
        lodash.flip = flip;
        lodash.flow = flow;
        lodash.flowRight = flowRight;
        lodash.fromPairs = fromPairs;
        lodash.functions = functions;
        lodash.functionsIn = functionsIn;
        lodash.groupBy = groupBy;
        lodash.initial = initial;
        lodash.intersection = intersection;
        lodash.intersectionBy = intersectionBy;
        lodash.intersectionWith = intersectionWith;
        lodash.invert = invert;
        lodash.invertBy = invertBy;
        lodash.invokeMap = invokeMap;
        lodash.iteratee = iteratee;
        lodash.keyBy = keyBy;
        lodash.keys = keys;
        lodash.keysIn = keysIn;
        lodash.map = map;
        lodash.mapKeys = mapKeys;
        lodash.mapValues = mapValues;
        lodash.matches = matches;
        lodash.matchesProperty = matchesProperty;
        lodash.memoize = memoize;
        lodash.merge = merge;
        lodash.mergeWith = mergeWith;
        lodash.method = method;
        lodash.methodOf = methodOf;
        lodash.mixin = mixin;
        lodash.negate = negate;
        lodash.nthArg = nthArg;
        lodash.omit = omit;
        lodash.omitBy = omitBy;
        lodash.once = once;
        lodash.orderBy = orderBy;
        lodash.over = over;
        lodash.overArgs = overArgs;
        lodash.overEvery = overEvery;
        lodash.overSome = overSome;
        lodash.partial = partial;
        lodash.partialRight = partialRight;
        lodash.partition = partition;
        lodash.pick = pick;
        lodash.pickBy = pickBy;
        lodash.property = property;
        lodash.propertyOf = propertyOf;
        lodash.pull = pull;
        lodash.pullAll = pullAll;
        lodash.pullAllBy = pullAllBy;
        lodash.pullAllWith = pullAllWith;
        lodash.pullAt = pullAt;
        lodash.range = range;
        lodash.rangeRight = rangeRight;
        lodash.rearg = rearg;
        lodash.reject = reject;
        lodash.remove = remove;
        lodash.rest = rest;
        lodash.reverse = reverse;
        lodash.sampleSize = sampleSize;
        lodash.set = set;
        lodash.setWith = setWith;
        lodash.shuffle = shuffle;
        lodash.slice = slice;
        lodash.sortBy = sortBy;
        lodash.sortedUniq = sortedUniq;
        lodash.sortedUniqBy = sortedUniqBy;
        lodash.split = split;
        lodash.spread = spread;
        lodash.tail = tail;
        lodash.take = take;
        lodash.takeRight = takeRight;
        lodash.takeRightWhile = takeRightWhile;
        lodash.takeWhile = takeWhile;
        lodash.tap = tap;
        lodash.throttle = throttle;
        lodash.thru = thru;
        lodash.toArray = toArray;
        lodash.toPairs = toPairs;
        lodash.toPairsIn = toPairsIn;
        lodash.toPath = toPath;
        lodash.toPlainObject = toPlainObject;
        lodash.transform = transform2;
        lodash.unary = unary;
        lodash.union = union;
        lodash.unionBy = unionBy;
        lodash.unionWith = unionWith;
        lodash.uniq = uniq;
        lodash.uniqBy = uniqBy;
        lodash.uniqWith = uniqWith;
        lodash.unset = unset;
        lodash.unzip = unzip;
        lodash.unzipWith = unzipWith;
        lodash.update = update;
        lodash.updateWith = updateWith;
        lodash.values = values;
        lodash.valuesIn = valuesIn;
        lodash.without = without;
        lodash.words = words;
        lodash.wrap = wrap;
        lodash.xor = xor;
        lodash.xorBy = xorBy;
        lodash.xorWith = xorWith;
        lodash.zip = zip;
        lodash.zipObject = zipObject;
        lodash.zipObjectDeep = zipObjectDeep;
        lodash.zipWith = zipWith;
        lodash.entries = toPairs;
        lodash.entriesIn = toPairsIn;
        lodash.extend = assignIn;
        lodash.extendWith = assignInWith;
        mixin(lodash, lodash);
        lodash.add = add;
        lodash.attempt = attempt;
        lodash.camelCase = camelCase;
        lodash.capitalize = capitalize2;
        lodash.ceil = ceil;
        lodash.clamp = clamp;
        lodash.clone = clone;
        lodash.cloneDeep = cloneDeep;
        lodash.cloneDeepWith = cloneDeepWith;
        lodash.cloneWith = cloneWith;
        lodash.conformsTo = conformsTo;
        lodash.deburr = deburr;
        lodash.defaultTo = defaultTo;
        lodash.divide = divide;
        lodash.endsWith = endsWith;
        lodash.eq = eq;
        lodash.escape = escape;
        lodash.escapeRegExp = escapeRegExp;
        lodash.every = every;
        lodash.find = find;
        lodash.findIndex = findIndex;
        lodash.findKey = findKey;
        lodash.findLast = findLast;
        lodash.findLastIndex = findLastIndex;
        lodash.findLastKey = findLastKey;
        lodash.floor = floor;
        lodash.forEach = forEach;
        lodash.forEachRight = forEachRight;
        lodash.forIn = forIn;
        lodash.forInRight = forInRight;
        lodash.forOwn = forOwn;
        lodash.forOwnRight = forOwnRight;
        lodash.get = get;
        lodash.gt = gt;
        lodash.gte = gte;
        lodash.has = has;
        lodash.hasIn = hasIn;
        lodash.head = head;
        lodash.identity = identity;
        lodash.includes = includes;
        lodash.indexOf = indexOf;
        lodash.inRange = inRange;
        lodash.invoke = invoke;
        lodash.isArguments = isArguments;
        lodash.isArray = isArray2;
        lodash.isArrayBuffer = isArrayBuffer;
        lodash.isArrayLike = isArrayLike;
        lodash.isArrayLikeObject = isArrayLikeObject;
        lodash.isBoolean = isBoolean;
        lodash.isBuffer = isBuffer;
        lodash.isDate = isDate;
        lodash.isElement = isElement;
        lodash.isEmpty = isEmpty;
        lodash.isEqual = isEqual;
        lodash.isEqualWith = isEqualWith;
        lodash.isError = isError;
        lodash.isFinite = isFinite;
        lodash.isFunction = isFunction;
        lodash.isInteger = isInteger;
        lodash.isLength = isLength;
        lodash.isMap = isMap;
        lodash.isMatch = isMatch;
        lodash.isMatchWith = isMatchWith;
        lodash.isNaN = isNaN2;
        lodash.isNative = isNative;
        lodash.isNil = isNil;
        lodash.isNull = isNull;
        lodash.isNumber = isNumber;
        lodash.isObject = isObject2;
        lodash.isObjectLike = isObjectLike;
        lodash.isPlainObject = isPlainObject;
        lodash.isRegExp = isRegExp;
        lodash.isSafeInteger = isSafeInteger;
        lodash.isSet = isSet;
        lodash.isString = isString2;
        lodash.isSymbol = isSymbol2;
        lodash.isTypedArray = isTypedArray;
        lodash.isUndefined = isUndefined;
        lodash.isWeakMap = isWeakMap;
        lodash.isWeakSet = isWeakSet;
        lodash.join = join;
        lodash.kebabCase = kebabCase;
        lodash.last = last2;
        lodash.lastIndexOf = lastIndexOf;
        lodash.lowerCase = lowerCase;
        lodash.lowerFirst = lowerFirst;
        lodash.lt = lt;
        lodash.lte = lte;
        lodash.max = max;
        lodash.maxBy = maxBy;
        lodash.mean = mean;
        lodash.meanBy = meanBy;
        lodash.min = min;
        lodash.minBy = minBy;
        lodash.stubArray = stubArray;
        lodash.stubFalse = stubFalse;
        lodash.stubObject = stubObject;
        lodash.stubString = stubString;
        lodash.stubTrue = stubTrue;
        lodash.multiply = multiply;
        lodash.nth = nth;
        lodash.noConflict = noConflict;
        lodash.noop = noop;
        lodash.now = now;
        lodash.pad = pad;
        lodash.padEnd = padEnd;
        lodash.padStart = padStart;
        lodash.parseInt = parseInt2;
        lodash.random = random;
        lodash.reduce = reduce;
        lodash.reduceRight = reduceRight;
        lodash.repeat = repeat;
        lodash.replace = replace;
        lodash.result = result;
        lodash.round = round;
        lodash.runInContext = runInContext2;
        lodash.sample = sample;
        lodash.size = size;
        lodash.snakeCase = snakeCase;
        lodash.some = some;
        lodash.sortedIndex = sortedIndex;
        lodash.sortedIndexBy = sortedIndexBy;
        lodash.sortedIndexOf = sortedIndexOf;
        lodash.sortedLastIndex = sortedLastIndex;
        lodash.sortedLastIndexBy = sortedLastIndexBy;
        lodash.sortedLastIndexOf = sortedLastIndexOf;
        lodash.startCase = startCase;
        lodash.startsWith = startsWith2;
        lodash.subtract = subtract;
        lodash.sum = sum;
        lodash.sumBy = sumBy;
        lodash.template = template;
        lodash.times = times;
        lodash.toFinite = toFinite;
        lodash.toInteger = toInteger;
        lodash.toLength = toLength;
        lodash.toLower = toLower;
        lodash.toNumber = toNumber;
        lodash.toSafeInteger = toSafeInteger;
        lodash.toString = toString;
        lodash.toUpper = toUpper;
        lodash.trim = trim;
        lodash.trimEnd = trimEnd;
        lodash.trimStart = trimStart;
        lodash.truncate = truncate;
        lodash.unescape = unescape;
        lodash.uniqueId = uniqueId;
        lodash.upperCase = upperCase;
        lodash.upperFirst = upperFirst;
        lodash.each = forEach;
        lodash.eachRight = forEachRight;
        lodash.first = head;
        mixin(lodash, function() {
          var source = {};
          baseForOwn(lodash, function(func, methodName) {
            if (!hasOwnProperty.call(lodash.prototype, methodName)) {
              source[methodName] = func;
            }
          });
          return source;
        }(), { "chain": false });
        lodash.VERSION = VERSION;
        arrayEach(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
          lodash[methodName].placeholder = lodash;
        });
        arrayEach(["drop", "take"], function(methodName, index) {
          LazyWrapper.prototype[methodName] = function(n) {
            n = n === undefined2 ? 1 : nativeMax(toInteger(n), 0);
            var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
            if (result2.__filtered__) {
              result2.__takeCount__ = nativeMin(n, result2.__takeCount__);
            } else {
              result2.__views__.push({
                "size": nativeMin(n, MAX_ARRAY_LENGTH),
                "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
              });
            }
            return result2;
          };
          LazyWrapper.prototype[methodName + "Right"] = function(n) {
            return this.reverse()[methodName](n).reverse();
          };
        });
        arrayEach(["filter", "map", "takeWhile"], function(methodName, index) {
          var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
          LazyWrapper.prototype[methodName] = function(iteratee2) {
            var result2 = this.clone();
            result2.__iteratees__.push({
              "iteratee": getIteratee(iteratee2, 3),
              "type": type
            });
            result2.__filtered__ = result2.__filtered__ || isFilter;
            return result2;
          };
        });
        arrayEach(["head", "last"], function(methodName, index) {
          var takeName = "take" + (index ? "Right" : "");
          LazyWrapper.prototype[methodName] = function() {
            return this[takeName](1).value()[0];
          };
        });
        arrayEach(["initial", "tail"], function(methodName, index) {
          var dropName = "drop" + (index ? "" : "Right");
          LazyWrapper.prototype[methodName] = function() {
            return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
          };
        });
        LazyWrapper.prototype.compact = function() {
          return this.filter(identity);
        };
        LazyWrapper.prototype.find = function(predicate) {
          return this.filter(predicate).head();
        };
        LazyWrapper.prototype.findLast = function(predicate) {
          return this.reverse().find(predicate);
        };
        LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
          if (typeof path == "function") {
            return new LazyWrapper(this);
          }
          return this.map(function(value) {
            return baseInvoke(value, path, args);
          });
        });
        LazyWrapper.prototype.reject = function(predicate) {
          return this.filter(negate(getIteratee(predicate)));
        };
        LazyWrapper.prototype.slice = function(start, end) {
          start = toInteger(start);
          var result2 = this;
          if (result2.__filtered__ && (start > 0 || end < 0)) {
            return new LazyWrapper(result2);
          }
          if (start < 0) {
            result2 = result2.takeRight(-start);
          } else if (start) {
            result2 = result2.drop(start);
          }
          if (end !== undefined2) {
            end = toInteger(end);
            result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
          }
          return result2;
        };
        LazyWrapper.prototype.takeRightWhile = function(predicate) {
          return this.reverse().takeWhile(predicate).reverse();
        };
        LazyWrapper.prototype.toArray = function() {
          return this.take(MAX_ARRAY_LENGTH);
        };
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
          if (!lodashFunc) {
            return;
          }
          lodash.prototype[methodName] = function() {
            var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray2(value);
            var interceptor = function(value2) {
              var result3 = lodashFunc.apply(lodash, arrayPush([value2], args));
              return isTaker && chainAll ? result3[0] : result3;
            };
            if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
              isLazy = useLazy = false;
            }
            var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
            if (!retUnwrapped && useLazy) {
              value = onlyLazy ? value : new LazyWrapper(this);
              var result2 = func.apply(value, args);
              result2.__actions__.push({ "func": thru, "args": [interceptor], "thisArg": undefined2 });
              return new LodashWrapper(result2, chainAll);
            }
            if (isUnwrapped && onlyLazy) {
              return func.apply(this, args);
            }
            result2 = this.thru(interceptor);
            return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
          };
        });
        arrayEach(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
          var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
          lodash.prototype[methodName] = function() {
            var args = arguments;
            if (retUnwrapped && !this.__chain__) {
              var value = this.value();
              return func.apply(isArray2(value) ? value : [], args);
            }
            return this[chainName](function(value2) {
              return func.apply(isArray2(value2) ? value2 : [], args);
            });
          };
        });
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var lodashFunc = lodash[methodName];
          if (lodashFunc) {
            var key = lodashFunc.name + "";
            if (!hasOwnProperty.call(realNames, key)) {
              realNames[key] = [];
            }
            realNames[key].push({ "name": methodName, "func": lodashFunc });
          }
        });
        realNames[createHybrid(undefined2, WRAP_BIND_KEY_FLAG).name] = [{
          "name": "wrapper",
          "func": undefined2
        }];
        LazyWrapper.prototype.clone = lazyClone;
        LazyWrapper.prototype.reverse = lazyReverse;
        LazyWrapper.prototype.value = lazyValue;
        lodash.prototype.at = wrapperAt;
        lodash.prototype.chain = wrapperChain;
        lodash.prototype.commit = wrapperCommit;
        lodash.prototype.next = wrapperNext;
        lodash.prototype.plant = wrapperPlant;
        lodash.prototype.reverse = wrapperReverse;
        lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
        lodash.prototype.first = lodash.prototype.head;
        if (symIterator) {
          lodash.prototype[symIterator] = wrapperToIterator;
        }
        return lodash;
      };
      var _ = runInContext();
      if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        root._ = _;
        define(function() {
          return _;
        });
      } else if (freeModule) {
        (freeModule.exports = _)._ = _;
        freeExports._ = _;
      } else {
        root._ = _;
      }
    }).call(exports);
  }
});

// node_modules/lodash-unified/require.cjs
var require_require = __commonJS({
  "node_modules/lodash-unified/require.cjs"(exports, module) {
    module.exports = require_lodash();
  }
});

// node_modules/element-plus/lib/utils/dom/aria.js
var require_aria = __commonJS({
  "node_modules/element-plus/lib/utils/dom/aria.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var FOCUSABLE_ELEMENT_SELECTORS = `a[href],button:not([disabled]),button:not([hidden]),:not([tabindex="-1"]),input:not([disabled]),input:not([type="hidden"]),select:not([disabled]),textarea:not([disabled])`;
    var isVisible = (element) => {
      if (false)
        return true;
      const computed = getComputedStyle(element);
      return computed.position === "fixed" ? false : element.offsetParent !== null;
    };
    var obtainAllFocusableElements = (element) => {
      return Array.from(element.querySelectorAll(FOCUSABLE_ELEMENT_SELECTORS)).filter((item) => isFocusable(item) && isVisible(item));
    };
    var isFocusable = (element) => {
      if (element.tabIndex > 0 || element.tabIndex === 0 && element.getAttribute("tabIndex") !== null) {
        return true;
      }
      if (element.disabled) {
        return false;
      }
      switch (element.nodeName) {
        case "A": {
          return !!element.href && element.rel !== "ignore";
        }
        case "INPUT": {
          return !(element.type === "hidden" || element.type === "file");
        }
        case "BUTTON":
        case "SELECT":
        case "TEXTAREA": {
          return true;
        }
        default: {
          return false;
        }
      }
    };
    var attemptFocus = (element) => {
      var _a;
      if (!isFocusable(element)) {
        return false;
      }
      (_a = element.focus) == null ? void 0 : _a.call(element);
      return document.activeElement === element;
    };
    var triggerEvent = function(elm, name, ...opts) {
      let eventName;
      if (name.includes("mouse") || name.includes("click")) {
        eventName = "MouseEvents";
      } else if (name.includes("key")) {
        eventName = "KeyboardEvent";
      } else {
        eventName = "HTMLEvents";
      }
      const evt = document.createEvent(eventName);
      evt.initEvent(name, ...opts);
      elm.dispatchEvent(evt);
      return elm;
    };
    var isLeaf = (el) => !el.getAttribute("aria-owns");
    var getSibling = (el, distance, elClass) => {
      const { parentNode } = el;
      if (!parentNode)
        return null;
      const siblings = parentNode.querySelectorAll(elClass);
      const index = Array.prototype.indexOf.call(siblings, el);
      return siblings[index + distance] || null;
    };
    var focusNode = (el) => {
      if (!el)
        return;
      el.focus();
      !isLeaf(el) && el.click();
    };
    exports.attemptFocus = attemptFocus;
    exports.focusNode = focusNode;
    exports.getSibling = getSibling;
    exports.isFocusable = isFocusable;
    exports.isLeaf = isLeaf;
    exports.isVisible = isVisible;
    exports.obtainAllFocusableElements = obtainAllFocusableElements;
    exports.triggerEvent = triggerEvent;
  }
});

// node_modules/vue-demi/lib/index.cjs
var require_lib = __commonJS({
  "node_modules/vue-demi/lib/index.cjs"(exports) {
    var Vue = require_vue();
    Object.keys(Vue).forEach(function(key) {
      exports[key] = Vue[key];
    });
    exports.set = function(target, key, val) {
      if (Array.isArray(target)) {
        target.length = Math.max(target.length, key);
        target.splice(key, 1, val);
        return val;
      }
      target[key] = val;
      return val;
    };
    exports.del = function(target, key) {
      if (Array.isArray(target)) {
        target.splice(key, 1);
        return;
      }
      delete target[key];
    };
    exports.Vue = Vue;
    exports.Vue2 = void 0;
    exports.isVue2 = false;
    exports.isVue3 = true;
    exports.install = function() {
    };
  }
});

// node_modules/@vueuse/shared/index.cjs
var require_shared = __commonJS({
  "node_modules/@vueuse/shared/index.cjs"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var vueDemi = require_lib();
    var __defProp$9 = Object.defineProperty;
    var __defProps$6 = Object.defineProperties;
    var __getOwnPropDescs$6 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$b = Object.getOwnPropertySymbols;
    var __hasOwnProp$b = Object.prototype.hasOwnProperty;
    var __propIsEnum$b = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$9 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$b.call(b, prop))
          __defNormalProp$9(a, prop, b[prop]);
      if (__getOwnPropSymbols$b)
        for (var prop of __getOwnPropSymbols$b(b)) {
          if (__propIsEnum$b.call(b, prop))
            __defNormalProp$9(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$6 = (a, b) => __defProps$6(a, __getOwnPropDescs$6(b));
    function computedEager(fn, options) {
      var _a2;
      const result = vueDemi.shallowRef();
      vueDemi.watchEffect(() => {
        result.value = fn();
      }, __spreadProps$6(__spreadValues$9({}, options), {
        flush: (_a2 = options == null ? void 0 : options.flush) != null ? _a2 : "sync"
      }));
      return vueDemi.readonly(result);
    }
    var _a;
    var isClient = typeof window !== "undefined";
    var isDef = (val) => typeof val !== "undefined";
    var assert2 = (condition, ...infos) => {
      if (!condition)
        console.warn(...infos);
    };
    var toString = Object.prototype.toString;
    var isBoolean = (val) => typeof val === "boolean";
    var isFunction = (val) => typeof val === "function";
    var isNumber = (val) => typeof val === "number";
    var isString2 = (val) => typeof val === "string";
    var isObject2 = (val) => toString.call(val) === "[object Object]";
    var isWindow = (val) => typeof window !== "undefined" && toString.call(val) === "[object Window]";
    var now = () => Date.now();
    var timestamp = () => +Date.now();
    var clamp = (n, min, max) => Math.min(max, Math.max(min, n));
    var noop = () => {
    };
    var rand = (min, max) => {
      min = Math.ceil(min);
      max = Math.floor(max);
      return Math.floor(Math.random() * (max - min + 1)) + min;
    };
    var isIOS = isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);
    var hasOwn = (val, key) => Object.prototype.hasOwnProperty.call(val, key);
    function resolveUnref(r) {
      return typeof r === "function" ? r() : vueDemi.unref(r);
    }
    function createFilterWrapper(filter, fn) {
      function wrapper(...args) {
        filter(() => fn.apply(this, args), { fn, thisArg: this, args });
      }
      return wrapper;
    }
    var bypassFilter = (invoke2) => {
      return invoke2();
    };
    function debounceFilter(ms, options = {}) {
      let timer;
      let maxTimer;
      const filter = (invoke2) => {
        const duration = resolveUnref(ms);
        const maxDuration = resolveUnref(options.maxWait);
        if (timer)
          clearTimeout(timer);
        if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {
          if (maxTimer) {
            clearTimeout(maxTimer);
            maxTimer = null;
          }
          return invoke2();
        }
        if (maxDuration && !maxTimer) {
          maxTimer = setTimeout(() => {
            if (timer)
              clearTimeout(timer);
            maxTimer = null;
            invoke2();
          }, maxDuration);
        }
        timer = setTimeout(() => {
          if (maxTimer)
            clearTimeout(maxTimer);
          maxTimer = null;
          invoke2();
        }, duration);
      };
      return filter;
    }
    function throttleFilter(ms, trailing = true, leading = true) {
      let lastExec = 0;
      let timer;
      let isLeading = true;
      const clear = () => {
        if (timer) {
          clearTimeout(timer);
          timer = void 0;
        }
      };
      const filter = (invoke2) => {
        const duration = resolveUnref(ms);
        const elapsed = Date.now() - lastExec;
        clear();
        if (duration <= 0) {
          lastExec = Date.now();
          return invoke2();
        }
        if (elapsed > duration && (leading || !isLeading)) {
          lastExec = Date.now();
          invoke2();
        } else if (trailing) {
          timer = setTimeout(() => {
            lastExec = Date.now();
            isLeading = true;
            clear();
            invoke2();
          }, duration);
        }
        if (!leading && !timer)
          timer = setTimeout(() => isLeading = true, duration);
        isLeading = false;
      };
      return filter;
    }
    function pausableFilter(extendFilter = bypassFilter) {
      const isActive = vueDemi.ref(true);
      function pause() {
        isActive.value = false;
      }
      function resume() {
        isActive.value = true;
      }
      const eventFilter = (...args) => {
        if (isActive.value)
          extendFilter(...args);
      };
      return { isActive, pause, resume, eventFilter };
    }
    function __onlyVue3(name = "this function") {
      if (vueDemi.isVue3)
        return;
      throw new Error(`[VueUse] ${name} is only works on Vue 3.`);
    }
    var directiveHooks = {
      mounted: vueDemi.isVue3 ? "mounted" : "inserted",
      updated: vueDemi.isVue3 ? "updated" : "componentUpdated",
      unmounted: vueDemi.isVue3 ? "unmounted" : "unbind"
    };
    function promiseTimeout(ms, throwOnTimeout = false, reason = "Timeout") {
      return new Promise((resolve, reject) => {
        if (throwOnTimeout)
          setTimeout(() => reject(reason), ms);
        else
          setTimeout(resolve, ms);
      });
    }
    function identity(arg) {
      return arg;
    }
    function createSingletonPromise(fn) {
      let _promise;
      function wrapper() {
        if (!_promise)
          _promise = fn();
        return _promise;
      }
      wrapper.reset = async () => {
        const _prev = _promise;
        _promise = void 0;
        if (_prev)
          await _prev;
      };
      return wrapper;
    }
    function invoke(fn) {
      return fn();
    }
    function containsProp(obj, ...props) {
      return props.some((k) => k in obj);
    }
    function increaseWithUnit(target, delta) {
      var _a2;
      if (typeof target === "number")
        return target + delta;
      const value = ((_a2 = target.match(/^-?[0-9]+\.?[0-9]*/)) == null ? void 0 : _a2[0]) || "";
      const unit = target.slice(value.length);
      const result = parseFloat(value) + delta;
      if (Number.isNaN(result))
        return target;
      return result + unit;
    }
    function objectPick(obj, keys, omitUndefined = false) {
      return keys.reduce((n, k) => {
        if (k in obj) {
          if (!omitUndefined || obj[k] !== void 0)
            n[k] = obj[k];
        }
        return n;
      }, {});
    }
    function computedWithControl(source, fn) {
      let v = void 0;
      let track;
      let trigger;
      const dirty = vueDemi.ref(true);
      const update = () => {
        dirty.value = true;
        trigger();
      };
      vueDemi.watch(source, update, { flush: "sync" });
      const get2 = isFunction(fn) ? fn : fn.get;
      const set2 = isFunction(fn) ? void 0 : fn.set;
      const result = vueDemi.customRef((_track, _trigger) => {
        track = _track;
        trigger = _trigger;
        return {
          get() {
            if (dirty.value) {
              v = get2();
              dirty.value = false;
            }
            track();
            return v;
          },
          set(v2) {
            set2 == null ? void 0 : set2(v2);
          }
        };
      });
      if (Object.isExtensible(result))
        result.trigger = update;
      return result;
    }
    function createEventHook() {
      const fns = [];
      const off = (fn) => {
        const index = fns.indexOf(fn);
        if (index !== -1)
          fns.splice(index, 1);
      };
      const on = (fn) => {
        fns.push(fn);
        return {
          off: () => off(fn)
        };
      };
      const trigger = (param) => {
        fns.forEach((fn) => fn(param));
      };
      return {
        on,
        off,
        trigger
      };
    }
    function createGlobalState(stateFactory) {
      let initialized = false;
      let state;
      const scope = vueDemi.effectScope(true);
      return () => {
        if (!initialized) {
          state = scope.run(stateFactory);
          initialized = true;
        }
        return state;
      };
    }
    function createInjectionState(composable) {
      const key = Symbol("InjectionState");
      const useProvidingState = (...args) => {
        vueDemi.provide(key, composable(...args));
      };
      const useInjectedState = () => vueDemi.inject(key);
      return [useProvidingState, useInjectedState];
    }
    function tryOnScopeDispose(fn) {
      if (vueDemi.getCurrentScope()) {
        vueDemi.onScopeDispose(fn);
        return true;
      }
      return false;
    }
    function createSharedComposable(composable) {
      let subscribers = 0;
      let state;
      let scope;
      const dispose = () => {
        subscribers -= 1;
        if (scope && subscribers <= 0) {
          scope.stop();
          state = void 0;
          scope = void 0;
        }
      };
      return (...args) => {
        subscribers += 1;
        if (!state) {
          scope = vueDemi.effectScope(true);
          state = scope.run(() => composable(...args));
        }
        tryOnScopeDispose(dispose);
        return state;
      };
    }
    function extendRef(ref, extend2, { enumerable = false, unwrap = true } = {}) {
      __onlyVue3();
      for (const [key, value] of Object.entries(extend2)) {
        if (key === "value")
          continue;
        if (vueDemi.isRef(value) && unwrap) {
          Object.defineProperty(ref, key, {
            get() {
              return value.value;
            },
            set(v) {
              value.value = v;
            },
            enumerable
          });
        } else {
          Object.defineProperty(ref, key, { value, enumerable });
        }
      }
      return ref;
    }
    function get(obj, key) {
      if (key == null)
        return vueDemi.unref(obj);
      return vueDemi.unref(obj)[key];
    }
    function isDefined(v) {
      return vueDemi.unref(v) != null;
    }
    var __defProp$8 = Object.defineProperty;
    var __getOwnPropSymbols$a = Object.getOwnPropertySymbols;
    var __hasOwnProp$a = Object.prototype.hasOwnProperty;
    var __propIsEnum$a = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$8 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$a.call(b, prop))
          __defNormalProp$8(a, prop, b[prop]);
      if (__getOwnPropSymbols$a)
        for (var prop of __getOwnPropSymbols$a(b)) {
          if (__propIsEnum$a.call(b, prop))
            __defNormalProp$8(a, prop, b[prop]);
        }
      return a;
    };
    function makeDestructurable(obj, arr) {
      if (typeof Symbol !== "undefined") {
        const clone = __spreadValues$8({}, obj);
        Object.defineProperty(clone, Symbol.iterator, {
          enumerable: false,
          value() {
            let index = 0;
            return {
              next: () => ({
                value: arr[index++],
                done: index > arr.length
              })
            };
          }
        });
        return clone;
      } else {
        return Object.assign([...arr], obj);
      }
    }
    function reactify(fn, options) {
      const unrefFn = (options == null ? void 0 : options.computedGetter) === false ? vueDemi.unref : resolveUnref;
      return function(...args) {
        return vueDemi.computed(() => fn.apply(this, args.map((i) => unrefFn(i))));
      };
    }
    function reactifyObject(obj, optionsOrKeys = {}) {
      let keys = [];
      let options;
      if (Array.isArray(optionsOrKeys)) {
        keys = optionsOrKeys;
      } else {
        options = optionsOrKeys;
        const { includeOwnProperties = true } = optionsOrKeys;
        keys.push(...Object.keys(obj));
        if (includeOwnProperties)
          keys.push(...Object.getOwnPropertyNames(obj));
      }
      return Object.fromEntries(keys.map((key) => {
        const value = obj[key];
        return [
          key,
          typeof value === "function" ? reactify(value.bind(obj), options) : value
        ];
      }));
    }
    function toReactive(objectRef) {
      if (!vueDemi.isRef(objectRef))
        return vueDemi.reactive(objectRef);
      const proxy = new Proxy({}, {
        get(_, p, receiver) {
          return vueDemi.unref(Reflect.get(objectRef.value, p, receiver));
        },
        set(_, p, value) {
          if (vueDemi.isRef(objectRef.value[p]) && !vueDemi.isRef(value))
            objectRef.value[p].value = value;
          else
            objectRef.value[p] = value;
          return true;
        },
        deleteProperty(_, p) {
          return Reflect.deleteProperty(objectRef.value, p);
        },
        has(_, p) {
          return Reflect.has(objectRef.value, p);
        },
        ownKeys() {
          return Object.keys(objectRef.value);
        },
        getOwnPropertyDescriptor() {
          return {
            enumerable: true,
            configurable: true
          };
        }
      });
      return vueDemi.reactive(proxy);
    }
    function reactiveComputed(fn) {
      return toReactive(vueDemi.computed(fn));
    }
    function reactiveOmit(obj, ...keys) {
      const flatKeys = keys.flat();
      return reactiveComputed(() => Object.fromEntries(Object.entries(vueDemi.toRefs(obj)).filter((e) => !flatKeys.includes(e[0]))));
    }
    function reactivePick(obj, ...keys) {
      const flatKeys = keys.flat();
      return vueDemi.reactive(Object.fromEntries(flatKeys.map((k) => [k, vueDemi.toRef(obj, k)])));
    }
    function refAutoReset(defaultValue, afterMs = 1e4) {
      return vueDemi.customRef((track, trigger) => {
        let value = defaultValue;
        let timer;
        const resetAfter = () => setTimeout(() => {
          value = defaultValue;
          trigger();
        }, resolveUnref(afterMs));
        tryOnScopeDispose(() => {
          clearTimeout(timer);
        });
        return {
          get() {
            track();
            return value;
          },
          set(newValue) {
            value = newValue;
            trigger();
            clearTimeout(timer);
            timer = resetAfter();
          }
        };
      });
    }
    function useDebounceFn(fn, ms = 200, options = {}) {
      return createFilterWrapper(debounceFilter(ms, options), fn);
    }
    function refDebounced(value, ms = 200, options = {}) {
      if (ms <= 0)
        return value;
      const debounced = vueDemi.ref(value.value);
      const updater = useDebounceFn(() => {
        debounced.value = value.value;
      }, ms, options);
      vueDemi.watch(value, () => updater());
      return debounced;
    }
    function refDefault(source, defaultValue) {
      return vueDemi.computed({
        get() {
          var _a2;
          return (_a2 = source.value) != null ? _a2 : defaultValue;
        },
        set(value) {
          source.value = value;
        }
      });
    }
    function useThrottleFn(fn, ms = 200, trailing = false, leading = true) {
      return createFilterWrapper(throttleFilter(ms, trailing, leading), fn);
    }
    function refThrottled(value, delay = 200, trailing = true, leading = true) {
      if (delay <= 0)
        return value;
      const throttled = vueDemi.ref(value.value);
      const updater = useThrottleFn(() => {
        throttled.value = value.value;
      }, delay, trailing, leading);
      vueDemi.watch(value, () => updater());
      return throttled;
    }
    function refWithControl(initial, options = {}) {
      let source = initial;
      let track;
      let trigger;
      const ref = vueDemi.customRef((_track, _trigger) => {
        track = _track;
        trigger = _trigger;
        return {
          get() {
            return get2();
          },
          set(v) {
            set2(v);
          }
        };
      });
      function get2(tracking = true) {
        if (tracking)
          track();
        return source;
      }
      function set2(value, triggering = true) {
        var _a2, _b;
        if (value === source)
          return;
        const old = source;
        if (((_a2 = options.onBeforeChange) == null ? void 0 : _a2.call(options, value, old)) === false)
          return;
        source = value;
        (_b = options.onChanged) == null ? void 0 : _b.call(options, value, old);
        if (triggering)
          trigger();
      }
      const untrackedGet = () => get2(false);
      const silentSet = (v) => set2(v, false);
      const peek = () => get2(false);
      const lay = (v) => set2(v, false);
      return extendRef(ref, {
        get: get2,
        set: set2,
        untrackedGet,
        silentSet,
        peek,
        lay
      }, { enumerable: true });
    }
    var controlledRef = refWithControl;
    function resolveRef(r) {
      return typeof r === "function" ? vueDemi.computed(r) : vueDemi.ref(r);
    }
    function set(...args) {
      if (args.length === 2) {
        const [ref, value] = args;
        ref.value = value;
      }
      if (args.length === 3) {
        if (vueDemi.isVue2) {
          vueDemi.set(...args);
        } else {
          const [target, key, value] = args;
          target[key] = value;
        }
      }
    }
    function syncRef(left, right, options = {}) {
      var _a2, _b;
      const {
        flush = "sync",
        deep = false,
        immediate = true,
        direction = "both",
        transform: transform2 = {}
      } = options;
      let watchLeft;
      let watchRight;
      const transformLTR = (_a2 = transform2.ltr) != null ? _a2 : (v) => v;
      const transformRTL = (_b = transform2.rtl) != null ? _b : (v) => v;
      if (direction === "both" || direction === "ltr") {
        watchLeft = vueDemi.watch(left, (newValue) => right.value = transformLTR(newValue), { flush, deep, immediate });
      }
      if (direction === "both" || direction === "rtl") {
        watchRight = vueDemi.watch(right, (newValue) => left.value = transformRTL(newValue), { flush, deep, immediate });
      }
      return () => {
        watchLeft == null ? void 0 : watchLeft();
        watchRight == null ? void 0 : watchRight();
      };
    }
    function syncRefs(source, targets, options = {}) {
      const {
        flush = "sync",
        deep = false,
        immediate = true
      } = options;
      if (!Array.isArray(targets))
        targets = [targets];
      return vueDemi.watch(source, (newValue) => targets.forEach((target) => target.value = newValue), { flush, deep, immediate });
    }
    var __defProp$7 = Object.defineProperty;
    var __defProps$5 = Object.defineProperties;
    var __getOwnPropDescs$5 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;
    var __hasOwnProp$9 = Object.prototype.hasOwnProperty;
    var __propIsEnum$9 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$7 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$9.call(b, prop))
          __defNormalProp$7(a, prop, b[prop]);
      if (__getOwnPropSymbols$9)
        for (var prop of __getOwnPropSymbols$9(b)) {
          if (__propIsEnum$9.call(b, prop))
            __defNormalProp$7(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$5 = (a, b) => __defProps$5(a, __getOwnPropDescs$5(b));
    function toRefs(objectRef) {
      if (!vueDemi.isRef(objectRef))
        return vueDemi.toRefs(objectRef);
      const result = Array.isArray(objectRef.value) ? new Array(objectRef.value.length) : {};
      for (const key in objectRef.value) {
        result[key] = vueDemi.customRef(() => ({
          get() {
            return objectRef.value[key];
          },
          set(v) {
            if (Array.isArray(objectRef.value)) {
              const copy = [...objectRef.value];
              copy[key] = v;
              objectRef.value = copy;
            } else {
              const newObject = __spreadProps$5(__spreadValues$7({}, objectRef.value), { [key]: v });
              Object.setPrototypeOf(newObject, objectRef.value);
              objectRef.value = newObject;
            }
          }
        }));
      }
      return result;
    }
    function tryOnBeforeMount(fn, sync = true) {
      if (vueDemi.getCurrentInstance())
        vueDemi.onBeforeMount(fn);
      else if (sync)
        fn();
      else
        vueDemi.nextTick(fn);
    }
    function tryOnBeforeUnmount(fn) {
      if (vueDemi.getCurrentInstance())
        vueDemi.onBeforeUnmount(fn);
    }
    function tryOnMounted(fn, sync = true) {
      if (vueDemi.getCurrentInstance())
        vueDemi.onMounted(fn);
      else if (sync)
        fn();
      else
        vueDemi.nextTick(fn);
    }
    function tryOnUnmounted(fn) {
      if (vueDemi.getCurrentInstance())
        vueDemi.onUnmounted(fn);
    }
    function createUntil(r, isNot = false) {
      function toMatch(condition, { flush = "sync", deep = false, timeout, throwOnTimeout } = {}) {
        let stop = null;
        const watcher = new Promise((resolve) => {
          stop = vueDemi.watch(r, (v) => {
            if (condition(v) !== isNot) {
              stop == null ? void 0 : stop();
              resolve(v);
            }
          }, {
            flush,
            deep,
            immediate: true
          });
        });
        const promises = [watcher];
        if (timeout != null) {
          promises.push(promiseTimeout(timeout, throwOnTimeout).then(() => resolveUnref(r)).finally(() => stop == null ? void 0 : stop()));
        }
        return Promise.race(promises);
      }
      function toBe(value, options) {
        if (!vueDemi.isRef(value))
          return toMatch((v) => v === value, options);
        const { flush = "sync", deep = false, timeout, throwOnTimeout } = options != null ? options : {};
        let stop = null;
        const watcher = new Promise((resolve) => {
          stop = vueDemi.watch([r, value], ([v1, v2]) => {
            if (isNot !== (v1 === v2)) {
              stop == null ? void 0 : stop();
              resolve(v1);
            }
          }, {
            flush,
            deep,
            immediate: true
          });
        });
        const promises = [watcher];
        if (timeout != null) {
          promises.push(promiseTimeout(timeout, throwOnTimeout).then(() => resolveUnref(r)).finally(() => {
            stop == null ? void 0 : stop();
            return resolveUnref(r);
          }));
        }
        return Promise.race(promises);
      }
      function toBeTruthy(options) {
        return toMatch((v) => Boolean(v), options);
      }
      function toBeNull(options) {
        return toBe(null, options);
      }
      function toBeUndefined(options) {
        return toBe(void 0, options);
      }
      function toBeNaN(options) {
        return toMatch(Number.isNaN, options);
      }
      function toContains(value, options) {
        return toMatch((v) => {
          const array = Array.from(v);
          return array.includes(value) || array.includes(resolveUnref(value));
        }, options);
      }
      function changed(options) {
        return changedTimes(1, options);
      }
      function changedTimes(n = 1, options) {
        let count = -1;
        return toMatch(() => {
          count += 1;
          return count >= n;
        }, options);
      }
      if (Array.isArray(resolveUnref(r))) {
        const instance = {
          toMatch,
          toContains,
          changed,
          changedTimes,
          get not() {
            return createUntil(r, !isNot);
          }
        };
        return instance;
      } else {
        const instance = {
          toMatch,
          toBe,
          toBeTruthy,
          toBeNull,
          toBeNaN,
          toBeUndefined,
          changed,
          changedTimes,
          get not() {
            return createUntil(r, !isNot);
          }
        };
        return instance;
      }
    }
    function until(r) {
      return createUntil(r);
    }
    function useArrayEvery(list, fn) {
      return vueDemi.computed(() => resolveUnref(list).every((element, index, array) => fn(resolveUnref(element), index, array)));
    }
    function useArrayFilter(list, fn) {
      return vueDemi.computed(() => resolveUnref(list).map((i) => resolveUnref(i)).filter(fn));
    }
    function useArrayFind(list, fn) {
      return vueDemi.computed(() => resolveUnref(resolveUnref(list).find((element, index, array) => fn(resolveUnref(element), index, array))));
    }
    function useArrayFindIndex(list, fn) {
      return vueDemi.computed(() => resolveUnref(list).findIndex((element, index, array) => fn(resolveUnref(element), index, array)));
    }
    function useArrayJoin(list, separator) {
      return vueDemi.computed(() => resolveUnref(list).map((i) => resolveUnref(i)).join(resolveUnref(separator)));
    }
    function useArrayMap(list, fn) {
      return vueDemi.computed(() => resolveUnref(list).map((i) => resolveUnref(i)).map(fn));
    }
    function useArrayReduce(list, reducer, ...args) {
      const reduceCallback = (sum, value, index) => reducer(resolveUnref(sum), resolveUnref(value), index);
      return vueDemi.computed(() => {
        const resolved = resolveUnref(list);
        return args.length ? resolved.reduce(reduceCallback, resolveUnref(args[0])) : resolved.reduce(reduceCallback);
      });
    }
    function useArraySome(list, fn) {
      return vueDemi.computed(() => resolveUnref(list).some((element, index, array) => fn(resolveUnref(element), index, array)));
    }
    function useCounter(initialValue = 0, options = {}) {
      const count = vueDemi.ref(initialValue);
      const {
        max = Infinity,
        min = -Infinity
      } = options;
      const inc = (delta = 1) => count.value = Math.min(max, count.value + delta);
      const dec = (delta = 1) => count.value = Math.max(min, count.value - delta);
      const get2 = () => count.value;
      const set2 = (val) => count.value = val;
      const reset = (val = initialValue) => {
        initialValue = val;
        return set2(val);
      };
      return { count, inc, dec, get: get2, set: set2, reset };
    }
    var REGEX_PARSE = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/;
    var REGEX_FORMAT = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a{1,2}|A{1,2}|m{1,2}|s{1,2}|Z{1,2}|SSS/g;
    var defaultMeridiem = (hours, minutes, isLowercase, hasPeriod) => {
      let m = hours < 12 ? "AM" : "PM";
      if (hasPeriod)
        m = m.split("").reduce((acc, curr) => acc += `${curr}.`, "");
      return isLowercase ? m.toLowerCase() : m;
    };
    var formatDate = (date, formatStr, options) => {
      var _a2;
      const years = date.getFullYear();
      const month = date.getMonth();
      const days = date.getDate();
      const hours = date.getHours();
      const minutes = date.getMinutes();
      const seconds = date.getSeconds();
      const milliseconds = date.getMilliseconds();
      const day = date.getDay();
      const meridiem = (_a2 = options.customMeridiem) != null ? _a2 : defaultMeridiem;
      const matches = {
        YY: () => String(years).slice(-2),
        YYYY: () => years,
        M: () => month + 1,
        MM: () => `${month + 1}`.padStart(2, "0"),
        MMM: () => date.toLocaleDateString(options.locales, { month: "short" }),
        MMMM: () => date.toLocaleDateString(options.locales, { month: "long" }),
        D: () => String(days),
        DD: () => `${days}`.padStart(2, "0"),
        H: () => String(hours),
        HH: () => `${hours}`.padStart(2, "0"),
        h: () => `${hours % 12 || 12}`.padStart(1, "0"),
        hh: () => `${hours % 12 || 12}`.padStart(2, "0"),
        m: () => String(minutes),
        mm: () => `${minutes}`.padStart(2, "0"),
        s: () => String(seconds),
        ss: () => `${seconds}`.padStart(2, "0"),
        SSS: () => `${milliseconds}`.padStart(3, "0"),
        d: () => day,
        dd: () => date.toLocaleDateString(options.locales, { weekday: "narrow" }),
        ddd: () => date.toLocaleDateString(options.locales, { weekday: "short" }),
        dddd: () => date.toLocaleDateString(options.locales, { weekday: "long" }),
        A: () => meridiem(hours, minutes),
        AA: () => meridiem(hours, minutes, false, true),
        a: () => meridiem(hours, minutes, true),
        aa: () => meridiem(hours, minutes, true, true)
      };
      return formatStr.replace(REGEX_FORMAT, (match, $1) => $1 || matches[match]());
    };
    var normalizeDate = (date) => {
      if (date === null)
        return new Date(NaN);
      if (date === void 0)
        return new Date();
      if (date instanceof Date)
        return new Date(date);
      if (typeof date === "string" && !/Z$/i.test(date)) {
        const d = date.match(REGEX_PARSE);
        if (d) {
          const m = d[2] - 1 || 0;
          const ms = (d[7] || "0").substring(0, 3);
          return new Date(d[1], m, d[3] || 1, d[4] || 0, d[5] || 0, d[6] || 0, ms);
        }
      }
      return new Date(date);
    };
    function useDateFormat(date, formatStr = "HH:mm:ss", options = {}) {
      return vueDemi.computed(() => formatDate(normalizeDate(resolveUnref(date)), resolveUnref(formatStr), options));
    }
    function useIntervalFn(cb, interval = 1e3, options = {}) {
      const {
        immediate = true,
        immediateCallback = false
      } = options;
      let timer = null;
      const isActive = vueDemi.ref(false);
      function clean() {
        if (timer) {
          clearInterval(timer);
          timer = null;
        }
      }
      function pause() {
        isActive.value = false;
        clean();
      }
      function resume() {
        if (vueDemi.unref(interval) <= 0)
          return;
        isActive.value = true;
        if (immediateCallback)
          cb();
        clean();
        timer = setInterval(cb, resolveUnref(interval));
      }
      if (immediate && isClient)
        resume();
      if (vueDemi.isRef(interval)) {
        const stopWatch = vueDemi.watch(interval, () => {
          if (isActive.value && isClient)
            resume();
        });
        tryOnScopeDispose(stopWatch);
      }
      tryOnScopeDispose(pause);
      return {
        isActive,
        pause,
        resume
      };
    }
    var __defProp$6 = Object.defineProperty;
    var __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;
    var __hasOwnProp$8 = Object.prototype.hasOwnProperty;
    var __propIsEnum$8 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$6 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$8.call(b, prop))
          __defNormalProp$6(a, prop, b[prop]);
      if (__getOwnPropSymbols$8)
        for (var prop of __getOwnPropSymbols$8(b)) {
          if (__propIsEnum$8.call(b, prop))
            __defNormalProp$6(a, prop, b[prop]);
        }
      return a;
    };
    function useInterval(interval = 1e3, options = {}) {
      const {
        controls: exposeControls = false,
        immediate = true,
        callback
      } = options;
      const counter = vueDemi.ref(0);
      const update = () => counter.value += 1;
      const controls = useIntervalFn(callback ? () => {
        update();
        callback(counter.value);
      } : update, interval, { immediate });
      if (exposeControls) {
        return __spreadValues$6({
          counter
        }, controls);
      } else {
        return counter;
      }
    }
    function useLastChanged(source, options = {}) {
      var _a2;
      const ms = vueDemi.ref((_a2 = options.initialValue) != null ? _a2 : null);
      vueDemi.watch(source, () => ms.value = timestamp(), options);
      return ms;
    }
    function useTimeoutFn(cb, interval, options = {}) {
      const {
        immediate = true
      } = options;
      const isPending = vueDemi.ref(false);
      let timer = null;
      function clear() {
        if (timer) {
          clearTimeout(timer);
          timer = null;
        }
      }
      function stop() {
        isPending.value = false;
        clear();
      }
      function start(...args) {
        clear();
        isPending.value = true;
        timer = setTimeout(() => {
          isPending.value = false;
          timer = null;
          cb(...args);
        }, resolveUnref(interval));
      }
      if (immediate) {
        isPending.value = true;
        if (isClient)
          start();
      }
      tryOnScopeDispose(stop);
      return {
        isPending,
        start,
        stop
      };
    }
    var __defProp$5 = Object.defineProperty;
    var __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;
    var __hasOwnProp$7 = Object.prototype.hasOwnProperty;
    var __propIsEnum$7 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$5 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$7.call(b, prop))
          __defNormalProp$5(a, prop, b[prop]);
      if (__getOwnPropSymbols$7)
        for (var prop of __getOwnPropSymbols$7(b)) {
          if (__propIsEnum$7.call(b, prop))
            __defNormalProp$5(a, prop, b[prop]);
        }
      return a;
    };
    function useTimeout(interval = 1e3, options = {}) {
      const {
        controls: exposeControls = false,
        callback
      } = options;
      const controls = useTimeoutFn(callback != null ? callback : noop, interval, options);
      const ready = vueDemi.computed(() => !controls.isPending.value);
      if (exposeControls) {
        return __spreadValues$5({
          ready
        }, controls);
      } else {
        return ready;
      }
    }
    function useToNumber(value, options = {}) {
      const {
        method = "parseFloat",
        radix,
        nanToZero
      } = options;
      return vueDemi.computed(() => {
        let resolved = resolveUnref(value);
        if (typeof resolved === "string")
          resolved = Number[method](resolved, radix);
        if (nanToZero && isNaN(resolved))
          resolved = 0;
        return resolved;
      });
    }
    function useToString(value) {
      return vueDemi.computed(() => `${resolveUnref(value)}`);
    }
    function useToggle(initialValue = false, options = {}) {
      const {
        truthyValue = true,
        falsyValue = false
      } = options;
      const valueIsRef = vueDemi.isRef(initialValue);
      const _value = vueDemi.ref(initialValue);
      function toggle(value) {
        if (arguments.length) {
          _value.value = value;
          return _value.value;
        } else {
          const truthy = resolveUnref(truthyValue);
          _value.value = _value.value === truthy ? resolveUnref(falsyValue) : truthy;
          return _value.value;
        }
      }
      if (valueIsRef)
        return toggle;
      else
        return [_value, toggle];
    }
    function watchArray(source, cb, options) {
      let oldList = (options == null ? void 0 : options.immediate) ? [] : [
        ...source instanceof Function ? source() : Array.isArray(source) ? source : vueDemi.unref(source)
      ];
      return vueDemi.watch(source, (newList, _, onCleanup) => {
        const oldListRemains = new Array(oldList.length);
        const added = [];
        for (const obj of newList) {
          let found = false;
          for (let i = 0; i < oldList.length; i++) {
            if (!oldListRemains[i] && obj === oldList[i]) {
              oldListRemains[i] = true;
              found = true;
              break;
            }
          }
          if (!found)
            added.push(obj);
        }
        const removed = oldList.filter((_2, i) => !oldListRemains[i]);
        cb(newList, oldList, added, removed, onCleanup);
        oldList = [...newList];
      }, options);
    }
    var __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;
    var __hasOwnProp$6 = Object.prototype.hasOwnProperty;
    var __propIsEnum$6 = Object.prototype.propertyIsEnumerable;
    var __objRest$5 = (source, exclude) => {
      var target = {};
      for (var prop in source)
        if (__hasOwnProp$6.call(source, prop) && exclude.indexOf(prop) < 0)
          target[prop] = source[prop];
      if (source != null && __getOwnPropSymbols$6)
        for (var prop of __getOwnPropSymbols$6(source)) {
          if (exclude.indexOf(prop) < 0 && __propIsEnum$6.call(source, prop))
            target[prop] = source[prop];
        }
      return target;
    };
    function watchWithFilter(source, cb, options = {}) {
      const _a2 = options, {
        eventFilter = bypassFilter
      } = _a2, watchOptions = __objRest$5(_a2, [
        "eventFilter"
      ]);
      return vueDemi.watch(source, createFilterWrapper(eventFilter, cb), watchOptions);
    }
    var __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;
    var __hasOwnProp$5 = Object.prototype.hasOwnProperty;
    var __propIsEnum$5 = Object.prototype.propertyIsEnumerable;
    var __objRest$4 = (source, exclude) => {
      var target = {};
      for (var prop in source)
        if (__hasOwnProp$5.call(source, prop) && exclude.indexOf(prop) < 0)
          target[prop] = source[prop];
      if (source != null && __getOwnPropSymbols$5)
        for (var prop of __getOwnPropSymbols$5(source)) {
          if (exclude.indexOf(prop) < 0 && __propIsEnum$5.call(source, prop))
            target[prop] = source[prop];
        }
      return target;
    };
    function watchAtMost(source, cb, options) {
      const _a2 = options, {
        count
      } = _a2, watchOptions = __objRest$4(_a2, [
        "count"
      ]);
      const current = vueDemi.ref(0);
      const stop = watchWithFilter(source, (...args) => {
        current.value += 1;
        if (current.value >= resolveUnref(count))
          vueDemi.nextTick(() => stop());
        cb(...args);
      }, watchOptions);
      return { count: current, stop };
    }
    var __defProp$4 = Object.defineProperty;
    var __defProps$4 = Object.defineProperties;
    var __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;
    var __hasOwnProp$4 = Object.prototype.hasOwnProperty;
    var __propIsEnum$4 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$4 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$4.call(b, prop))
          __defNormalProp$4(a, prop, b[prop]);
      if (__getOwnPropSymbols$4)
        for (var prop of __getOwnPropSymbols$4(b)) {
          if (__propIsEnum$4.call(b, prop))
            __defNormalProp$4(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));
    var __objRest$3 = (source, exclude) => {
      var target = {};
      for (var prop in source)
        if (__hasOwnProp$4.call(source, prop) && exclude.indexOf(prop) < 0)
          target[prop] = source[prop];
      if (source != null && __getOwnPropSymbols$4)
        for (var prop of __getOwnPropSymbols$4(source)) {
          if (exclude.indexOf(prop) < 0 && __propIsEnum$4.call(source, prop))
            target[prop] = source[prop];
        }
      return target;
    };
    function watchDebounced(source, cb, options = {}) {
      const _a2 = options, {
        debounce = 0,
        maxWait = void 0
      } = _a2, watchOptions = __objRest$3(_a2, [
        "debounce",
        "maxWait"
      ]);
      return watchWithFilter(source, cb, __spreadProps$4(__spreadValues$4({}, watchOptions), {
        eventFilter: debounceFilter(debounce, { maxWait })
      }));
    }
    var __defProp$3 = Object.defineProperty;
    var __defProps$3 = Object.defineProperties;
    var __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;
    var __hasOwnProp$3 = Object.prototype.hasOwnProperty;
    var __propIsEnum$3 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$3 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$3.call(b, prop))
          __defNormalProp$3(a, prop, b[prop]);
      if (__getOwnPropSymbols$3)
        for (var prop of __getOwnPropSymbols$3(b)) {
          if (__propIsEnum$3.call(b, prop))
            __defNormalProp$3(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));
    var __objRest$2 = (source, exclude) => {
      var target = {};
      for (var prop in source)
        if (__hasOwnProp$3.call(source, prop) && exclude.indexOf(prop) < 0)
          target[prop] = source[prop];
      if (source != null && __getOwnPropSymbols$3)
        for (var prop of __getOwnPropSymbols$3(source)) {
          if (exclude.indexOf(prop) < 0 && __propIsEnum$3.call(source, prop))
            target[prop] = source[prop];
        }
      return target;
    };
    function watchIgnorable(source, cb, options = {}) {
      const _a2 = options, {
        eventFilter = bypassFilter
      } = _a2, watchOptions = __objRest$2(_a2, [
        "eventFilter"
      ]);
      const filteredCb = createFilterWrapper(eventFilter, cb);
      let ignoreUpdates;
      let ignorePrevAsyncUpdates;
      let stop;
      if (watchOptions.flush === "sync") {
        const ignore = vueDemi.ref(false);
        ignorePrevAsyncUpdates = () => {
        };
        ignoreUpdates = (updater) => {
          ignore.value = true;
          updater();
          ignore.value = false;
        };
        stop = vueDemi.watch(source, (...args) => {
          if (!ignore.value)
            filteredCb(...args);
        }, watchOptions);
      } else {
        const disposables = [];
        const ignoreCounter = vueDemi.ref(0);
        const syncCounter = vueDemi.ref(0);
        ignorePrevAsyncUpdates = () => {
          ignoreCounter.value = syncCounter.value;
        };
        disposables.push(vueDemi.watch(source, () => {
          syncCounter.value++;
        }, __spreadProps$3(__spreadValues$3({}, watchOptions), { flush: "sync" })));
        ignoreUpdates = (updater) => {
          const syncCounterPrev = syncCounter.value;
          updater();
          ignoreCounter.value += syncCounter.value - syncCounterPrev;
        };
        disposables.push(vueDemi.watch(source, (...args) => {
          const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;
          ignoreCounter.value = 0;
          syncCounter.value = 0;
          if (ignore)
            return;
          filteredCb(...args);
        }, watchOptions));
        stop = () => {
          disposables.forEach((fn) => fn());
        };
      }
      return { stop, ignoreUpdates, ignorePrevAsyncUpdates };
    }
    function watchOnce(source, cb, options) {
      const stop = vueDemi.watch(source, (...args) => {
        vueDemi.nextTick(() => stop());
        return cb(...args);
      }, options);
    }
    var __defProp$2 = Object.defineProperty;
    var __defProps$2 = Object.defineProperties;
    var __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;
    var __hasOwnProp$2 = Object.prototype.hasOwnProperty;
    var __propIsEnum$2 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$2 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$2.call(b, prop))
          __defNormalProp$2(a, prop, b[prop]);
      if (__getOwnPropSymbols$2)
        for (var prop of __getOwnPropSymbols$2(b)) {
          if (__propIsEnum$2.call(b, prop))
            __defNormalProp$2(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));
    var __objRest$1 = (source, exclude) => {
      var target = {};
      for (var prop in source)
        if (__hasOwnProp$2.call(source, prop) && exclude.indexOf(prop) < 0)
          target[prop] = source[prop];
      if (source != null && __getOwnPropSymbols$2)
        for (var prop of __getOwnPropSymbols$2(source)) {
          if (exclude.indexOf(prop) < 0 && __propIsEnum$2.call(source, prop))
            target[prop] = source[prop];
        }
      return target;
    };
    function watchPausable(source, cb, options = {}) {
      const _a2 = options, {
        eventFilter: filter
      } = _a2, watchOptions = __objRest$1(_a2, [
        "eventFilter"
      ]);
      const { eventFilter, pause, resume, isActive } = pausableFilter(filter);
      const stop = watchWithFilter(source, cb, __spreadProps$2(__spreadValues$2({}, watchOptions), {
        eventFilter
      }));
      return { stop, pause, resume, isActive };
    }
    var __defProp$1 = Object.defineProperty;
    var __defProps$1 = Object.defineProperties;
    var __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;
    var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
    var __propIsEnum$1 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$1 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$1.call(b, prop))
          __defNormalProp$1(a, prop, b[prop]);
      if (__getOwnPropSymbols$1)
        for (var prop of __getOwnPropSymbols$1(b)) {
          if (__propIsEnum$1.call(b, prop))
            __defNormalProp$1(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));
    var __objRest = (source, exclude) => {
      var target = {};
      for (var prop in source)
        if (__hasOwnProp$1.call(source, prop) && exclude.indexOf(prop) < 0)
          target[prop] = source[prop];
      if (source != null && __getOwnPropSymbols$1)
        for (var prop of __getOwnPropSymbols$1(source)) {
          if (exclude.indexOf(prop) < 0 && __propIsEnum$1.call(source, prop))
            target[prop] = source[prop];
        }
      return target;
    };
    function watchThrottled(source, cb, options = {}) {
      const _a2 = options, {
        throttle = 0,
        trailing = true,
        leading = true
      } = _a2, watchOptions = __objRest(_a2, [
        "throttle",
        "trailing",
        "leading"
      ]);
      return watchWithFilter(source, cb, __spreadProps$1(__spreadValues$1({}, watchOptions), {
        eventFilter: throttleFilter(throttle, trailing, leading)
      }));
    }
    var __defProp = Object.defineProperty;
    var __defProps = Object.defineProperties;
    var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols = Object.getOwnPropertySymbols;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __propIsEnum = Object.prototype.propertyIsEnumerable;
    var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp.call(b, prop))
          __defNormalProp(a, prop, b[prop]);
      if (__getOwnPropSymbols)
        for (var prop of __getOwnPropSymbols(b)) {
          if (__propIsEnum.call(b, prop))
            __defNormalProp(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
    function watchTriggerable(source, cb, options = {}) {
      let cleanupFn;
      function onEffect() {
        if (!cleanupFn)
          return;
        const fn = cleanupFn;
        cleanupFn = void 0;
        fn();
      }
      function onCleanup(callback) {
        cleanupFn = callback;
      }
      const _cb = (value, oldValue) => {
        onEffect();
        return cb(value, oldValue, onCleanup);
      };
      const res = watchIgnorable(source, _cb, options);
      const { ignoreUpdates } = res;
      const trigger = () => {
        let res2;
        ignoreUpdates(() => {
          res2 = _cb(getWatchSources(source), getOldValue(source));
        });
        return res2;
      };
      return __spreadProps(__spreadValues({}, res), {
        trigger
      });
    }
    function getWatchSources(sources) {
      if (vueDemi.isReactive(sources))
        return sources;
      if (Array.isArray(sources))
        return sources.map((item) => getOneWatchSource(item));
      return getOneWatchSource(sources);
    }
    function getOneWatchSource(source) {
      return typeof source === "function" ? source() : vueDemi.unref(source);
    }
    function getOldValue(source) {
      return Array.isArray(source) ? source.map(() => void 0) : void 0;
    }
    function whenever(source, cb, options) {
      return vueDemi.watch(source, (v, ov, onInvalidate) => {
        if (v)
          cb(v, ov, onInvalidate);
      }, options);
    }
    exports.__onlyVue3 = __onlyVue3;
    exports.assert = assert2;
    exports.autoResetRef = refAutoReset;
    exports.bypassFilter = bypassFilter;
    exports.clamp = clamp;
    exports.computedEager = computedEager;
    exports.computedWithControl = computedWithControl;
    exports.containsProp = containsProp;
    exports.controlledComputed = computedWithControl;
    exports.controlledRef = controlledRef;
    exports.createEventHook = createEventHook;
    exports.createFilterWrapper = createFilterWrapper;
    exports.createGlobalState = createGlobalState;
    exports.createInjectionState = createInjectionState;
    exports.createReactiveFn = reactify;
    exports.createSharedComposable = createSharedComposable;
    exports.createSingletonPromise = createSingletonPromise;
    exports.debounceFilter = debounceFilter;
    exports.debouncedRef = refDebounced;
    exports.debouncedWatch = watchDebounced;
    exports.directiveHooks = directiveHooks;
    exports.eagerComputed = computedEager;
    exports.extendRef = extendRef;
    exports.formatDate = formatDate;
    exports.get = get;
    exports.hasOwn = hasOwn;
    exports.identity = identity;
    exports.ignorableWatch = watchIgnorable;
    exports.increaseWithUnit = increaseWithUnit;
    exports.invoke = invoke;
    exports.isBoolean = isBoolean;
    exports.isClient = isClient;
    exports.isDef = isDef;
    exports.isDefined = isDefined;
    exports.isFunction = isFunction;
    exports.isIOS = isIOS;
    exports.isNumber = isNumber;
    exports.isObject = isObject2;
    exports.isString = isString2;
    exports.isWindow = isWindow;
    exports.makeDestructurable = makeDestructurable;
    exports.noop = noop;
    exports.normalizeDate = normalizeDate;
    exports.now = now;
    exports.objectPick = objectPick;
    exports.pausableFilter = pausableFilter;
    exports.pausableWatch = watchPausable;
    exports.promiseTimeout = promiseTimeout;
    exports.rand = rand;
    exports.reactify = reactify;
    exports.reactifyObject = reactifyObject;
    exports.reactiveComputed = reactiveComputed;
    exports.reactiveOmit = reactiveOmit;
    exports.reactivePick = reactivePick;
    exports.refAutoReset = refAutoReset;
    exports.refDebounced = refDebounced;
    exports.refDefault = refDefault;
    exports.refThrottled = refThrottled;
    exports.refWithControl = refWithControl;
    exports.resolveRef = resolveRef;
    exports.resolveUnref = resolveUnref;
    exports.set = set;
    exports.syncRef = syncRef;
    exports.syncRefs = syncRefs;
    exports.throttleFilter = throttleFilter;
    exports.throttledRef = refThrottled;
    exports.throttledWatch = watchThrottled;
    exports.timestamp = timestamp;
    exports.toReactive = toReactive;
    exports.toRefs = toRefs;
    exports.tryOnBeforeMount = tryOnBeforeMount;
    exports.tryOnBeforeUnmount = tryOnBeforeUnmount;
    exports.tryOnMounted = tryOnMounted;
    exports.tryOnScopeDispose = tryOnScopeDispose;
    exports.tryOnUnmounted = tryOnUnmounted;
    exports.until = until;
    exports.useArrayEvery = useArrayEvery;
    exports.useArrayFilter = useArrayFilter;
    exports.useArrayFind = useArrayFind;
    exports.useArrayFindIndex = useArrayFindIndex;
    exports.useArrayJoin = useArrayJoin;
    exports.useArrayMap = useArrayMap;
    exports.useArrayReduce = useArrayReduce;
    exports.useArraySome = useArraySome;
    exports.useCounter = useCounter;
    exports.useDateFormat = useDateFormat;
    exports.useDebounce = refDebounced;
    exports.useDebounceFn = useDebounceFn;
    exports.useInterval = useInterval;
    exports.useIntervalFn = useIntervalFn;
    exports.useLastChanged = useLastChanged;
    exports.useThrottle = refThrottled;
    exports.useThrottleFn = useThrottleFn;
    exports.useTimeout = useTimeout;
    exports.useTimeoutFn = useTimeoutFn;
    exports.useToNumber = useToNumber;
    exports.useToString = useToString;
    exports.useToggle = useToggle;
    exports.watchArray = watchArray;
    exports.watchAtMost = watchAtMost;
    exports.watchDebounced = watchDebounced;
    exports.watchIgnorable = watchIgnorable;
    exports.watchOnce = watchOnce;
    exports.watchPausable = watchPausable;
    exports.watchThrottled = watchThrottled;
    exports.watchTriggerable = watchTriggerable;
    exports.watchWithFilter = watchWithFilter;
    exports.whenever = whenever;
  }
});

// node_modules/@vueuse/core/index.cjs
var require_core = __commonJS({
  "node_modules/@vueuse/core/index.cjs"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var shared = require_shared();
    var vueDemi = require_lib();
    function computedAsync(evaluationCallback, initialState, optionsOrRef) {
      let options;
      if (vueDemi.isRef(optionsOrRef)) {
        options = {
          evaluating: optionsOrRef
        };
      } else {
        options = optionsOrRef || {};
      }
      const {
        lazy = false,
        evaluating = void 0,
        onError = shared.noop
      } = options;
      const started = vueDemi.ref(!lazy);
      const current = vueDemi.ref(initialState);
      let counter = 0;
      vueDemi.watchEffect(async (onInvalidate) => {
        if (!started.value)
          return;
        counter++;
        const counterAtBeginning = counter;
        let hasFinished = false;
        if (evaluating) {
          Promise.resolve().then(() => {
            evaluating.value = true;
          });
        }
        try {
          const result = await evaluationCallback((cancelCallback) => {
            onInvalidate(() => {
              if (evaluating)
                evaluating.value = false;
              if (!hasFinished)
                cancelCallback();
            });
          });
          if (counterAtBeginning === counter)
            current.value = result;
        } catch (e) {
          onError(e);
        } finally {
          if (evaluating && counterAtBeginning === counter)
            evaluating.value = false;
          hasFinished = true;
        }
      });
      if (lazy) {
        return vueDemi.computed(() => {
          started.value = true;
          return current.value;
        });
      } else {
        return current;
      }
    }
    function computedInject(key, options, defaultSource, treatDefaultAsFactory) {
      let source = vueDemi.inject(key);
      if (defaultSource)
        source = vueDemi.inject(key, defaultSource);
      if (treatDefaultAsFactory)
        source = vueDemi.inject(key, defaultSource, treatDefaultAsFactory);
      if (typeof options === "function") {
        return vueDemi.computed((ctx) => options(source, ctx));
      } else {
        return vueDemi.computed({
          get: (ctx) => options.get(source, ctx),
          set: options.set
        });
      }
    }
    var createUnrefFn = (fn) => {
      return function(...args) {
        return fn.apply(this, args.map((i) => vueDemi.unref(i)));
      };
    };
    function unrefElement(elRef) {
      var _a;
      const plain = shared.resolveUnref(elRef);
      return (_a = plain == null ? void 0 : plain.$el) != null ? _a : plain;
    }
    var defaultWindow = shared.isClient ? window : void 0;
    var defaultDocument = shared.isClient ? window.document : void 0;
    var defaultNavigator = shared.isClient ? window.navigator : void 0;
    var defaultLocation = shared.isClient ? window.location : void 0;
    function useEventListener(...args) {
      let target;
      let event;
      let listener;
      let options;
      if (shared.isString(args[0])) {
        [event, listener, options] = args;
        target = defaultWindow;
      } else {
        [target, event, listener, options] = args;
      }
      if (!target)
        return shared.noop;
      let cleanup = shared.noop;
      const stopWatch = vueDemi.watch(() => unrefElement(target), (el) => {
        cleanup();
        if (!el)
          return;
        el.addEventListener(event, listener, options);
        cleanup = () => {
          el.removeEventListener(event, listener, options);
          cleanup = shared.noop;
        };
      }, { immediate: true, flush: "post" });
      const stop = () => {
        stopWatch();
        cleanup();
      };
      shared.tryOnScopeDispose(stop);
      return stop;
    }
    function onClickOutside(target, handler, options = {}) {
      const { window: window2 = defaultWindow, ignore, capture = true, detectIframe = false } = options;
      if (!window2)
        return;
      const shouldListen = vueDemi.ref(true);
      let fallback;
      const listener = (event) => {
        window2.clearTimeout(fallback);
        const el = unrefElement(target);
        if (!el || el === event.target || event.composedPath().includes(el) || !shouldListen.value)
          return;
        handler(event);
      };
      const shouldIgnore = (event) => {
        return ignore && ignore.some((target2) => {
          const el = unrefElement(target2);
          return el && (event.target === el || event.composedPath().includes(el));
        });
      };
      const cleanup = [
        useEventListener(window2, "click", listener, { passive: true, capture }),
        useEventListener(window2, "pointerdown", (e) => {
          const el = unrefElement(target);
          shouldListen.value = !!el && !e.composedPath().includes(el) && !shouldIgnore(e);
        }, { passive: true }),
        useEventListener(window2, "pointerup", (e) => {
          if (e.button === 0) {
            const path = e.composedPath();
            e.composedPath = () => path;
            fallback = window2.setTimeout(() => listener(e), 50);
          }
        }, { passive: true }),
        detectIframe && useEventListener(window2, "blur", (event) => {
          var _a;
          const el = unrefElement(target);
          if (((_a = document.activeElement) == null ? void 0 : _a.tagName) === "IFRAME" && !(el == null ? void 0 : el.contains(document.activeElement)))
            handler(event);
        })
      ].filter(Boolean);
      const stop = () => cleanup.forEach((fn) => fn());
      return stop;
    }
    var __defProp$m = Object.defineProperty;
    var __defProps$9 = Object.defineProperties;
    var __getOwnPropDescs$9 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$o = Object.getOwnPropertySymbols;
    var __hasOwnProp$o = Object.prototype.hasOwnProperty;
    var __propIsEnum$o = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$m = (obj, key, value) => key in obj ? __defProp$m(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$m = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$o.call(b, prop))
          __defNormalProp$m(a, prop, b[prop]);
      if (__getOwnPropSymbols$o)
        for (var prop of __getOwnPropSymbols$o(b)) {
          if (__propIsEnum$o.call(b, prop))
            __defNormalProp$m(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$9 = (a, b) => __defProps$9(a, __getOwnPropDescs$9(b));
    var createKeyPredicate = (keyFilter) => {
      if (typeof keyFilter === "function")
        return keyFilter;
      else if (typeof keyFilter === "string")
        return (event) => event.key === keyFilter;
      else if (Array.isArray(keyFilter))
        return (event) => keyFilter.includes(event.key);
      return () => true;
    };
    function onKeyStroke(...args) {
      let key;
      let handler;
      let options = {};
      if (args.length === 3) {
        key = args[0];
        handler = args[1];
        options = args[2];
      } else if (args.length === 2) {
        if (typeof args[1] === "object") {
          key = true;
          handler = args[0];
          options = args[1];
        } else {
          key = args[0];
          handler = args[1];
        }
      } else {
        key = true;
        handler = args[0];
      }
      const { target = defaultWindow, eventName = "keydown", passive = false } = options;
      const predicate = createKeyPredicate(key);
      const listener = (e) => {
        if (predicate(e))
          handler(e);
      };
      return useEventListener(target, eventName, listener, passive);
    }
    function onKeyDown(key, handler, options = {}) {
      return onKeyStroke(key, handler, __spreadProps$9(__spreadValues$m({}, options), { eventName: "keydown" }));
    }
    function onKeyPressed(key, handler, options = {}) {
      return onKeyStroke(key, handler, __spreadProps$9(__spreadValues$m({}, options), { eventName: "keypress" }));
    }
    function onKeyUp(key, handler, options = {}) {
      return onKeyStroke(key, handler, __spreadProps$9(__spreadValues$m({}, options), { eventName: "keyup" }));
    }
    var DEFAULT_DELAY = 500;
    function onLongPress(target, handler, options) {
      var _a, _b;
      const elementRef = vueDemi.computed(() => unrefElement(target));
      let timeout;
      function clear() {
        if (timeout) {
          clearTimeout(timeout);
          timeout = void 0;
        }
      }
      function onDown(ev) {
        var _a2, _b2, _c, _d;
        if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)
          return;
        clear();
        if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)
          ev.preventDefault();
        if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)
          ev.stopPropagation();
        timeout = setTimeout(() => handler(ev), (_d = options == null ? void 0 : options.delay) != null ? _d : DEFAULT_DELAY);
      }
      const listenerOptions = {
        capture: (_a = options == null ? void 0 : options.modifiers) == null ? void 0 : _a.capture,
        once: (_b = options == null ? void 0 : options.modifiers) == null ? void 0 : _b.once
      };
      useEventListener(elementRef, "pointerdown", onDown, listenerOptions);
      useEventListener(elementRef, "pointerup", clear, listenerOptions);
      useEventListener(elementRef, "pointerleave", clear, listenerOptions);
    }
    var isFocusedElementEditable = () => {
      const { activeElement, body } = document;
      if (!activeElement)
        return false;
      if (activeElement === body)
        return false;
      switch (activeElement.tagName) {
        case "INPUT":
        case "TEXTAREA":
          return true;
      }
      return activeElement.hasAttribute("contenteditable");
    };
    var isTypedCharValid = ({
      keyCode,
      metaKey,
      ctrlKey,
      altKey
    }) => {
      if (metaKey || ctrlKey || altKey)
        return false;
      if (keyCode >= 48 && keyCode <= 57 || keyCode >= 96 && keyCode <= 105)
        return true;
      if (keyCode >= 65 && keyCode <= 90)
        return true;
      return false;
    };
    function onStartTyping(callback, options = {}) {
      const { document: document2 = defaultDocument } = options;
      const keydown = (event) => {
        !isFocusedElementEditable() && isTypedCharValid(event) && callback(event);
      };
      if (document2)
        useEventListener(document2, "keydown", keydown, { passive: true });
    }
    function templateRef(key, initialValue = null) {
      const instance = vueDemi.getCurrentInstance();
      let _trigger = () => {
      };
      const element = vueDemi.customRef((track, trigger) => {
        _trigger = trigger;
        return {
          get() {
            var _a, _b;
            track();
            return (_b = (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.$refs[key]) != null ? _b : initialValue;
          },
          set() {
          }
        };
      });
      shared.tryOnMounted(_trigger);
      vueDemi.onUpdated(_trigger);
      return element;
    }
    function useActiveElement(options = {}) {
      const { window: window2 = defaultWindow } = options;
      const activeElement = shared.computedWithControl(() => null, () => window2 == null ? void 0 : window2.document.activeElement);
      if (window2) {
        useEventListener(window2, "blur", activeElement.trigger, true);
        useEventListener(window2, "focus", activeElement.trigger, true);
      }
      return activeElement;
    }
    function useAsyncQueue(tasks, options = {}) {
      const {
        interrupt = true,
        onError = shared.noop,
        onFinished = shared.noop
      } = options;
      const promiseState = {
        pending: "pending",
        rejected: "rejected",
        fulfilled: "fulfilled"
      };
      const initialResult = Array.from(new Array(tasks.length), () => ({ state: promiseState.pending, data: null }));
      const result = vueDemi.reactive(initialResult);
      const activeIndex = vueDemi.ref(-1);
      if (!tasks || tasks.length === 0) {
        onFinished();
        return {
          activeIndex,
          result
        };
      }
      function updateResult(state, res) {
        activeIndex.value++;
        result[activeIndex.value].data = res;
        result[activeIndex.value].state = state;
      }
      tasks.reduce((prev, curr) => {
        return prev.then((prevRes) => {
          var _a;
          if (((_a = result[activeIndex.value]) == null ? void 0 : _a.state) === promiseState.rejected && interrupt) {
            onFinished();
            return;
          }
          return curr(prevRes).then((currentRes) => {
            updateResult(promiseState.fulfilled, currentRes);
            activeIndex.value === tasks.length - 1 && onFinished();
            return currentRes;
          });
        }).catch((e) => {
          updateResult(promiseState.rejected, e);
          onError();
          return e;
        });
      }, Promise.resolve());
      return {
        activeIndex,
        result
      };
    }
    function useAsyncState(promise, initialState, options) {
      const {
        immediate = true,
        delay = 0,
        onError = shared.noop,
        resetOnExecute = true,
        shallow = true,
        throwError
      } = options != null ? options : {};
      const state = shallow ? vueDemi.shallowRef(initialState) : vueDemi.ref(initialState);
      const isReady = vueDemi.ref(false);
      const isLoading = vueDemi.ref(false);
      const error = vueDemi.ref(void 0);
      async function execute(delay2 = 0, ...args) {
        if (resetOnExecute)
          state.value = initialState;
        error.value = void 0;
        isReady.value = false;
        isLoading.value = true;
        if (delay2 > 0)
          await shared.promiseTimeout(delay2);
        const _promise = typeof promise === "function" ? promise(...args) : promise;
        try {
          const data = await _promise;
          state.value = data;
          isReady.value = true;
        } catch (e) {
          error.value = e;
          onError(e);
          if (throwError)
            throw error;
        } finally {
          isLoading.value = false;
        }
        return state.value;
      }
      if (immediate)
        execute(delay);
      return {
        state,
        isReady,
        isLoading,
        error,
        execute
      };
    }
    var defaults = {
      array: (v) => JSON.stringify(v),
      object: (v) => JSON.stringify(v),
      set: (v) => JSON.stringify(Array.from(v)),
      map: (v) => JSON.stringify(Object.fromEntries(v)),
      null: () => ""
    };
    function getDefaultSerialization(target) {
      if (!target)
        return defaults.null;
      if (target instanceof Map)
        return defaults.map;
      else if (target instanceof Set)
        return defaults.set;
      else if (Array.isArray(target))
        return defaults.array;
      else
        return defaults.object;
    }
    function useBase64(target, options) {
      const base64 = vueDemi.ref("");
      const promise = vueDemi.ref();
      function execute() {
        if (!shared.isClient)
          return;
        promise.value = new Promise((resolve, reject) => {
          try {
            const _target = shared.resolveUnref(target);
            if (_target == null) {
              resolve("");
            } else if (typeof _target === "string") {
              resolve(blobToBase64(new Blob([_target], { type: "text/plain" })));
            } else if (_target instanceof Blob) {
              resolve(blobToBase64(_target));
            } else if (_target instanceof ArrayBuffer) {
              resolve(window.btoa(String.fromCharCode(...new Uint8Array(_target))));
            } else if (_target instanceof HTMLCanvasElement) {
              resolve(_target.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));
            } else if (_target instanceof HTMLImageElement) {
              const img = _target.cloneNode(false);
              img.crossOrigin = "Anonymous";
              imgLoaded(img).then(() => {
                const canvas = document.createElement("canvas");
                const ctx = canvas.getContext("2d");
                canvas.width = img.width;
                canvas.height = img.height;
                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
                resolve(canvas.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));
              }).catch(reject);
            } else if (typeof _target === "object") {
              const _serializeFn = (options == null ? void 0 : options.serializer) || getDefaultSerialization(_target);
              const serialized = _serializeFn(_target);
              return resolve(blobToBase64(new Blob([serialized], { type: "application/json" })));
            } else {
              reject(new Error("target is unsupported types"));
            }
          } catch (error) {
            reject(error);
          }
        });
        promise.value.then((res) => base64.value = res);
        return promise.value;
      }
      if (vueDemi.isRef(target) || shared.isFunction(target))
        vueDemi.watch(target, execute, { immediate: true });
      else
        execute();
      return {
        base64,
        promise,
        execute
      };
    }
    function imgLoaded(img) {
      return new Promise((resolve, reject) => {
        if (!img.complete) {
          img.onload = () => {
            resolve();
          };
          img.onerror = reject;
        } else {
          resolve();
        }
      });
    }
    function blobToBase64(blob) {
      return new Promise((resolve, reject) => {
        const fr = new FileReader();
        fr.onload = (e) => {
          resolve(e.target.result);
        };
        fr.onerror = reject;
        fr.readAsDataURL(blob);
      });
    }
    function useSupported(callback, sync = false) {
      const isSupported = vueDemi.ref();
      const update = () => isSupported.value = Boolean(callback());
      update();
      shared.tryOnMounted(update, sync);
      return isSupported;
    }
    function useBattery({ navigator = defaultNavigator } = {}) {
      const events2 = ["chargingchange", "chargingtimechange", "dischargingtimechange", "levelchange"];
      const isSupported = useSupported(() => navigator && "getBattery" in navigator);
      const charging = vueDemi.ref(false);
      const chargingTime = vueDemi.ref(0);
      const dischargingTime = vueDemi.ref(0);
      const level = vueDemi.ref(1);
      let battery;
      function updateBatteryInfo() {
        charging.value = this.charging;
        chargingTime.value = this.chargingTime || 0;
        dischargingTime.value = this.dischargingTime || 0;
        level.value = this.level;
      }
      if (isSupported.value) {
        navigator.getBattery().then((_battery) => {
          battery = _battery;
          updateBatteryInfo.call(battery);
          for (const event of events2)
            useEventListener(battery, event, updateBatteryInfo, { passive: true });
        });
      }
      return {
        isSupported,
        charging,
        chargingTime,
        dischargingTime,
        level
      };
    }
    function useBluetooth(options) {
      let {
        acceptAllDevices = false
      } = options || {};
      const {
        filters = void 0,
        optionalServices = void 0,
        navigator = defaultNavigator
      } = options || {};
      const isSupported = useSupported(() => navigator && "bluetooth" in navigator);
      const device = vueDemi.ref(void 0);
      const error = vueDemi.ref(null);
      vueDemi.watch(device, () => {
        connectToBluetoothGATTServer();
      });
      async function requestDevice() {
        if (!isSupported.value)
          return;
        error.value = null;
        if (filters && filters.length > 0)
          acceptAllDevices = false;
        try {
          device.value = await (navigator == null ? void 0 : navigator.bluetooth.requestDevice({
            acceptAllDevices,
            filters,
            optionalServices
          }));
        } catch (err) {
          error.value = err;
        }
      }
      const server = vueDemi.ref();
      const isConnected = vueDemi.computed(() => {
        var _a;
        return ((_a = server.value) == null ? void 0 : _a.connected) || false;
      });
      async function connectToBluetoothGATTServer() {
        error.value = null;
        if (device.value && device.value.gatt) {
          device.value.addEventListener("gattserverdisconnected", () => {
          });
          try {
            server.value = await device.value.gatt.connect();
          } catch (err) {
            error.value = err;
          }
        }
      }
      shared.tryOnMounted(() => {
        var _a;
        if (device.value)
          (_a = device.value.gatt) == null ? void 0 : _a.connect();
      });
      shared.tryOnScopeDispose(() => {
        var _a;
        if (device.value)
          (_a = device.value.gatt) == null ? void 0 : _a.disconnect();
      });
      return {
        isSupported,
        isConnected,
        device,
        requestDevice,
        server,
        error
      };
    }
    function useMediaQuery(query, options = {}) {
      const { window: window2 = defaultWindow } = options;
      const isSupported = useSupported(() => window2 && "matchMedia" in window2 && typeof window2.matchMedia === "function");
      let mediaQuery;
      const matches = vueDemi.ref(false);
      const cleanup = () => {
        if (!mediaQuery)
          return;
        if ("removeEventListener" in mediaQuery)
          mediaQuery.removeEventListener("change", update);
        else
          mediaQuery.removeListener(update);
      };
      const update = () => {
        if (!isSupported.value)
          return;
        cleanup();
        mediaQuery = window2.matchMedia(shared.resolveRef(query).value);
        matches.value = mediaQuery.matches;
        if ("addEventListener" in mediaQuery)
          mediaQuery.addEventListener("change", update);
        else
          mediaQuery.addListener(update);
      };
      vueDemi.watchEffect(update);
      shared.tryOnScopeDispose(() => cleanup());
      return matches;
    }
    var breakpointsTailwind = {
      "sm": 640,
      "md": 768,
      "lg": 1024,
      "xl": 1280,
      "2xl": 1536
    };
    var breakpointsBootstrapV5 = {
      sm: 576,
      md: 768,
      lg: 992,
      xl: 1200,
      xxl: 1400
    };
    var breakpointsVuetify = {
      xs: 600,
      sm: 960,
      md: 1264,
      lg: 1904
    };
    var breakpointsAntDesign = {
      xs: 480,
      sm: 576,
      md: 768,
      lg: 992,
      xl: 1200,
      xxl: 1600
    };
    var breakpointsQuasar = {
      xs: 600,
      sm: 1024,
      md: 1440,
      lg: 1920
    };
    var breakpointsSematic = {
      mobileS: 320,
      mobileM: 375,
      mobileL: 425,
      tablet: 768,
      laptop: 1024,
      laptopL: 1440,
      desktop4K: 2560
    };
    var __defProp$l = Object.defineProperty;
    var __getOwnPropSymbols$n = Object.getOwnPropertySymbols;
    var __hasOwnProp$n = Object.prototype.hasOwnProperty;
    var __propIsEnum$n = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$l = (obj, key, value) => key in obj ? __defProp$l(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$l = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$n.call(b, prop))
          __defNormalProp$l(a, prop, b[prop]);
      if (__getOwnPropSymbols$n)
        for (var prop of __getOwnPropSymbols$n(b)) {
          if (__propIsEnum$n.call(b, prop))
            __defNormalProp$l(a, prop, b[prop]);
        }
      return a;
    };
    function useBreakpoints(breakpoints, options = {}) {
      function getValue2(k, delta) {
        let v = breakpoints[k];
        if (delta != null)
          v = shared.increaseWithUnit(v, delta);
        if (typeof v === "number")
          v = `${v}px`;
        return v;
      }
      const { window: window2 = defaultWindow } = options;
      function match(query) {
        if (!window2)
          return false;
        return window2.matchMedia(query).matches;
      }
      const greaterOrEqual = (k) => {
        return useMediaQuery(`(min-width: ${getValue2(k)})`, options);
      };
      const shortcutMethods = Object.keys(breakpoints).reduce((shortcuts, k) => {
        Object.defineProperty(shortcuts, k, {
          get: () => greaterOrEqual(k),
          enumerable: true,
          configurable: true
        });
        return shortcuts;
      }, {});
      return __spreadValues$l({
        greater(k) {
          return useMediaQuery(`(min-width: ${getValue2(k, 0.1)})`, options);
        },
        greaterOrEqual,
        smaller(k) {
          return useMediaQuery(`(max-width: ${getValue2(k, -0.1)})`, options);
        },
        smallerOrEqual(k) {
          return useMediaQuery(`(max-width: ${getValue2(k)})`, options);
        },
        between(a, b) {
          return useMediaQuery(`(min-width: ${getValue2(a)}) and (max-width: ${getValue2(b, -0.1)})`, options);
        },
        isGreater(k) {
          return match(`(min-width: ${getValue2(k, 0.1)})`);
        },
        isGreaterOrEqual(k) {
          return match(`(min-width: ${getValue2(k)})`);
        },
        isSmaller(k) {
          return match(`(max-width: ${getValue2(k, -0.1)})`);
        },
        isSmallerOrEqual(k) {
          return match(`(max-width: ${getValue2(k)})`);
        },
        isInBetween(a, b) {
          return match(`(min-width: ${getValue2(a)}) and (max-width: ${getValue2(b, -0.1)})`);
        }
      }, shortcutMethods);
    }
    var useBroadcastChannel = (options) => {
      const {
        name,
        window: window2 = defaultWindow
      } = options;
      const isSupported = useSupported(() => window2 && "BroadcastChannel" in window2);
      const isClosed = vueDemi.ref(false);
      const channel = vueDemi.ref();
      const data = vueDemi.ref();
      const error = vueDemi.ref(null);
      const post = (data2) => {
        if (channel.value)
          channel.value.postMessage(data2);
      };
      const close = () => {
        if (channel.value)
          channel.value.close();
        isClosed.value = true;
      };
      if (isSupported.value) {
        shared.tryOnMounted(() => {
          error.value = null;
          channel.value = new BroadcastChannel(name);
          channel.value.addEventListener("message", (e) => {
            data.value = e.data;
          }, { passive: true });
          channel.value.addEventListener("messageerror", (e) => {
            error.value = e;
          }, { passive: true });
          channel.value.addEventListener("close", () => {
            isClosed.value = true;
          });
        });
      }
      shared.tryOnScopeDispose(() => {
        close();
      });
      return {
        isSupported,
        channel,
        data,
        post,
        close,
        error,
        isClosed
      };
    };
    function useBrowserLocation({ window: window2 = defaultWindow } = {}) {
      const buildState = (trigger) => {
        const { state: state2, length } = (window2 == null ? void 0 : window2.history) || {};
        const { hash, host, hostname, href, origin, pathname, port, protocol, search } = (window2 == null ? void 0 : window2.location) || {};
        return {
          trigger,
          state: state2,
          length,
          hash,
          host,
          hostname,
          href,
          origin,
          pathname,
          port,
          protocol,
          search
        };
      };
      const state = vueDemi.ref(buildState("load"));
      if (window2) {
        useEventListener(window2, "popstate", () => state.value = buildState("popstate"), { passive: true });
        useEventListener(window2, "hashchange", () => state.value = buildState("hashchange"), { passive: true });
      }
      return state;
    }
    function useCached(refValue, comparator = (a, b) => a === b, watchOptions) {
      const cachedValue = vueDemi.ref(refValue.value);
      vueDemi.watch(() => refValue.value, (value) => {
        if (!comparator(value, cachedValue.value))
          cachedValue.value = value;
      }, watchOptions);
      return cachedValue;
    }
    function useClipboard(options = {}) {
      const {
        navigator = defaultNavigator,
        read = false,
        source,
        copiedDuring = 1500
      } = options;
      const events2 = ["copy", "cut"];
      const isSupported = useSupported(() => navigator && "clipboard" in navigator);
      const text = vueDemi.ref("");
      const copied = vueDemi.ref(false);
      const timeout = shared.useTimeoutFn(() => copied.value = false, copiedDuring);
      function updateText() {
        navigator.clipboard.readText().then((value) => {
          text.value = value;
        });
      }
      if (isSupported.value && read) {
        for (const event of events2)
          useEventListener(event, updateText);
      }
      async function copy(value = shared.resolveUnref(source)) {
        if (isSupported.value && value != null) {
          await navigator.clipboard.writeText(value);
          text.value = value;
          copied.value = true;
          timeout.start();
        }
      }
      return {
        isSupported,
        text,
        copied,
        copy
      };
    }
    var __defProp$k = Object.defineProperty;
    var __defProps$8 = Object.defineProperties;
    var __getOwnPropDescs$8 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$m = Object.getOwnPropertySymbols;
    var __hasOwnProp$m = Object.prototype.hasOwnProperty;
    var __propIsEnum$m = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$k = (obj, key, value) => key in obj ? __defProp$k(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$k = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$m.call(b, prop))
          __defNormalProp$k(a, prop, b[prop]);
      if (__getOwnPropSymbols$m)
        for (var prop of __getOwnPropSymbols$m(b)) {
          if (__propIsEnum$m.call(b, prop))
            __defNormalProp$k(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$8 = (a, b) => __defProps$8(a, __getOwnPropDescs$8(b));
    function cloneFnJSON(source) {
      return JSON.parse(JSON.stringify(source));
    }
    function useCloned(source, options = {}) {
      const cloned = vueDemi.ref({});
      const {
        manual,
        clone = cloneFnJSON,
        deep = true,
        immediate = true
      } = options;
      function sync() {
        cloned.value = clone(vueDemi.unref(source));
      }
      if (!manual && vueDemi.isRef(source)) {
        vueDemi.watch(source, sync, __spreadProps$8(__spreadValues$k({}, options), {
          deep,
          immediate
        }));
      } else {
        sync();
      }
      return { cloned, sync };
    }
    var _global = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
    var globalKey = "__vueuse_ssr_handlers__";
    _global[globalKey] = _global[globalKey] || {};
    var handlers = _global[globalKey];
    function getSSRHandler(key, fallback) {
      return handlers[key] || fallback;
    }
    function setSSRHandler(key, fn) {
      handlers[key] = fn;
    }
    function guessSerializerType(rawInit) {
      return rawInit == null ? "any" : rawInit instanceof Set ? "set" : rawInit instanceof Map ? "map" : rawInit instanceof Date ? "date" : typeof rawInit === "boolean" ? "boolean" : typeof rawInit === "string" ? "string" : typeof rawInit === "object" ? "object" : Array.isArray(rawInit) ? "object" : !Number.isNaN(rawInit) ? "number" : "any";
    }
    var __defProp$j = Object.defineProperty;
    var __getOwnPropSymbols$l = Object.getOwnPropertySymbols;
    var __hasOwnProp$l = Object.prototype.hasOwnProperty;
    var __propIsEnum$l = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$j = (obj, key, value) => key in obj ? __defProp$j(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$j = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$l.call(b, prop))
          __defNormalProp$j(a, prop, b[prop]);
      if (__getOwnPropSymbols$l)
        for (var prop of __getOwnPropSymbols$l(b)) {
          if (__propIsEnum$l.call(b, prop))
            __defNormalProp$j(a, prop, b[prop]);
        }
      return a;
    };
    var StorageSerializers = {
      boolean: {
        read: (v) => v === "true",
        write: (v) => String(v)
      },
      object: {
        read: (v) => JSON.parse(v),
        write: (v) => JSON.stringify(v)
      },
      number: {
        read: (v) => Number.parseFloat(v),
        write: (v) => String(v)
      },
      any: {
        read: (v) => v,
        write: (v) => String(v)
      },
      string: {
        read: (v) => v,
        write: (v) => String(v)
      },
      map: {
        read: (v) => new Map(JSON.parse(v)),
        write: (v) => JSON.stringify(Array.from(v.entries()))
      },
      set: {
        read: (v) => new Set(JSON.parse(v)),
        write: (v) => JSON.stringify(Array.from(v))
      },
      date: {
        read: (v) => new Date(v),
        write: (v) => v.toISOString()
      }
    };
    function useStorage(key, defaults2, storage, options = {}) {
      var _a;
      const {
        flush = "pre",
        deep = true,
        listenToStorageChanges = true,
        writeDefaults = true,
        mergeDefaults = false,
        shallow,
        window: window2 = defaultWindow,
        eventFilter,
        onError = (e) => {
          console.error(e);
        }
      } = options;
      const data = (shallow ? vueDemi.shallowRef : vueDemi.ref)(defaults2);
      if (!storage) {
        try {
          storage = getSSRHandler("getDefaultStorage", () => {
            var _a2;
            return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;
          })();
        } catch (e) {
          onError(e);
        }
      }
      if (!storage)
        return data;
      const rawInit = shared.resolveUnref(defaults2);
      const type = guessSerializerType(rawInit);
      const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];
      const { pause: pauseWatch, resume: resumeWatch } = shared.pausableWatch(data, () => write(data.value), { flush, deep, eventFilter });
      if (window2 && listenToStorageChanges)
        useEventListener(window2, "storage", update);
      update();
      return data;
      function write(v) {
        try {
          if (v == null)
            storage.removeItem(key);
          else
            storage.setItem(key, serializer.write(v));
        } catch (e) {
          onError(e);
        }
      }
      function read(event) {
        if (event && event.key !== key)
          return;
        pauseWatch();
        try {
          const rawValue = event ? event.newValue : storage.getItem(key);
          if (rawValue == null) {
            if (writeDefaults && rawInit !== null)
              storage.setItem(key, serializer.write(rawInit));
            return rawInit;
          } else if (!event && mergeDefaults) {
            const value = serializer.read(rawValue);
            if (shared.isFunction(mergeDefaults))
              return mergeDefaults(value, rawInit);
            else if (type === "object" && !Array.isArray(value))
              return __spreadValues$j(__spreadValues$j({}, rawInit), value);
            return value;
          } else if (typeof rawValue !== "string") {
            return rawValue;
          } else {
            return serializer.read(rawValue);
          }
        } catch (e) {
          onError(e);
        } finally {
          resumeWatch();
        }
      }
      function update(event) {
        if (event && event.key !== key)
          return;
        data.value = read(event);
      }
    }
    function usePreferredDark(options) {
      return useMediaQuery("(prefers-color-scheme: dark)", options);
    }
    var __defProp$i = Object.defineProperty;
    var __getOwnPropSymbols$k = Object.getOwnPropertySymbols;
    var __hasOwnProp$k = Object.prototype.hasOwnProperty;
    var __propIsEnum$k = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$i = (obj, key, value) => key in obj ? __defProp$i(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$i = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$k.call(b, prop))
          __defNormalProp$i(a, prop, b[prop]);
      if (__getOwnPropSymbols$k)
        for (var prop of __getOwnPropSymbols$k(b)) {
          if (__propIsEnum$k.call(b, prop))
            __defNormalProp$i(a, prop, b[prop]);
        }
      return a;
    };
    function useColorMode(options = {}) {
      const {
        selector = "html",
        attribute = "class",
        initialValue = "auto",
        window: window2 = defaultWindow,
        storage,
        storageKey = "vueuse-color-scheme",
        listenToStorageChanges = true,
        storageRef,
        emitAuto
      } = options;
      const modes = __spreadValues$i({
        auto: "",
        light: "light",
        dark: "dark"
      }, options.modes || {});
      const preferredDark = usePreferredDark({ window: window2 });
      const preferredMode = vueDemi.computed(() => preferredDark.value ? "dark" : "light");
      const store = storageRef || (storageKey == null ? vueDemi.ref(initialValue) : useStorage(storageKey, initialValue, storage, { window: window2, listenToStorageChanges }));
      const state = vueDemi.computed({
        get() {
          return store.value === "auto" && !emitAuto ? preferredMode.value : store.value;
        },
        set(v) {
          store.value = v;
        }
      });
      const updateHTMLAttrs = getSSRHandler("updateHTMLAttrs", (selector2, attribute2, value) => {
        const el = window2 == null ? void 0 : window2.document.querySelector(selector2);
        if (!el)
          return;
        if (attribute2 === "class") {
          const current = value.split(/\s/g);
          Object.values(modes).flatMap((i) => (i || "").split(/\s/g)).filter(Boolean).forEach((v) => {
            if (current.includes(v))
              el.classList.add(v);
            else
              el.classList.remove(v);
          });
        } else {
          el.setAttribute(attribute2, value);
        }
      });
      function defaultOnChanged(mode) {
        var _a;
        const resolvedMode = mode === "auto" ? preferredMode.value : mode;
        updateHTMLAttrs(selector, attribute, (_a = modes[resolvedMode]) != null ? _a : resolvedMode);
      }
      function onChanged(mode) {
        if (options.onChanged)
          options.onChanged(mode, defaultOnChanged);
        else
          defaultOnChanged(mode);
      }
      vueDemi.watch(state, onChanged, { flush: "post", immediate: true });
      if (emitAuto)
        vueDemi.watch(preferredMode, () => onChanged(state.value), { flush: "post" });
      shared.tryOnMounted(() => onChanged(state.value));
      return state;
    }
    function useConfirmDialog(revealed = vueDemi.ref(false)) {
      const confirmHook = shared.createEventHook();
      const cancelHook = shared.createEventHook();
      const revealHook = shared.createEventHook();
      let _resolve = shared.noop;
      const reveal = (data) => {
        revealHook.trigger(data);
        revealed.value = true;
        return new Promise((resolve) => {
          _resolve = resolve;
        });
      };
      const confirm = (data) => {
        revealed.value = false;
        confirmHook.trigger(data);
        _resolve({ data, isCanceled: false });
      };
      const cancel = (data) => {
        revealed.value = false;
        cancelHook.trigger(data);
        _resolve({ data, isCanceled: true });
      };
      return {
        isRevealed: vueDemi.computed(() => revealed.value),
        reveal,
        confirm,
        cancel,
        onReveal: revealHook.on,
        onConfirm: confirmHook.on,
        onCancel: cancelHook.on
      };
    }
    function useCssVar(prop, target, { window: window2 = defaultWindow, initialValue = "" } = {}) {
      const variable = vueDemi.ref(initialValue);
      const elRef = vueDemi.computed(() => {
        var _a;
        return unrefElement(target) || ((_a = window2 == null ? void 0 : window2.document) == null ? void 0 : _a.documentElement);
      });
      vueDemi.watch([elRef, () => shared.resolveUnref(prop)], ([el, prop2]) => {
        var _a;
        if (el && window2) {
          const value = (_a = window2.getComputedStyle(el).getPropertyValue(prop2)) == null ? void 0 : _a.trim();
          variable.value = value || initialValue;
        }
      }, { immediate: true });
      vueDemi.watch(variable, (val) => {
        var _a;
        if ((_a = elRef.value) == null ? void 0 : _a.style)
          elRef.value.style.setProperty(shared.resolveUnref(prop), val);
      });
      return variable;
    }
    function useCurrentElement() {
      const vm = vueDemi.getCurrentInstance();
      const currentElement = shared.computedWithControl(() => null, () => vm.proxy.$el);
      vueDemi.onUpdated(currentElement.trigger);
      vueDemi.onMounted(currentElement.trigger);
      return currentElement;
    }
    function useCycleList(list, options) {
      var _a;
      const state = vueDemi.shallowRef((_a = options == null ? void 0 : options.initialValue) != null ? _a : list[0]);
      const index = vueDemi.computed({
        get() {
          var _a2;
          let index2 = (options == null ? void 0 : options.getIndexOf) ? options.getIndexOf(state.value, list) : list.indexOf(state.value);
          if (index2 < 0)
            index2 = (_a2 = options == null ? void 0 : options.fallbackIndex) != null ? _a2 : 0;
          return index2;
        },
        set(v) {
          set(v);
        }
      });
      function set(i) {
        const length = list.length;
        const index2 = (i % length + length) % length;
        const value = list[index2];
        state.value = value;
        return value;
      }
      function shift(delta = 1) {
        return set(index.value + delta);
      }
      function next(n = 1) {
        return shift(n);
      }
      function prev(n = 1) {
        return shift(-n);
      }
      return {
        state,
        index,
        next,
        prev
      };
    }
    var __defProp$h = Object.defineProperty;
    var __defProps$7 = Object.defineProperties;
    var __getOwnPropDescs$7 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$j = Object.getOwnPropertySymbols;
    var __hasOwnProp$j = Object.prototype.hasOwnProperty;
    var __propIsEnum$j = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$h = (obj, key, value) => key in obj ? __defProp$h(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$h = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$j.call(b, prop))
          __defNormalProp$h(a, prop, b[prop]);
      if (__getOwnPropSymbols$j)
        for (var prop of __getOwnPropSymbols$j(b)) {
          if (__propIsEnum$j.call(b, prop))
            __defNormalProp$h(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$7 = (a, b) => __defProps$7(a, __getOwnPropDescs$7(b));
    function useDark(options = {}) {
      const {
        valueDark = "dark",
        valueLight = "",
        window: window2 = defaultWindow
      } = options;
      const mode = useColorMode(__spreadProps$7(__spreadValues$h({}, options), {
        onChanged: (mode2, defaultHandler) => {
          var _a;
          if (options.onChanged)
            (_a = options.onChanged) == null ? void 0 : _a.call(options, mode2 === "dark");
          else
            defaultHandler(mode2);
        },
        modes: {
          dark: valueDark,
          light: valueLight
        }
      }));
      const preferredDark = usePreferredDark({ window: window2 });
      const isDark = vueDemi.computed({
        get() {
          return mode.value === "dark";
        },
        set(v) {
          if (v === preferredDark.value)
            mode.value = "auto";
          else
            mode.value = v ? "dark" : "light";
        }
      });
      return isDark;
    }
    var fnBypass = (v) => v;
    var fnSetSource = (source, value) => source.value = value;
    function defaultDump(clone) {
      return clone ? shared.isFunction(clone) ? clone : cloneFnJSON : fnBypass;
    }
    function defaultParse(clone) {
      return clone ? shared.isFunction(clone) ? clone : cloneFnJSON : fnBypass;
    }
    function useManualRefHistory(source, options = {}) {
      const {
        clone = false,
        dump = defaultDump(clone),
        parse: parse2 = defaultParse(clone),
        setSource = fnSetSource
      } = options;
      function _createHistoryRecord() {
        return vueDemi.markRaw({
          snapshot: dump(source.value),
          timestamp: shared.timestamp()
        });
      }
      const last2 = vueDemi.ref(_createHistoryRecord());
      const undoStack = vueDemi.ref([]);
      const redoStack = vueDemi.ref([]);
      const _setSource = (record) => {
        setSource(source, parse2(record.snapshot));
        last2.value = record;
      };
      const commit = () => {
        undoStack.value.unshift(last2.value);
        last2.value = _createHistoryRecord();
        if (options.capacity && undoStack.value.length > options.capacity)
          undoStack.value.splice(options.capacity, Infinity);
        if (redoStack.value.length)
          redoStack.value.splice(0, redoStack.value.length);
      };
      const clear = () => {
        undoStack.value.splice(0, undoStack.value.length);
        redoStack.value.splice(0, redoStack.value.length);
      };
      const undo = () => {
        const state = undoStack.value.shift();
        if (state) {
          redoStack.value.unshift(last2.value);
          _setSource(state);
        }
      };
      const redo = () => {
        const state = redoStack.value.shift();
        if (state) {
          undoStack.value.unshift(last2.value);
          _setSource(state);
        }
      };
      const reset = () => {
        _setSource(last2.value);
      };
      const history = vueDemi.computed(() => [last2.value, ...undoStack.value]);
      const canUndo = vueDemi.computed(() => undoStack.value.length > 0);
      const canRedo = vueDemi.computed(() => redoStack.value.length > 0);
      return {
        source,
        undoStack,
        redoStack,
        last: last2,
        history,
        canUndo,
        canRedo,
        clear,
        commit,
        reset,
        undo,
        redo
      };
    }
    var __defProp$g = Object.defineProperty;
    var __defProps$6 = Object.defineProperties;
    var __getOwnPropDescs$6 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$i = Object.getOwnPropertySymbols;
    var __hasOwnProp$i = Object.prototype.hasOwnProperty;
    var __propIsEnum$i = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$g = (obj, key, value) => key in obj ? __defProp$g(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$g = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$i.call(b, prop))
          __defNormalProp$g(a, prop, b[prop]);
      if (__getOwnPropSymbols$i)
        for (var prop of __getOwnPropSymbols$i(b)) {
          if (__propIsEnum$i.call(b, prop))
            __defNormalProp$g(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$6 = (a, b) => __defProps$6(a, __getOwnPropDescs$6(b));
    function useRefHistory(source, options = {}) {
      const {
        deep = false,
        flush = "pre",
        eventFilter
      } = options;
      const {
        eventFilter: composedFilter,
        pause,
        resume: resumeTracking,
        isActive: isTracking
      } = shared.pausableFilter(eventFilter);
      const {
        ignoreUpdates,
        ignorePrevAsyncUpdates,
        stop
      } = shared.watchIgnorable(source, commit, { deep, flush, eventFilter: composedFilter });
      function setSource(source2, value) {
        ignorePrevAsyncUpdates();
        ignoreUpdates(() => {
          source2.value = value;
        });
      }
      const manualHistory = useManualRefHistory(source, __spreadProps$6(__spreadValues$g({}, options), { clone: options.clone || deep, setSource }));
      const { clear, commit: manualCommit } = manualHistory;
      function commit() {
        ignorePrevAsyncUpdates();
        manualCommit();
      }
      function resume(commitNow) {
        resumeTracking();
        if (commitNow)
          commit();
      }
      function batch(fn) {
        let canceled = false;
        const cancel = () => canceled = true;
        ignoreUpdates(() => {
          fn(cancel);
        });
        if (!canceled)
          commit();
      }
      function dispose() {
        stop();
        clear();
      }
      return __spreadProps$6(__spreadValues$g({}, manualHistory), {
        isTracking,
        pause,
        resume,
        commit,
        batch,
        dispose
      });
    }
    var __defProp$f = Object.defineProperty;
    var __defProps$5 = Object.defineProperties;
    var __getOwnPropDescs$5 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$h = Object.getOwnPropertySymbols;
    var __hasOwnProp$h = Object.prototype.hasOwnProperty;
    var __propIsEnum$h = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$f = (obj, key, value) => key in obj ? __defProp$f(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$f = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$h.call(b, prop))
          __defNormalProp$f(a, prop, b[prop]);
      if (__getOwnPropSymbols$h)
        for (var prop of __getOwnPropSymbols$h(b)) {
          if (__propIsEnum$h.call(b, prop))
            __defNormalProp$f(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$5 = (a, b) => __defProps$5(a, __getOwnPropDescs$5(b));
    function useDebouncedRefHistory(source, options = {}) {
      const filter = options.debounce ? shared.debounceFilter(options.debounce) : void 0;
      const history = useRefHistory(source, __spreadProps$5(__spreadValues$f({}, options), { eventFilter: filter }));
      return __spreadValues$f({}, history);
    }
    function useDeviceMotion(options = {}) {
      const {
        window: window2 = defaultWindow,
        eventFilter = shared.bypassFilter
      } = options;
      const acceleration = vueDemi.ref({ x: null, y: null, z: null });
      const rotationRate = vueDemi.ref({ alpha: null, beta: null, gamma: null });
      const interval = vueDemi.ref(0);
      const accelerationIncludingGravity = vueDemi.ref({
        x: null,
        y: null,
        z: null
      });
      if (window2) {
        const onDeviceMotion = shared.createFilterWrapper(eventFilter, (event) => {
          acceleration.value = event.acceleration;
          accelerationIncludingGravity.value = event.accelerationIncludingGravity;
          rotationRate.value = event.rotationRate;
          interval.value = event.interval;
        });
        useEventListener(window2, "devicemotion", onDeviceMotion);
      }
      return {
        acceleration,
        accelerationIncludingGravity,
        rotationRate,
        interval
      };
    }
    function useDeviceOrientation(options = {}) {
      const { window: window2 = defaultWindow } = options;
      const isSupported = useSupported(() => window2 && "DeviceOrientationEvent" in window2);
      const isAbsolute = vueDemi.ref(false);
      const alpha = vueDemi.ref(null);
      const beta = vueDemi.ref(null);
      const gamma = vueDemi.ref(null);
      if (window2 && isSupported.value) {
        useEventListener(window2, "deviceorientation", (event) => {
          isAbsolute.value = event.absolute;
          alpha.value = event.alpha;
          beta.value = event.beta;
          gamma.value = event.gamma;
        });
      }
      return {
        isSupported,
        isAbsolute,
        alpha,
        beta,
        gamma
      };
    }
    function useDevicePixelRatio({
      window: window2 = defaultWindow
    } = {}) {
      if (!window2) {
        return {
          pixelRatio: vueDemi.ref(1)
        };
      }
      const pixelRatio = vueDemi.ref(1);
      const cleanups = [];
      const cleanup = () => {
        cleanups.map((i) => i());
        cleanups.length = 0;
      };
      const observe = () => {
        pixelRatio.value = window2.devicePixelRatio;
        cleanup();
        const media = window2.matchMedia(`(resolution: ${pixelRatio.value}dppx)`);
        media.addEventListener("change", observe, { once: true });
        cleanups.push(() => {
          media.removeEventListener("change", observe);
        });
      };
      observe();
      shared.tryOnScopeDispose(cleanup);
      return { pixelRatio };
    }
    function usePermission(permissionDesc, options = {}) {
      const {
        controls = false,
        navigator = defaultNavigator
      } = options;
      const isSupported = useSupported(() => navigator && "permissions" in navigator);
      let permissionStatus;
      const desc = typeof permissionDesc === "string" ? { name: permissionDesc } : permissionDesc;
      const state = vueDemi.ref();
      const onChange = () => {
        if (permissionStatus)
          state.value = permissionStatus.state;
      };
      const query = shared.createSingletonPromise(async () => {
        if (!isSupported.value)
          return;
        if (!permissionStatus) {
          try {
            permissionStatus = await navigator.permissions.query(desc);
            useEventListener(permissionStatus, "change", onChange);
            onChange();
          } catch (e) {
            state.value = "prompt";
          }
        }
        return permissionStatus;
      });
      query();
      if (controls) {
        return {
          state,
          isSupported,
          query
        };
      } else {
        return state;
      }
    }
    function useDevicesList(options = {}) {
      const {
        navigator = defaultNavigator,
        requestPermissions = false,
        constraints = { audio: true, video: true },
        onUpdated
      } = options;
      const devices = vueDemi.ref([]);
      const videoInputs = vueDemi.computed(() => devices.value.filter((i) => i.kind === "videoinput"));
      const audioInputs = vueDemi.computed(() => devices.value.filter((i) => i.kind === "audioinput"));
      const audioOutputs = vueDemi.computed(() => devices.value.filter((i) => i.kind === "audiooutput"));
      const isSupported = useSupported(() => navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);
      const permissionGranted = vueDemi.ref(false);
      async function update() {
        if (!isSupported.value)
          return;
        devices.value = await navigator.mediaDevices.enumerateDevices();
        onUpdated == null ? void 0 : onUpdated(devices.value);
      }
      async function ensurePermissions() {
        if (!isSupported.value)
          return false;
        if (permissionGranted.value)
          return true;
        const { state, query } = usePermission("camera", { controls: true });
        await query();
        if (state.value !== "granted") {
          const stream = await navigator.mediaDevices.getUserMedia(constraints);
          stream.getTracks().forEach((t) => t.stop());
          update();
          permissionGranted.value = true;
        } else {
          permissionGranted.value = true;
        }
        return permissionGranted.value;
      }
      if (isSupported.value) {
        if (requestPermissions)
          ensurePermissions();
        useEventListener(navigator.mediaDevices, "devicechange", update);
        update();
      }
      return {
        devices,
        ensurePermissions,
        permissionGranted,
        videoInputs,
        audioInputs,
        audioOutputs,
        isSupported
      };
    }
    function useDisplayMedia(options = {}) {
      var _a;
      const enabled = vueDemi.ref((_a = options.enabled) != null ? _a : false);
      const video = options.video;
      const audio = options.audio;
      const { navigator = defaultNavigator } = options;
      const isSupported = useSupported(() => {
        var _a2;
        return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getDisplayMedia;
      });
      const constraint = { audio, video };
      const stream = vueDemi.shallowRef();
      async function _start() {
        if (!isSupported.value || stream.value)
          return;
        stream.value = await navigator.mediaDevices.getDisplayMedia(constraint);
        return stream.value;
      }
      async function _stop() {
        var _a2;
        (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());
        stream.value = void 0;
      }
      function stop() {
        _stop();
        enabled.value = false;
      }
      async function start() {
        await _start();
        if (stream.value)
          enabled.value = true;
        return stream.value;
      }
      vueDemi.watch(enabled, (v) => {
        if (v)
          _start();
        else
          _stop();
      }, { immediate: true });
      return {
        isSupported,
        stream,
        start,
        stop,
        enabled
      };
    }
    function useDocumentVisibility({ document: document2 = defaultDocument } = {}) {
      if (!document2)
        return vueDemi.ref("visible");
      const visibility = vueDemi.ref(document2.visibilityState);
      useEventListener(document2, "visibilitychange", () => {
        visibility.value = document2.visibilityState;
      });
      return visibility;
    }
    var __defProp$e = Object.defineProperty;
    var __defProps$4 = Object.defineProperties;
    var __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$g = Object.getOwnPropertySymbols;
    var __hasOwnProp$g = Object.prototype.hasOwnProperty;
    var __propIsEnum$g = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$e = (obj, key, value) => key in obj ? __defProp$e(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$e = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$g.call(b, prop))
          __defNormalProp$e(a, prop, b[prop]);
      if (__getOwnPropSymbols$g)
        for (var prop of __getOwnPropSymbols$g(b)) {
          if (__propIsEnum$g.call(b, prop))
            __defNormalProp$e(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));
    function useDraggable(target, options = {}) {
      var _a, _b, _c;
      const draggingElement = (_a = options.draggingElement) != null ? _a : defaultWindow;
      const draggingHandle = (_b = options.handle) != null ? _b : target;
      const position = vueDemi.ref((_c = shared.resolveUnref(options.initialValue)) != null ? _c : { x: 0, y: 0 });
      const pressedDelta = vueDemi.ref();
      const filterEvent = (e) => {
        if (options.pointerTypes)
          return options.pointerTypes.includes(e.pointerType);
        return true;
      };
      const handleEvent = (e) => {
        if (shared.resolveUnref(options.preventDefault))
          e.preventDefault();
        if (shared.resolveUnref(options.stopPropagation))
          e.stopPropagation();
      };
      const start = (e) => {
        var _a2;
        if (!filterEvent(e))
          return;
        if (shared.resolveUnref(options.exact) && e.target !== shared.resolveUnref(target))
          return;
        const rect = shared.resolveUnref(target).getBoundingClientRect();
        const pos = {
          x: e.pageX - rect.left,
          y: e.pageY - rect.top
        };
        if (((_a2 = options.onStart) == null ? void 0 : _a2.call(options, pos, e)) === false)
          return;
        pressedDelta.value = pos;
        handleEvent(e);
      };
      const move = (e) => {
        var _a2;
        if (!filterEvent(e))
          return;
        if (!pressedDelta.value)
          return;
        position.value = {
          x: e.pageX - pressedDelta.value.x,
          y: e.pageY - pressedDelta.value.y
        };
        (_a2 = options.onMove) == null ? void 0 : _a2.call(options, position.value, e);
        handleEvent(e);
      };
      const end = (e) => {
        var _a2;
        if (!filterEvent(e))
          return;
        if (!pressedDelta.value)
          return;
        pressedDelta.value = void 0;
        (_a2 = options.onEnd) == null ? void 0 : _a2.call(options, position.value, e);
        handleEvent(e);
      };
      if (shared.isClient) {
        useEventListener(draggingHandle, "pointerdown", start, true);
        useEventListener(draggingElement, "pointermove", move, true);
        useEventListener(draggingElement, "pointerup", end, true);
      }
      return __spreadProps$4(__spreadValues$e({}, shared.toRefs(position)), {
        position,
        isDragging: vueDemi.computed(() => !!pressedDelta.value),
        style: vueDemi.computed(() => `left:${position.value.x}px;top:${position.value.y}px;`)
      });
    }
    function useDropZone(target, onDrop) {
      const isOverDropZone = vueDemi.ref(false);
      let counter = 0;
      if (shared.isClient) {
        useEventListener(target, "dragenter", (event) => {
          event.preventDefault();
          counter += 1;
          isOverDropZone.value = true;
        });
        useEventListener(target, "dragover", (event) => {
          event.preventDefault();
        });
        useEventListener(target, "dragleave", (event) => {
          event.preventDefault();
          counter -= 1;
          if (counter === 0)
            isOverDropZone.value = false;
        });
        useEventListener(target, "drop", (event) => {
          var _a, _b;
          event.preventDefault();
          counter = 0;
          isOverDropZone.value = false;
          const files = Array.from((_b = (_a = event.dataTransfer) == null ? void 0 : _a.files) != null ? _b : []);
          onDrop == null ? void 0 : onDrop(files.length === 0 ? null : files);
        });
      }
      return {
        isOverDropZone
      };
    }
    var __getOwnPropSymbols$f = Object.getOwnPropertySymbols;
    var __hasOwnProp$f = Object.prototype.hasOwnProperty;
    var __propIsEnum$f = Object.prototype.propertyIsEnumerable;
    var __objRest$2 = (source, exclude) => {
      var target = {};
      for (var prop in source)
        if (__hasOwnProp$f.call(source, prop) && exclude.indexOf(prop) < 0)
          target[prop] = source[prop];
      if (source != null && __getOwnPropSymbols$f)
        for (var prop of __getOwnPropSymbols$f(source)) {
          if (exclude.indexOf(prop) < 0 && __propIsEnum$f.call(source, prop))
            target[prop] = source[prop];
        }
      return target;
    };
    function useResizeObserver(target, callback, options = {}) {
      const _a = options, { window: window2 = defaultWindow } = _a, observerOptions = __objRest$2(_a, ["window"]);
      let observer;
      const isSupported = useSupported(() => window2 && "ResizeObserver" in window2);
      const cleanup = () => {
        if (observer) {
          observer.disconnect();
          observer = void 0;
        }
      };
      const stopWatch = vueDemi.watch(() => unrefElement(target), (el) => {
        cleanup();
        if (isSupported.value && window2 && el) {
          observer = new ResizeObserver(callback);
          observer.observe(el, observerOptions);
        }
      }, { immediate: true, flush: "post" });
      const stop = () => {
        cleanup();
        stopWatch();
      };
      shared.tryOnScopeDispose(stop);
      return {
        isSupported,
        stop
      };
    }
    function useElementBounding(target, options = {}) {
      const {
        reset = true,
        windowResize = true,
        windowScroll = true,
        immediate = true
      } = options;
      const height = vueDemi.ref(0);
      const bottom = vueDemi.ref(0);
      const left = vueDemi.ref(0);
      const right = vueDemi.ref(0);
      const top = vueDemi.ref(0);
      const width = vueDemi.ref(0);
      const x = vueDemi.ref(0);
      const y = vueDemi.ref(0);
      function update() {
        const el = unrefElement(target);
        if (!el) {
          if (reset) {
            height.value = 0;
            bottom.value = 0;
            left.value = 0;
            right.value = 0;
            top.value = 0;
            width.value = 0;
            x.value = 0;
            y.value = 0;
          }
          return;
        }
        const rect = el.getBoundingClientRect();
        height.value = rect.height;
        bottom.value = rect.bottom;
        left.value = rect.left;
        right.value = rect.right;
        top.value = rect.top;
        width.value = rect.width;
        x.value = rect.x;
        y.value = rect.y;
      }
      useResizeObserver(target, update);
      vueDemi.watch(() => unrefElement(target), (ele) => !ele && update());
      if (windowScroll)
        useEventListener("scroll", update, { passive: true });
      if (windowResize)
        useEventListener("resize", update, { passive: true });
      shared.tryOnMounted(() => {
        if (immediate)
          update();
      });
      return {
        height,
        bottom,
        left,
        right,
        top,
        width,
        x,
        y,
        update
      };
    }
    function useRafFn(fn, options = {}) {
      const {
        immediate = true,
        window: window2 = defaultWindow
      } = options;
      const isActive = vueDemi.ref(false);
      let rafId = null;
      function loop() {
        if (!isActive.value || !window2)
          return;
        fn();
        rafId = window2.requestAnimationFrame(loop);
      }
      function resume() {
        if (!isActive.value && window2) {
          isActive.value = true;
          loop();
        }
      }
      function pause() {
        isActive.value = false;
        if (rafId != null && window2) {
          window2.cancelAnimationFrame(rafId);
          rafId = null;
        }
      }
      if (immediate)
        resume();
      shared.tryOnScopeDispose(pause);
      return {
        isActive,
        pause,
        resume
      };
    }
    var __defProp$d = Object.defineProperty;
    var __getOwnPropSymbols$e = Object.getOwnPropertySymbols;
    var __hasOwnProp$e = Object.prototype.hasOwnProperty;
    var __propIsEnum$e = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$d = (obj, key, value) => key in obj ? __defProp$d(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$d = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$e.call(b, prop))
          __defNormalProp$d(a, prop, b[prop]);
      if (__getOwnPropSymbols$e)
        for (var prop of __getOwnPropSymbols$e(b)) {
          if (__propIsEnum$e.call(b, prop))
            __defNormalProp$d(a, prop, b[prop]);
        }
      return a;
    };
    function useElementByPoint(options) {
      const element = vueDemi.ref(null);
      const { x, y } = options;
      const controls = useRafFn(() => {
        element.value = document.elementFromPoint(shared.resolveUnref(x), shared.resolveUnref(y));
      });
      return __spreadValues$d({
        element
      }, controls);
    }
    function useElementHover(el) {
      const isHovered = vueDemi.ref(false);
      useEventListener(el, "mouseenter", () => isHovered.value = true);
      useEventListener(el, "mouseleave", () => isHovered.value = false);
      return isHovered;
    }
    function useElementSize(target, initialSize = { width: 0, height: 0 }, options = {}) {
      const { box = "content-box" } = options;
      const width = vueDemi.ref(initialSize.width);
      const height = vueDemi.ref(initialSize.height);
      useResizeObserver(target, ([entry]) => {
        const boxSize = box === "border-box" ? entry.borderBoxSize : box === "content-box" ? entry.contentBoxSize : entry.devicePixelContentBoxSize;
        if (boxSize) {
          width.value = boxSize.reduce((acc, { inlineSize }) => acc + inlineSize, 0);
          height.value = boxSize.reduce((acc, { blockSize }) => acc + blockSize, 0);
        } else {
          width.value = entry.contentRect.width;
          height.value = entry.contentRect.height;
        }
      }, options);
      vueDemi.watch(() => unrefElement(target), (ele) => {
        width.value = ele ? initialSize.width : 0;
        height.value = ele ? initialSize.height : 0;
      });
      return {
        width,
        height
      };
    }
    function useElementVisibility(element, { window: window2 = defaultWindow, scrollTarget } = {}) {
      const elementIsVisible = vueDemi.ref(false);
      const testBounding = () => {
        if (!window2)
          return;
        const document2 = window2.document;
        const el = unrefElement(element);
        if (!el) {
          elementIsVisible.value = false;
        } else {
          const rect = el.getBoundingClientRect();
          elementIsVisible.value = rect.top <= (window2.innerHeight || document2.documentElement.clientHeight) && rect.left <= (window2.innerWidth || document2.documentElement.clientWidth) && rect.bottom >= 0 && rect.right >= 0;
        }
      };
      vueDemi.watch(() => unrefElement(element), () => testBounding(), { immediate: true, flush: "post" });
      if (window2) {
        useEventListener(scrollTarget || window2, "scroll", testBounding, {
          capture: false,
          passive: true
        });
      }
      return elementIsVisible;
    }
    var events = /* @__PURE__ */ new Map();
    function useEventBus(key) {
      const scope = vueDemi.getCurrentScope();
      function on(listener) {
        var _a;
        const listeners = events.get(key) || [];
        listeners.push(listener);
        events.set(key, listeners);
        const _off = () => off(listener);
        (_a = scope == null ? void 0 : scope.cleanups) == null ? void 0 : _a.push(_off);
        return _off;
      }
      function once(listener) {
        function _listener(...args) {
          off(_listener);
          listener(...args);
        }
        return on(_listener);
      }
      function off(listener) {
        const listeners = events.get(key);
        if (!listeners)
          return;
        const index = listeners.indexOf(listener);
        if (index > -1)
          listeners.splice(index, 1);
        if (!listeners.length)
          events.delete(key);
      }
      function reset() {
        events.delete(key);
      }
      function emit(event, payload) {
        var _a;
        (_a = events.get(key)) == null ? void 0 : _a.forEach((v) => v(event, payload));
      }
      return { on, once, off, emit, reset };
    }
    function useEventSource(url, events2 = [], options = {}) {
      const event = vueDemi.ref(null);
      const data = vueDemi.ref(null);
      const status = vueDemi.ref("CONNECTING");
      const eventSource = vueDemi.ref(null);
      const error = vueDemi.ref(null);
      const {
        withCredentials = false
      } = options;
      const close = () => {
        if (eventSource.value) {
          eventSource.value.close();
          eventSource.value = null;
          status.value = "CLOSED";
        }
      };
      const es = new EventSource(url, { withCredentials });
      eventSource.value = es;
      es.onopen = () => {
        status.value = "OPEN";
        error.value = null;
      };
      es.onerror = (e) => {
        status.value = "CLOSED";
        error.value = e;
      };
      es.onmessage = (e) => {
        event.value = null;
        data.value = e.data;
      };
      for (const event_name of events2) {
        useEventListener(es, event_name, (e) => {
          event.value = event_name;
          data.value = e.data || null;
        });
      }
      shared.tryOnScopeDispose(() => {
        close();
      });
      return {
        eventSource,
        event,
        data,
        status,
        error,
        close
      };
    }
    function useEyeDropper(options = {}) {
      const { initialValue = "" } = options;
      const isSupported = useSupported(() => typeof window !== "undefined" && "EyeDropper" in window);
      const sRGBHex = vueDemi.ref(initialValue);
      async function open(openOptions) {
        if (!isSupported.value)
          return;
        const eyeDropper = new window.EyeDropper();
        const result = await eyeDropper.open(openOptions);
        sRGBHex.value = result.sRGBHex;
        return result;
      }
      return { isSupported, sRGBHex, open };
    }
    function useFavicon(newIcon = null, options = {}) {
      const {
        baseUrl = "",
        rel = "icon",
        document: document2 = defaultDocument
      } = options;
      const favicon = shared.resolveRef(newIcon);
      const applyIcon = (icon) => {
        document2 == null ? void 0 : document2.head.querySelectorAll(`link[rel*="${rel}"]`).forEach((el) => el.href = `${baseUrl}${icon}`);
      };
      vueDemi.watch(favicon, (i, o) => {
        if (shared.isString(i) && i !== o)
          applyIcon(i);
      }, { immediate: true });
      return favicon;
    }
    var __defProp$c = Object.defineProperty;
    var __defProps$3 = Object.defineProperties;
    var __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$d = Object.getOwnPropertySymbols;
    var __hasOwnProp$d = Object.prototype.hasOwnProperty;
    var __propIsEnum$d = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$c = (obj, key, value) => key in obj ? __defProp$c(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$c = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$d.call(b, prop))
          __defNormalProp$c(a, prop, b[prop]);
      if (__getOwnPropSymbols$d)
        for (var prop of __getOwnPropSymbols$d(b)) {
          if (__propIsEnum$d.call(b, prop))
            __defNormalProp$c(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));
    var payloadMapping = {
      json: "application/json",
      text: "text/plain",
      formData: "multipart/form-data"
    };
    function isFetchOptions(obj) {
      return shared.containsProp(obj, "immediate", "refetch", "initialData", "timeout", "beforeFetch", "afterFetch", "onFetchError", "fetch");
    }
    function headersToObject(headers) {
      if (typeof Headers !== "undefined" && headers instanceof Headers)
        return Object.fromEntries([...headers.entries()]);
      return headers;
    }
    function chainCallbacks(...callbacks) {
      return (ctx) => {
        callbacks.forEach(async (callback) => {
          if (callback)
            ctx = __spreadValues$c(__spreadValues$c({}, ctx), await callback(ctx));
        });
        return ctx;
      };
    }
    function createFetch(config = {}) {
      const _options = config.options || {};
      const _fetchOptions = config.fetchOptions || {};
      function useFactoryFetch(url, ...args) {
        const computedUrl = vueDemi.computed(() => config.baseUrl ? joinPaths(shared.resolveUnref(config.baseUrl), shared.resolveUnref(url)) : shared.resolveUnref(url));
        let options = _options;
        let fetchOptions = _fetchOptions;
        if (args.length > 0) {
          if (isFetchOptions(args[0])) {
            options = __spreadProps$3(__spreadValues$c(__spreadValues$c({}, options), args[0]), {
              beforeFetch: chainCallbacks(_options.beforeFetch, args[0].beforeFetch),
              afterFetch: chainCallbacks(_options.afterFetch, args[0].afterFetch),
              onFetchError: chainCallbacks(_options.onFetchError, args[0].onFetchError)
            });
          } else {
            fetchOptions = __spreadProps$3(__spreadValues$c(__spreadValues$c({}, fetchOptions), args[0]), {
              headers: __spreadValues$c(__spreadValues$c({}, headersToObject(fetchOptions.headers) || {}), headersToObject(args[0].headers) || {})
            });
          }
        }
        if (args.length > 1 && isFetchOptions(args[1])) {
          options = __spreadProps$3(__spreadValues$c(__spreadValues$c({}, options), args[1]), {
            beforeFetch: chainCallbacks(_options.beforeFetch, args[1].beforeFetch),
            afterFetch: chainCallbacks(_options.afterFetch, args[1].afterFetch),
            onFetchError: chainCallbacks(_options.onFetchError, args[1].onFetchError)
          });
        }
        return useFetch(computedUrl, fetchOptions, options);
      }
      return useFactoryFetch;
    }
    function useFetch(url, ...args) {
      var _a;
      const supportsAbort = typeof AbortController === "function";
      let fetchOptions = {};
      let options = { immediate: true, refetch: false, timeout: 0 };
      const config = {
        method: "GET",
        type: "text",
        payload: void 0
      };
      if (args.length > 0) {
        if (isFetchOptions(args[0]))
          options = __spreadValues$c(__spreadValues$c({}, options), args[0]);
        else
          fetchOptions = args[0];
      }
      if (args.length > 1) {
        if (isFetchOptions(args[1]))
          options = __spreadValues$c(__spreadValues$c({}, options), args[1]);
      }
      const {
        fetch = (_a = defaultWindow) == null ? void 0 : _a.fetch,
        initialData,
        timeout
      } = options;
      const responseEvent = shared.createEventHook();
      const errorEvent = shared.createEventHook();
      const finallyEvent = shared.createEventHook();
      const isFinished = vueDemi.ref(false);
      const isFetching = vueDemi.ref(false);
      const aborted = vueDemi.ref(false);
      const statusCode = vueDemi.ref(null);
      const response = vueDemi.shallowRef(null);
      const error = vueDemi.shallowRef(null);
      const data = vueDemi.shallowRef(initialData);
      const canAbort = vueDemi.computed(() => supportsAbort && isFetching.value);
      let controller;
      let timer;
      const abort = () => {
        if (supportsAbort && controller)
          controller.abort();
      };
      const loading = (isLoading) => {
        isFetching.value = isLoading;
        isFinished.value = !isLoading;
      };
      if (timeout)
        timer = shared.useTimeoutFn(abort, timeout, { immediate: false });
      const execute = async (throwOnFailed = false) => {
        var _a2;
        loading(true);
        error.value = null;
        statusCode.value = null;
        aborted.value = false;
        controller = void 0;
        if (supportsAbort) {
          controller = new AbortController();
          controller.signal.onabort = () => aborted.value = true;
          fetchOptions = __spreadProps$3(__spreadValues$c({}, fetchOptions), {
            signal: controller.signal
          });
        }
        const defaultFetchOptions = {
          method: config.method,
          headers: {}
        };
        if (config.payload) {
          const headers = headersToObject(defaultFetchOptions.headers);
          if (config.payloadType)
            headers["Content-Type"] = (_a2 = payloadMapping[config.payloadType]) != null ? _a2 : config.payloadType;
          const payload = shared.resolveUnref(config.payload);
          defaultFetchOptions.body = config.payloadType === "json" ? JSON.stringify(payload) : payload;
        }
        let isCanceled = false;
        const context = { url: shared.resolveUnref(url), options: __spreadValues$c(__spreadValues$c({}, defaultFetchOptions), fetchOptions), cancel: () => {
          isCanceled = true;
        } };
        if (options.beforeFetch)
          Object.assign(context, await options.beforeFetch(context));
        if (isCanceled || !fetch) {
          loading(false);
          return Promise.resolve(null);
        }
        let responseData = null;
        if (timer)
          timer.start();
        return new Promise((resolve, reject) => {
          var _a3;
          fetch(context.url, __spreadProps$3(__spreadValues$c(__spreadValues$c({}, defaultFetchOptions), context.options), {
            headers: __spreadValues$c(__spreadValues$c({}, headersToObject(defaultFetchOptions.headers)), headersToObject((_a3 = context.options) == null ? void 0 : _a3.headers))
          })).then(async (fetchResponse) => {
            response.value = fetchResponse;
            statusCode.value = fetchResponse.status;
            responseData = await fetchResponse[config.type]();
            if (options.afterFetch && statusCode.value >= 200 && statusCode.value < 300)
              ({ data: responseData } = await options.afterFetch({ data: responseData, response: fetchResponse }));
            data.value = responseData;
            if (!fetchResponse.ok)
              throw new Error(fetchResponse.statusText);
            responseEvent.trigger(fetchResponse);
            return resolve(fetchResponse);
          }).catch(async (fetchError) => {
            let errorData = fetchError.message || fetchError.name;
            if (options.onFetchError)
              ({ data: responseData, error: errorData } = await options.onFetchError({ data: responseData, error: fetchError, response: response.value }));
            data.value = responseData;
            error.value = errorData;
            errorEvent.trigger(fetchError);
            if (throwOnFailed)
              return reject(fetchError);
            return resolve(null);
          }).finally(() => {
            loading(false);
            if (timer)
              timer.stop();
            finallyEvent.trigger(null);
          });
        });
      };
      const refetch = shared.resolveRef(options.refetch);
      vueDemi.watch([
        refetch,
        shared.resolveRef(url)
      ], ([refetch2]) => refetch2 && execute(), { deep: true });
      const shell = {
        isFinished,
        statusCode,
        response,
        error,
        data,
        isFetching,
        canAbort,
        aborted,
        abort,
        execute,
        onFetchResponse: responseEvent.on,
        onFetchError: errorEvent.on,
        onFetchFinally: finallyEvent.on,
        get: setMethod("GET"),
        put: setMethod("PUT"),
        post: setMethod("POST"),
        delete: setMethod("DELETE"),
        patch: setMethod("PATCH"),
        head: setMethod("HEAD"),
        options: setMethod("OPTIONS"),
        json: setType("json"),
        text: setType("text"),
        blob: setType("blob"),
        arrayBuffer: setType("arrayBuffer"),
        formData: setType("formData")
      };
      function setMethod(method) {
        return (payload, payloadType) => {
          if (!isFetching.value) {
            config.method = method;
            config.payload = payload;
            config.payloadType = payloadType;
            if (vueDemi.isRef(config.payload)) {
              vueDemi.watch([
                refetch,
                shared.resolveRef(config.payload)
              ], ([refetch2]) => refetch2 && execute(), { deep: true });
            }
            const rawPayload = shared.resolveUnref(config.payload);
            if (!payloadType && rawPayload && Object.getPrototypeOf(rawPayload) === Object.prototype)
              config.payloadType = "json";
            return __spreadProps$3(__spreadValues$c({}, shell), {
              then(onFulfilled, onRejected) {
                return waitUntilFinished().then(onFulfilled, onRejected);
              }
            });
          }
          return void 0;
        };
      }
      function waitUntilFinished() {
        return new Promise((resolve, reject) => {
          shared.until(isFinished).toBe(true).then(() => resolve(shell)).catch((error2) => reject(error2));
        });
      }
      function setType(type) {
        return () => {
          if (!isFetching.value) {
            config.type = type;
            return __spreadProps$3(__spreadValues$c({}, shell), {
              then(onFulfilled, onRejected) {
                return waitUntilFinished().then(onFulfilled, onRejected);
              }
            });
          }
          return void 0;
        };
      }
      if (options.immediate)
        setTimeout(execute, 0);
      return __spreadProps$3(__spreadValues$c({}, shell), {
        then(onFulfilled, onRejected) {
          return waitUntilFinished().then(onFulfilled, onRejected);
        }
      });
    }
    function joinPaths(start, end) {
      if (!start.endsWith("/") && !end.startsWith("/"))
        return `${start}/${end}`;
      return `${start}${end}`;
    }
    var __defProp$b = Object.defineProperty;
    var __getOwnPropSymbols$c = Object.getOwnPropertySymbols;
    var __hasOwnProp$c = Object.prototype.hasOwnProperty;
    var __propIsEnum$c = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$b = (obj, key, value) => key in obj ? __defProp$b(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$b = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$c.call(b, prop))
          __defNormalProp$b(a, prop, b[prop]);
      if (__getOwnPropSymbols$c)
        for (var prop of __getOwnPropSymbols$c(b)) {
          if (__propIsEnum$c.call(b, prop))
            __defNormalProp$b(a, prop, b[prop]);
        }
      return a;
    };
    var DEFAULT_OPTIONS = {
      multiple: true,
      accept: "*"
    };
    function useFileDialog(options = {}) {
      const {
        document: document2 = defaultDocument
      } = options;
      const files = vueDemi.ref(null);
      let input;
      if (document2) {
        input = document2.createElement("input");
        input.type = "file";
        input.onchange = (event) => {
          const result = event.target;
          files.value = result.files;
        };
      }
      const open = (localOptions) => {
        if (!input)
          return;
        const _options = __spreadValues$b(__spreadValues$b(__spreadValues$b({}, DEFAULT_OPTIONS), options), localOptions);
        input.multiple = _options.multiple;
        input.accept = _options.accept;
        if (shared.hasOwn(_options, "capture"))
          input.capture = _options.capture;
        input.click();
      };
      const reset = () => {
        files.value = null;
        if (input)
          input.value = "";
      };
      return {
        files: vueDemi.readonly(files),
        open,
        reset
      };
    }
    var __defProp$a = Object.defineProperty;
    var __getOwnPropSymbols$b = Object.getOwnPropertySymbols;
    var __hasOwnProp$b = Object.prototype.hasOwnProperty;
    var __propIsEnum$b = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$a = (obj, key, value) => key in obj ? __defProp$a(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$a = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$b.call(b, prop))
          __defNormalProp$a(a, prop, b[prop]);
      if (__getOwnPropSymbols$b)
        for (var prop of __getOwnPropSymbols$b(b)) {
          if (__propIsEnum$b.call(b, prop))
            __defNormalProp$a(a, prop, b[prop]);
        }
      return a;
    };
    function useFileSystemAccess(options = {}) {
      const {
        window: _window = defaultWindow,
        dataType = "Text"
      } = vueDemi.unref(options);
      const window2 = _window;
      const isSupported = useSupported(() => window2 && "showSaveFilePicker" in window2 && "showOpenFilePicker" in window2);
      const fileHandle = vueDemi.ref();
      const data = vueDemi.ref();
      const file = vueDemi.ref();
      const fileName = vueDemi.computed(() => {
        var _a, _b;
        return (_b = (_a = file.value) == null ? void 0 : _a.name) != null ? _b : "";
      });
      const fileMIME = vueDemi.computed(() => {
        var _a, _b;
        return (_b = (_a = file.value) == null ? void 0 : _a.type) != null ? _b : "";
      });
      const fileSize = vueDemi.computed(() => {
        var _a, _b;
        return (_b = (_a = file.value) == null ? void 0 : _a.size) != null ? _b : 0;
      });
      const fileLastModified = vueDemi.computed(() => {
        var _a, _b;
        return (_b = (_a = file.value) == null ? void 0 : _a.lastModified) != null ? _b : 0;
      });
      async function open(_options = {}) {
        if (!isSupported.value)
          return;
        const [handle] = await window2.showOpenFilePicker(__spreadValues$a(__spreadValues$a({}, vueDemi.unref(options)), _options));
        fileHandle.value = handle;
        await updateFile();
        await updateData();
      }
      async function create(_options = {}) {
        if (!isSupported.value)
          return;
        fileHandle.value = await window2.showSaveFilePicker(__spreadValues$a(__spreadValues$a({}, vueDemi.unref(options)), _options));
        data.value = void 0;
        await updateFile();
        await updateData();
      }
      async function save(_options = {}) {
        if (!isSupported.value)
          return;
        if (!fileHandle.value)
          return saveAs(_options);
        if (data.value) {
          const writableStream = await fileHandle.value.createWritable();
          await writableStream.write(data.value);
          await writableStream.close();
        }
        await updateFile();
      }
      async function saveAs(_options = {}) {
        if (!isSupported.value)
          return;
        fileHandle.value = await window2.showSaveFilePicker(__spreadValues$a(__spreadValues$a({}, vueDemi.unref(options)), _options));
        if (data.value) {
          const writableStream = await fileHandle.value.createWritable();
          await writableStream.write(data.value);
          await writableStream.close();
        }
        await updateFile();
      }
      async function updateFile() {
        var _a;
        file.value = await ((_a = fileHandle.value) == null ? void 0 : _a.getFile());
      }
      async function updateData() {
        var _a, _b;
        if (vueDemi.unref(dataType) === "Text")
          data.value = await ((_a = file.value) == null ? void 0 : _a.text());
        if (vueDemi.unref(dataType) === "ArrayBuffer")
          data.value = await ((_b = file.value) == null ? void 0 : _b.arrayBuffer());
        if (vueDemi.unref(dataType) === "Blob")
          data.value = file.value;
      }
      vueDemi.watch(() => vueDemi.unref(dataType), updateData);
      return {
        isSupported,
        data,
        file,
        fileName,
        fileMIME,
        fileSize,
        fileLastModified,
        open,
        create,
        save,
        saveAs,
        updateData
      };
    }
    function useFocus(target, options = {}) {
      const { initialValue = false } = options;
      const activeElement = useActiveElement(options);
      const targetElement = vueDemi.computed(() => unrefElement(target));
      const focused = vueDemi.computed({
        get() {
          return shared.isDef(activeElement.value) && shared.isDef(targetElement.value) && activeElement.value === targetElement.value;
        },
        set(value) {
          var _a, _b;
          if (!value && focused.value)
            (_a = targetElement.value) == null ? void 0 : _a.blur();
          if (value && !focused.value)
            (_b = targetElement.value) == null ? void 0 : _b.focus();
        }
      });
      vueDemi.watch(targetElement, () => {
        focused.value = initialValue;
      }, { immediate: true, flush: "post" });
      return { focused };
    }
    function useFocusWithin(target, options = {}) {
      const activeElement = useActiveElement(options);
      const targetElement = vueDemi.computed(() => unrefElement(target));
      const focused = vueDemi.computed(() => targetElement.value && activeElement.value ? targetElement.value.contains(activeElement.value) : false);
      return { focused };
    }
    function useFps(options) {
      var _a;
      const fps = vueDemi.ref(0);
      if (typeof performance === "undefined")
        return fps;
      const every = (_a = options == null ? void 0 : options.every) != null ? _a : 10;
      let last2 = performance.now();
      let ticks = 0;
      useRafFn(() => {
        ticks += 1;
        if (ticks >= every) {
          const now = performance.now();
          const diff = now - last2;
          fps.value = Math.round(1e3 / (diff / ticks));
          last2 = now;
          ticks = 0;
        }
      });
      return fps;
    }
    var functionsMap = [
      [
        "requestFullscreen",
        "exitFullscreen",
        "fullscreenElement",
        "fullscreenEnabled",
        "fullscreenchange",
        "fullscreenerror"
      ],
      [
        "webkitRequestFullscreen",
        "webkitExitFullscreen",
        "webkitFullscreenElement",
        "webkitFullscreenEnabled",
        "webkitfullscreenchange",
        "webkitfullscreenerror"
      ],
      [
        "webkitRequestFullScreen",
        "webkitCancelFullScreen",
        "webkitCurrentFullScreenElement",
        "webkitCancelFullScreen",
        "webkitfullscreenchange",
        "webkitfullscreenerror"
      ],
      [
        "mozRequestFullScreen",
        "mozCancelFullScreen",
        "mozFullScreenElement",
        "mozFullScreenEnabled",
        "mozfullscreenchange",
        "mozfullscreenerror"
      ],
      [
        "msRequestFullscreen",
        "msExitFullscreen",
        "msFullscreenElement",
        "msFullscreenEnabled",
        "MSFullscreenChange",
        "MSFullscreenError"
      ]
    ];
    function useFullscreen(target, options = {}) {
      const { document: document2 = defaultDocument, autoExit = false } = options;
      const targetRef = target || (document2 == null ? void 0 : document2.querySelector("html"));
      const isFullscreen = vueDemi.ref(false);
      let map = functionsMap[0];
      const isSupported = useSupported(() => {
        if (!document2) {
          return false;
        } else {
          for (const m of functionsMap) {
            if (m[1] in document2) {
              map = m;
              return true;
            }
          }
        }
        return false;
      });
      const [REQUEST, EXIT, ELEMENT, , EVENT] = map;
      async function exit() {
        if (!isSupported.value)
          return;
        if (document2 == null ? void 0 : document2[ELEMENT])
          await document2[EXIT]();
        isFullscreen.value = false;
      }
      async function enter() {
        if (!isSupported.value)
          return;
        await exit();
        const target2 = unrefElement(targetRef);
        if (target2) {
          await target2[REQUEST]();
          isFullscreen.value = true;
        }
      }
      async function toggle() {
        if (isFullscreen.value)
          await exit();
        else
          await enter();
      }
      if (document2) {
        useEventListener(document2, EVENT, () => {
          isFullscreen.value = !!(document2 == null ? void 0 : document2[ELEMENT]);
        }, false);
      }
      if (autoExit)
        shared.tryOnScopeDispose(exit);
      return {
        isSupported,
        isFullscreen,
        enter,
        exit,
        toggle
      };
    }
    function mapGamepadToXbox360Controller(gamepad) {
      return vueDemi.computed(() => {
        if (gamepad.value) {
          return {
            buttons: {
              a: gamepad.value.buttons[0],
              b: gamepad.value.buttons[1],
              x: gamepad.value.buttons[2],
              y: gamepad.value.buttons[3]
            },
            bumper: {
              left: gamepad.value.buttons[4],
              right: gamepad.value.buttons[5]
            },
            triggers: {
              left: gamepad.value.buttons[6],
              right: gamepad.value.buttons[7]
            },
            stick: {
              left: {
                horizontal: gamepad.value.axes[0],
                vertical: gamepad.value.axes[1],
                button: gamepad.value.buttons[10]
              },
              right: {
                horizontal: gamepad.value.axes[2],
                vertical: gamepad.value.axes[3],
                button: gamepad.value.buttons[11]
              }
            },
            dpad: {
              up: gamepad.value.buttons[12],
              down: gamepad.value.buttons[13],
              left: gamepad.value.buttons[14],
              right: gamepad.value.buttons[15]
            },
            back: gamepad.value.buttons[8],
            start: gamepad.value.buttons[9]
          };
        }
        return null;
      });
    }
    function useGamepad(options = {}) {
      const {
        navigator = defaultNavigator
      } = options;
      const isSupported = useSupported(() => navigator && "getGamepads" in navigator);
      const gamepads = vueDemi.ref([]);
      const onConnectedHook = shared.createEventHook();
      const onDisconnectedHook = shared.createEventHook();
      const stateFromGamepad = (gamepad) => {
        const hapticActuators = [];
        const vibrationActuator = "vibrationActuator" in gamepad ? gamepad.vibrationActuator : null;
        if (vibrationActuator)
          hapticActuators.push(vibrationActuator);
        if (gamepad.hapticActuators)
          hapticActuators.push(...gamepad.hapticActuators);
        return {
          id: gamepad.id,
          hapticActuators,
          index: gamepad.index,
          mapping: gamepad.mapping,
          connected: gamepad.connected,
          timestamp: gamepad.timestamp,
          axes: gamepad.axes.map((axes) => axes),
          buttons: gamepad.buttons.map((button) => ({ pressed: button.pressed, touched: button.touched, value: button.value }))
        };
      };
      const updateGamepadState = () => {
        const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];
        for (let i = 0; i < _gamepads.length; ++i) {
          const gamepad = _gamepads[i];
          if (gamepad) {
            const index = gamepads.value.findIndex(({ index: index2 }) => index2 === gamepad.index);
            if (index > -1)
              gamepads.value[index] = stateFromGamepad(gamepad);
          }
        }
      };
      const { isActive, pause, resume } = useRafFn(updateGamepadState);
      const onGamepadConnected = (gamepad) => {
        if (!gamepads.value.some(({ index }) => index === gamepad.index)) {
          gamepads.value.push(stateFromGamepad(gamepad));
          onConnectedHook.trigger(gamepad.index);
        }
        resume();
      };
      const onGamepadDisconnected = (gamepad) => {
        gamepads.value = gamepads.value.filter((x) => x.index !== gamepad.index);
        onDisconnectedHook.trigger(gamepad.index);
      };
      useEventListener("gamepadconnected", (e) => onGamepadConnected(e.gamepad));
      useEventListener("gamepaddisconnected", (e) => onGamepadDisconnected(e.gamepad));
      shared.tryOnMounted(() => {
        const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];
        if (_gamepads) {
          for (let i = 0; i < _gamepads.length; ++i) {
            const gamepad = _gamepads[i];
            if (gamepad)
              onGamepadConnected(gamepad);
          }
        }
      });
      pause();
      return {
        isSupported,
        onConnected: onConnectedHook.on,
        onDisconnected: onDisconnectedHook.on,
        gamepads,
        pause,
        resume,
        isActive
      };
    }
    function useGeolocation(options = {}) {
      const {
        enableHighAccuracy = true,
        maximumAge = 3e4,
        timeout = 27e3,
        navigator = defaultNavigator
      } = options;
      const isSupported = useSupported(() => navigator && "geolocation" in navigator);
      const locatedAt = vueDemi.ref(null);
      const error = vueDemi.ref(null);
      const coords = vueDemi.ref({
        accuracy: 0,
        latitude: Infinity,
        longitude: Infinity,
        altitude: null,
        altitudeAccuracy: null,
        heading: null,
        speed: null
      });
      function updatePosition(position) {
        locatedAt.value = position.timestamp;
        coords.value = position.coords;
        error.value = null;
      }
      let watcher;
      if (isSupported.value) {
        watcher = navigator.geolocation.watchPosition(updatePosition, (err) => error.value = err, {
          enableHighAccuracy,
          maximumAge,
          timeout
        });
      }
      shared.tryOnScopeDispose(() => {
        if (watcher && navigator)
          navigator.geolocation.clearWatch(watcher);
      });
      return {
        isSupported,
        coords,
        locatedAt,
        error
      };
    }
    var defaultEvents$1 = ["mousemove", "mousedown", "resize", "keydown", "touchstart", "wheel"];
    var oneMinute = 6e4;
    function useIdle(timeout = oneMinute, options = {}) {
      const {
        initialState = false,
        listenForVisibilityChange = true,
        events: events2 = defaultEvents$1,
        window: window2 = defaultWindow,
        eventFilter = shared.throttleFilter(50)
      } = options;
      const idle = vueDemi.ref(initialState);
      const lastActive = vueDemi.ref(shared.timestamp());
      let timer;
      const onEvent = shared.createFilterWrapper(eventFilter, () => {
        idle.value = false;
        lastActive.value = shared.timestamp();
        clearTimeout(timer);
        timer = setTimeout(() => idle.value = true, timeout);
      });
      if (window2) {
        const document2 = window2.document;
        for (const event of events2)
          useEventListener(window2, event, onEvent, { passive: true });
        if (listenForVisibilityChange) {
          useEventListener(document2, "visibilitychange", () => {
            if (!document2.hidden)
              onEvent();
          });
        }
      }
      timer = setTimeout(() => idle.value = true, timeout);
      return { idle, lastActive };
    }
    var __defProp$9 = Object.defineProperty;
    var __getOwnPropSymbols$a = Object.getOwnPropertySymbols;
    var __hasOwnProp$a = Object.prototype.hasOwnProperty;
    var __propIsEnum$a = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$9 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$a.call(b, prop))
          __defNormalProp$9(a, prop, b[prop]);
      if (__getOwnPropSymbols$a)
        for (var prop of __getOwnPropSymbols$a(b)) {
          if (__propIsEnum$a.call(b, prop))
            __defNormalProp$9(a, prop, b[prop]);
        }
      return a;
    };
    async function loadImage(options) {
      return new Promise((resolve, reject) => {
        const img = new Image();
        const { src, srcset, sizes } = options;
        img.src = src;
        if (srcset)
          img.srcset = srcset;
        if (sizes)
          img.sizes = sizes;
        img.onload = () => resolve(img);
        img.onerror = reject;
      });
    }
    var useImage = (options, asyncStateOptions = {}) => {
      const state = useAsyncState(() => loadImage(shared.resolveUnref(options)), void 0, __spreadValues$9({
        resetOnExecute: true
      }, asyncStateOptions));
      vueDemi.watch(() => shared.resolveUnref(options), () => state.execute(asyncStateOptions.delay), { deep: true });
      return state;
    };
    var ARRIVED_STATE_THRESHOLD_PIXELS = 1;
    function useScroll(element, options = {}) {
      const {
        throttle = 0,
        idle = 200,
        onStop = shared.noop,
        onScroll = shared.noop,
        offset = {
          left: 0,
          right: 0,
          top: 0,
          bottom: 0
        },
        eventListenerOptions = {
          capture: false,
          passive: true
        },
        behavior = "auto"
      } = options;
      const internalX = vueDemi.ref(0);
      const internalY = vueDemi.ref(0);
      const x = vueDemi.computed({
        get() {
          return internalX.value;
        },
        set(x2) {
          scrollTo(x2, void 0);
        }
      });
      const y = vueDemi.computed({
        get() {
          return internalY.value;
        },
        set(y2) {
          scrollTo(void 0, y2);
        }
      });
      function scrollTo(_x, _y) {
        var _a, _b, _c;
        const _element = shared.resolveUnref(element);
        if (!_element)
          return;
        (_c = _element instanceof Document ? document.body : _element) == null ? void 0 : _c.scrollTo({
          top: (_a = shared.resolveUnref(_y)) != null ? _a : y.value,
          left: (_b = shared.resolveUnref(_x)) != null ? _b : x.value,
          behavior: shared.resolveUnref(behavior)
        });
      }
      const isScrolling = vueDemi.ref(false);
      const arrivedState = vueDemi.reactive({
        left: true,
        right: false,
        top: true,
        bottom: false
      });
      const directions = vueDemi.reactive({
        left: false,
        right: false,
        top: false,
        bottom: false
      });
      const onScrollEnd = shared.useDebounceFn((e) => {
        isScrolling.value = false;
        directions.left = false;
        directions.right = false;
        directions.top = false;
        directions.bottom = false;
        onStop(e);
      }, throttle + idle);
      const onScrollHandler = (e) => {
        const eventTarget = e.target === document ? e.target.documentElement : e.target;
        const scrollLeft = eventTarget.scrollLeft;
        directions.left = scrollLeft < internalX.value;
        directions.right = scrollLeft > internalY.value;
        arrivedState.left = scrollLeft <= 0 + (offset.left || 0);
        arrivedState.right = scrollLeft + eventTarget.clientWidth >= eventTarget.scrollWidth - (offset.right || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;
        internalX.value = scrollLeft;
        let scrollTop = eventTarget.scrollTop;
        if (e.target === document && !scrollTop)
          scrollTop = document.body.scrollTop;
        directions.top = scrollTop < internalY.value;
        directions.bottom = scrollTop > internalY.value;
        arrivedState.top = scrollTop <= 0 + (offset.top || 0);
        arrivedState.bottom = scrollTop + eventTarget.clientHeight >= eventTarget.scrollHeight - (offset.bottom || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;
        internalY.value = scrollTop;
        isScrolling.value = true;
        onScrollEnd(e);
        onScroll(e);
      };
      useEventListener(element, "scroll", throttle ? shared.useThrottleFn(onScrollHandler, throttle) : onScrollHandler, eventListenerOptions);
      return {
        x,
        y,
        isScrolling,
        arrivedState,
        directions
      };
    }
    var __defProp$8 = Object.defineProperty;
    var __defProps$2 = Object.defineProperties;
    var __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;
    var __hasOwnProp$9 = Object.prototype.hasOwnProperty;
    var __propIsEnum$9 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$8 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$9.call(b, prop))
          __defNormalProp$8(a, prop, b[prop]);
      if (__getOwnPropSymbols$9)
        for (var prop of __getOwnPropSymbols$9(b)) {
          if (__propIsEnum$9.call(b, prop))
            __defNormalProp$8(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));
    function useInfiniteScroll(element, onLoadMore, options = {}) {
      var _a, _b;
      const direction = (_a = options.direction) != null ? _a : "bottom";
      const state = vueDemi.reactive(useScroll(element, __spreadProps$2(__spreadValues$8({}, options), {
        offset: __spreadValues$8({
          [direction]: (_b = options.distance) != null ? _b : 0
        }, options.offset)
      })));
      vueDemi.watch(() => state.arrivedState[direction], async (v) => {
        var _a2, _b2;
        if (v) {
          const elem = shared.resolveUnref(element);
          const previous = {
            height: (_a2 = elem == null ? void 0 : elem.scrollHeight) != null ? _a2 : 0,
            width: (_b2 = elem == null ? void 0 : elem.scrollWidth) != null ? _b2 : 0
          };
          await onLoadMore(state);
          if (options.preserveScrollPosition && elem) {
            vueDemi.nextTick(() => {
              elem.scrollTo({
                top: elem.scrollHeight - previous.height,
                left: elem.scrollWidth - previous.width
              });
            });
          }
        }
      });
    }
    function useIntersectionObserver(target, callback, options = {}) {
      const {
        root,
        rootMargin = "0px",
        threshold = 0.1,
        window: window2 = defaultWindow
      } = options;
      const isSupported = useSupported(() => window2 && "IntersectionObserver" in window2);
      let cleanup = shared.noop;
      const stopWatch = isSupported.value ? vueDemi.watch(() => ({
        el: unrefElement(target),
        root: unrefElement(root)
      }), ({ el, root: root2 }) => {
        cleanup();
        if (!el)
          return;
        const observer = new IntersectionObserver(callback, {
          root: root2,
          rootMargin,
          threshold
        });
        observer.observe(el);
        cleanup = () => {
          observer.disconnect();
          cleanup = shared.noop;
        };
      }, { immediate: true, flush: "post" }) : shared.noop;
      const stop = () => {
        cleanup();
        stopWatch();
      };
      shared.tryOnScopeDispose(stop);
      return {
        isSupported,
        stop
      };
    }
    var defaultEvents = ["mousedown", "mouseup", "keydown", "keyup"];
    function useKeyModifier(modifier, options = {}) {
      const {
        events: events2 = defaultEvents,
        document: document2 = defaultDocument,
        initial = null
      } = options;
      const state = vueDemi.ref(initial);
      if (document2) {
        events2.forEach((listenerEvent) => {
          useEventListener(document2, listenerEvent, (evt) => {
            if (typeof evt.getModifierState === "function")
              state.value = evt.getModifierState(modifier);
          });
        });
      }
      return state;
    }
    function useLocalStorage(key, initialValue, options = {}) {
      const { window: window2 = defaultWindow } = options;
      return useStorage(key, initialValue, window2 == null ? void 0 : window2.localStorage, options);
    }
    var DefaultMagicKeysAliasMap = {
      ctrl: "control",
      command: "meta",
      cmd: "meta",
      option: "alt",
      up: "arrowup",
      down: "arrowdown",
      left: "arrowleft",
      right: "arrowright"
    };
    function useMagicKeys(options = {}) {
      const {
        reactive: useReactive = false,
        target = defaultWindow,
        aliasMap = DefaultMagicKeysAliasMap,
        passive = true,
        onEventFired = shared.noop
      } = options;
      const current = vueDemi.reactive(/* @__PURE__ */ new Set());
      const obj = { toJSON() {
        return {};
      }, current };
      const refs = useReactive ? vueDemi.reactive(obj) : obj;
      const metaDeps = /* @__PURE__ */ new Set();
      const usedKeys = /* @__PURE__ */ new Set();
      function setRefs(key, value) {
        if (key in refs) {
          if (useReactive)
            refs[key] = value;
          else
            refs[key].value = value;
        }
      }
      function reset() {
        for (const key of usedKeys)
          setRefs(key, false);
      }
      function updateRefs(e, value) {
        var _a, _b;
        const key = (_a = e.key) == null ? void 0 : _a.toLowerCase();
        const code = (_b = e.code) == null ? void 0 : _b.toLowerCase();
        const values = [code, key].filter(Boolean);
        if (key) {
          if (value)
            current.add(key);
          else
            current.delete(key);
        }
        for (const key2 of values) {
          usedKeys.add(key2);
          setRefs(key2, value);
        }
        if (key === "meta" && !value) {
          metaDeps.forEach((key2) => {
            current.delete(key2);
            setRefs(key2, false);
          });
          metaDeps.clear();
        } else if (typeof e.getModifierState === "function" && e.getModifierState("Meta") && value) {
          [...current, ...values].forEach((key2) => metaDeps.add(key2));
        }
      }
      useEventListener(target, "keydown", (e) => {
        updateRefs(e, true);
        return onEventFired(e);
      }, { passive });
      useEventListener(target, "keyup", (e) => {
        updateRefs(e, false);
        return onEventFired(e);
      }, { passive });
      useEventListener("blur", reset, { passive: true });
      useEventListener("focus", reset, { passive: true });
      const proxy = new Proxy(refs, {
        get(target2, prop, rec) {
          if (typeof prop !== "string")
            return Reflect.get(target2, prop, rec);
          prop = prop.toLowerCase();
          if (prop in aliasMap)
            prop = aliasMap[prop];
          if (!(prop in refs)) {
            if (/[+_-]/.test(prop)) {
              const keys2 = prop.split(/[+_-]/g).map((i) => i.trim());
              refs[prop] = vueDemi.computed(() => keys2.every((key) => vueDemi.unref(proxy[key])));
            } else {
              refs[prop] = vueDemi.ref(false);
            }
          }
          const r = Reflect.get(target2, prop, rec);
          return useReactive ? vueDemi.unref(r) : r;
        }
      });
      return proxy;
    }
    var __defProp$7 = Object.defineProperty;
    var __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;
    var __hasOwnProp$8 = Object.prototype.hasOwnProperty;
    var __propIsEnum$8 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$7 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$8.call(b, prop))
          __defNormalProp$7(a, prop, b[prop]);
      if (__getOwnPropSymbols$8)
        for (var prop of __getOwnPropSymbols$8(b)) {
          if (__propIsEnum$8.call(b, prop))
            __defNormalProp$7(a, prop, b[prop]);
        }
      return a;
    };
    function usingElRef(source, cb) {
      if (shared.resolveUnref(source))
        cb(shared.resolveUnref(source));
    }
    function timeRangeToArray(timeRanges) {
      let ranges = [];
      for (let i = 0; i < timeRanges.length; ++i)
        ranges = [...ranges, [timeRanges.start(i), timeRanges.end(i)]];
      return ranges;
    }
    function tracksToArray(tracks) {
      return Array.from(tracks).map(({ label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }, id) => ({ id, label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }));
    }
    var defaultOptions = {
      src: "",
      tracks: []
    };
    function useMediaControls(target, options = {}) {
      options = __spreadValues$7(__spreadValues$7({}, defaultOptions), options);
      const {
        document: document2 = defaultDocument
      } = options;
      const currentTime = vueDemi.ref(0);
      const duration = vueDemi.ref(0);
      const seeking = vueDemi.ref(false);
      const volume = vueDemi.ref(1);
      const waiting = vueDemi.ref(false);
      const ended = vueDemi.ref(false);
      const playing = vueDemi.ref(false);
      const rate = vueDemi.ref(1);
      const stalled = vueDemi.ref(false);
      const buffered = vueDemi.ref([]);
      const tracks = vueDemi.ref([]);
      const selectedTrack = vueDemi.ref(-1);
      const isPictureInPicture = vueDemi.ref(false);
      const muted = vueDemi.ref(false);
      const supportsPictureInPicture = document2 && "pictureInPictureEnabled" in document2;
      const sourceErrorEvent = shared.createEventHook();
      const disableTrack = (track) => {
        usingElRef(target, (el) => {
          if (track) {
            const id = shared.isNumber(track) ? track : track.id;
            el.textTracks[id].mode = "disabled";
          } else {
            for (let i = 0; i < el.textTracks.length; ++i)
              el.textTracks[i].mode = "disabled";
          }
          selectedTrack.value = -1;
        });
      };
      const enableTrack = (track, disableTracks = true) => {
        usingElRef(target, (el) => {
          const id = shared.isNumber(track) ? track : track.id;
          if (disableTracks)
            disableTrack();
          el.textTracks[id].mode = "showing";
          selectedTrack.value = id;
        });
      };
      const togglePictureInPicture = () => {
        return new Promise((resolve, reject) => {
          usingElRef(target, async (el) => {
            if (supportsPictureInPicture) {
              if (!isPictureInPicture.value) {
                el.requestPictureInPicture().then(resolve).catch(reject);
              } else {
                document2.exitPictureInPicture().then(resolve).catch(reject);
              }
            }
          });
        });
      };
      vueDemi.watchEffect(() => {
        if (!document2)
          return;
        const el = shared.resolveUnref(target);
        if (!el)
          return;
        const src = shared.resolveUnref(options.src);
        let sources = [];
        if (!src)
          return;
        if (shared.isString(src))
          sources = [{ src }];
        else if (Array.isArray(src))
          sources = src;
        else if (shared.isObject(src))
          sources = [src];
        el.querySelectorAll("source").forEach((e) => {
          e.removeEventListener("error", sourceErrorEvent.trigger);
          e.remove();
        });
        sources.forEach(({ src: src2, type }) => {
          const source = document2.createElement("source");
          source.setAttribute("src", src2);
          source.setAttribute("type", type || "");
          source.addEventListener("error", sourceErrorEvent.trigger);
          el.appendChild(source);
        });
        el.load();
      });
      shared.tryOnScopeDispose(() => {
        const el = shared.resolveUnref(target);
        if (!el)
          return;
        el.querySelectorAll("source").forEach((e) => e.removeEventListener("error", sourceErrorEvent.trigger));
      });
      vueDemi.watch(volume, (vol) => {
        const el = shared.resolveUnref(target);
        if (!el)
          return;
        el.volume = vol;
      });
      vueDemi.watch(muted, (mute) => {
        const el = shared.resolveUnref(target);
        if (!el)
          return;
        el.muted = mute;
      });
      vueDemi.watch(rate, (rate2) => {
        const el = shared.resolveUnref(target);
        if (!el)
          return;
        el.playbackRate = rate2;
      });
      vueDemi.watchEffect(() => {
        if (!document2)
          return;
        const textTracks = shared.resolveUnref(options.tracks);
        const el = shared.resolveUnref(target);
        if (!textTracks || !textTracks.length || !el)
          return;
        el.querySelectorAll("track").forEach((e) => e.remove());
        textTracks.forEach(({ default: isDefault, kind, label, src, srcLang }, i) => {
          const track = document2.createElement("track");
          track.default = isDefault || false;
          track.kind = kind;
          track.label = label;
          track.src = src;
          track.srclang = srcLang;
          if (track.default)
            selectedTrack.value = i;
          el.appendChild(track);
        });
      });
      const { ignoreUpdates: ignoreCurrentTimeUpdates } = shared.watchIgnorable(currentTime, (time) => {
        const el = shared.resolveUnref(target);
        if (!el)
          return;
        el.currentTime = time;
      });
      const { ignoreUpdates: ignorePlayingUpdates } = shared.watchIgnorable(playing, (isPlaying) => {
        const el = shared.resolveUnref(target);
        if (!el)
          return;
        isPlaying ? el.play() : el.pause();
      });
      useEventListener(target, "timeupdate", () => ignoreCurrentTimeUpdates(() => currentTime.value = shared.resolveUnref(target).currentTime));
      useEventListener(target, "durationchange", () => duration.value = shared.resolveUnref(target).duration);
      useEventListener(target, "progress", () => buffered.value = timeRangeToArray(shared.resolveUnref(target).buffered));
      useEventListener(target, "seeking", () => seeking.value = true);
      useEventListener(target, "seeked", () => seeking.value = false);
      useEventListener(target, "waiting", () => waiting.value = true);
      useEventListener(target, "playing", () => waiting.value = false);
      useEventListener(target, "ratechange", () => rate.value = shared.resolveUnref(target).playbackRate);
      useEventListener(target, "stalled", () => stalled.value = true);
      useEventListener(target, "ended", () => ended.value = true);
      useEventListener(target, "pause", () => ignorePlayingUpdates(() => playing.value = false));
      useEventListener(target, "play", () => ignorePlayingUpdates(() => playing.value = true));
      useEventListener(target, "enterpictureinpicture", () => isPictureInPicture.value = true);
      useEventListener(target, "leavepictureinpicture", () => isPictureInPicture.value = false);
      useEventListener(target, "volumechange", () => {
        const el = shared.resolveUnref(target);
        if (!el)
          return;
        volume.value = el.volume;
        muted.value = el.muted;
      });
      const listeners = [];
      const stop = vueDemi.watch([target], () => {
        const el = shared.resolveUnref(target);
        if (!el)
          return;
        stop();
        listeners[0] = useEventListener(el.textTracks, "addtrack", () => tracks.value = tracksToArray(el.textTracks));
        listeners[1] = useEventListener(el.textTracks, "removetrack", () => tracks.value = tracksToArray(el.textTracks));
        listeners[2] = useEventListener(el.textTracks, "change", () => tracks.value = tracksToArray(el.textTracks));
      });
      shared.tryOnScopeDispose(() => listeners.forEach((listener) => listener()));
      return {
        currentTime,
        duration,
        waiting,
        seeking,
        ended,
        stalled,
        buffered,
        playing,
        rate,
        volume,
        muted,
        tracks,
        selectedTrack,
        enableTrack,
        disableTrack,
        supportsPictureInPicture,
        togglePictureInPicture,
        isPictureInPicture,
        onSourceError: sourceErrorEvent.on
      };
    }
    var getMapVue2Compat = () => {
      const data = vueDemi.reactive({});
      return {
        get: (key) => data[key],
        set: (key, value) => vueDemi.set(data, key, value),
        has: (key) => shared.hasOwn(data, key),
        delete: (key) => vueDemi.del(data, key),
        clear: () => {
          Object.keys(data).forEach((key) => {
            vueDemi.del(data, key);
          });
        }
      };
    };
    function useMemoize(resolver, options) {
      const initCache = () => {
        if (options == null ? void 0 : options.cache)
          return vueDemi.reactive(options.cache);
        if (vueDemi.isVue2)
          return getMapVue2Compat();
        return vueDemi.reactive(/* @__PURE__ */ new Map());
      };
      const cache = initCache();
      const generateKey = (...args) => (options == null ? void 0 : options.getKey) ? options.getKey(...args) : JSON.stringify(args);
      const _loadData = (key, ...args) => {
        cache.set(key, resolver(...args));
        return cache.get(key);
      };
      const loadData = (...args) => _loadData(generateKey(...args), ...args);
      const deleteData = (...args) => {
        cache.delete(generateKey(...args));
      };
      const clearData = () => {
        cache.clear();
      };
      const memoized = (...args) => {
        const key = generateKey(...args);
        if (cache.has(key))
          return cache.get(key);
        return _loadData(key, ...args);
      };
      memoized.load = loadData;
      memoized.delete = deleteData;
      memoized.clear = clearData;
      memoized.generateKey = generateKey;
      memoized.cache = cache;
      return memoized;
    }
    function useMemory(options = {}) {
      const memory = vueDemi.ref();
      const isSupported = useSupported(() => typeof performance !== "undefined" && "memory" in performance);
      if (isSupported.value) {
        const { interval = 1e3 } = options;
        shared.useIntervalFn(() => {
          memory.value = performance.memory;
        }, interval, { immediate: options.immediate, immediateCallback: options.immediateCallback });
      }
      return { isSupported, memory };
    }
    function useMounted() {
      const isMounted = vueDemi.ref(false);
      vueDemi.onMounted(() => {
        isMounted.value = true;
      });
      return isMounted;
    }
    function useMouse(options = {}) {
      const {
        type = "page",
        touch = true,
        resetOnTouchEnds = false,
        initialValue = { x: 0, y: 0 },
        window: window2 = defaultWindow,
        eventFilter
      } = options;
      const x = vueDemi.ref(initialValue.x);
      const y = vueDemi.ref(initialValue.y);
      const sourceType = vueDemi.ref(null);
      const mouseHandler = (event) => {
        if (type === "page") {
          x.value = event.pageX;
          y.value = event.pageY;
        } else if (type === "client") {
          x.value = event.clientX;
          y.value = event.clientY;
        }
        sourceType.value = "mouse";
      };
      const reset = () => {
        x.value = initialValue.x;
        y.value = initialValue.y;
      };
      const touchHandler = (event) => {
        if (event.touches.length > 0) {
          const touch2 = event.touches[0];
          if (type === "page") {
            x.value = touch2.pageX;
            y.value = touch2.pageY;
          } else if (type === "client") {
            x.value = touch2.clientX;
            y.value = touch2.clientY;
          }
          sourceType.value = "touch";
        }
      };
      const mouseHandlerWrapper = (event) => {
        return eventFilter === void 0 ? mouseHandler(event) : eventFilter(() => mouseHandler(event), {});
      };
      const touchHandlerWrapper = (event) => {
        return eventFilter === void 0 ? touchHandler(event) : eventFilter(() => touchHandler(event), {});
      };
      if (window2) {
        useEventListener(window2, "mousemove", mouseHandlerWrapper, { passive: true });
        useEventListener(window2, "dragover", mouseHandlerWrapper, { passive: true });
        if (touch) {
          useEventListener(window2, "touchstart", touchHandlerWrapper, { passive: true });
          useEventListener(window2, "touchmove", touchHandlerWrapper, { passive: true });
          if (resetOnTouchEnds)
            useEventListener(window2, "touchend", reset, { passive: true });
        }
      }
      return {
        x,
        y,
        sourceType
      };
    }
    function useMouseInElement(target, options = {}) {
      const {
        handleOutside = true,
        window: window2 = defaultWindow
      } = options;
      const { x, y, sourceType } = useMouse(options);
      const targetRef = vueDemi.ref(target != null ? target : window2 == null ? void 0 : window2.document.body);
      const elementX = vueDemi.ref(0);
      const elementY = vueDemi.ref(0);
      const elementPositionX = vueDemi.ref(0);
      const elementPositionY = vueDemi.ref(0);
      const elementHeight = vueDemi.ref(0);
      const elementWidth = vueDemi.ref(0);
      const isOutside = vueDemi.ref(true);
      let stop = () => {
      };
      if (window2) {
        stop = vueDemi.watch([targetRef, x, y], () => {
          const el = unrefElement(targetRef);
          if (!el)
            return;
          const {
            left,
            top,
            width,
            height
          } = el.getBoundingClientRect();
          elementPositionX.value = left + window2.pageXOffset;
          elementPositionY.value = top + window2.pageYOffset;
          elementHeight.value = height;
          elementWidth.value = width;
          const elX = x.value - elementPositionX.value;
          const elY = y.value - elementPositionY.value;
          isOutside.value = width === 0 || height === 0 || elX < 0 || elY < 0 || elX > width || elY > height;
          if (handleOutside || !isOutside.value) {
            elementX.value = elX;
            elementY.value = elY;
          }
        }, { immediate: true });
      }
      return {
        x,
        y,
        sourceType,
        elementX,
        elementY,
        elementPositionX,
        elementPositionY,
        elementHeight,
        elementWidth,
        isOutside,
        stop
      };
    }
    function useMousePressed(options = {}) {
      const {
        touch = true,
        drag = true,
        initialValue = false,
        window: window2 = defaultWindow
      } = options;
      const pressed = vueDemi.ref(initialValue);
      const sourceType = vueDemi.ref(null);
      if (!window2) {
        return {
          pressed,
          sourceType
        };
      }
      const onPressed = (srcType) => () => {
        pressed.value = true;
        sourceType.value = srcType;
      };
      const onReleased = () => {
        pressed.value = false;
        sourceType.value = null;
      };
      const target = vueDemi.computed(() => unrefElement(options.target) || window2);
      useEventListener(target, "mousedown", onPressed("mouse"), { passive: true });
      useEventListener(window2, "mouseleave", onReleased, { passive: true });
      useEventListener(window2, "mouseup", onReleased, { passive: true });
      if (drag) {
        useEventListener(target, "dragstart", onPressed("mouse"), { passive: true });
        useEventListener(window2, "drop", onReleased, { passive: true });
        useEventListener(window2, "dragend", onReleased, { passive: true });
      }
      if (touch) {
        useEventListener(target, "touchstart", onPressed("touch"), { passive: true });
        useEventListener(window2, "touchend", onReleased, { passive: true });
        useEventListener(window2, "touchcancel", onReleased, { passive: true });
      }
      return {
        pressed,
        sourceType
      };
    }
    var __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;
    var __hasOwnProp$7 = Object.prototype.hasOwnProperty;
    var __propIsEnum$7 = Object.prototype.propertyIsEnumerable;
    var __objRest$1 = (source, exclude) => {
      var target = {};
      for (var prop in source)
        if (__hasOwnProp$7.call(source, prop) && exclude.indexOf(prop) < 0)
          target[prop] = source[prop];
      if (source != null && __getOwnPropSymbols$7)
        for (var prop of __getOwnPropSymbols$7(source)) {
          if (exclude.indexOf(prop) < 0 && __propIsEnum$7.call(source, prop))
            target[prop] = source[prop];
        }
      return target;
    };
    function useMutationObserver(target, callback, options = {}) {
      const _a = options, { window: window2 = defaultWindow } = _a, mutationOptions = __objRest$1(_a, ["window"]);
      let observer;
      const isSupported = useSupported(() => window2 && "MutationObserver" in window2);
      const cleanup = () => {
        if (observer) {
          observer.disconnect();
          observer = void 0;
        }
      };
      const stopWatch = vueDemi.watch(() => unrefElement(target), (el) => {
        cleanup();
        if (isSupported.value && window2 && el) {
          observer = new MutationObserver(callback);
          observer.observe(el, mutationOptions);
        }
      }, { immediate: true });
      const stop = () => {
        cleanup();
        stopWatch();
      };
      shared.tryOnScopeDispose(stop);
      return {
        isSupported,
        stop
      };
    }
    var useNavigatorLanguage = (options = {}) => {
      const { window: window2 = defaultWindow } = options;
      const navigator = window2 == null ? void 0 : window2.navigator;
      const isSupported = useSupported(() => navigator && "language" in navigator);
      const language = vueDemi.ref(navigator == null ? void 0 : navigator.language);
      useEventListener(window2, "languagechange", () => {
        if (navigator)
          language.value = navigator.language;
      });
      return {
        isSupported,
        language
      };
    };
    function useNetwork(options = {}) {
      const { window: window2 = defaultWindow } = options;
      const navigator = window2 == null ? void 0 : window2.navigator;
      const isSupported = useSupported(() => navigator && "connection" in navigator);
      const isOnline = vueDemi.ref(true);
      const saveData = vueDemi.ref(false);
      const offlineAt = vueDemi.ref(void 0);
      const onlineAt = vueDemi.ref(void 0);
      const downlink = vueDemi.ref(void 0);
      const downlinkMax = vueDemi.ref(void 0);
      const rtt = vueDemi.ref(void 0);
      const effectiveType = vueDemi.ref(void 0);
      const type = vueDemi.ref("unknown");
      const connection = isSupported.value && navigator.connection;
      function updateNetworkInformation() {
        if (!navigator)
          return;
        isOnline.value = navigator.onLine;
        offlineAt.value = isOnline.value ? void 0 : Date.now();
        onlineAt.value = isOnline.value ? Date.now() : void 0;
        if (connection) {
          downlink.value = connection.downlink;
          downlinkMax.value = connection.downlinkMax;
          effectiveType.value = connection.effectiveType;
          rtt.value = connection.rtt;
          saveData.value = connection.saveData;
          type.value = connection.type;
        }
      }
      if (window2) {
        useEventListener(window2, "offline", () => {
          isOnline.value = false;
          offlineAt.value = Date.now();
        });
        useEventListener(window2, "online", () => {
          isOnline.value = true;
          onlineAt.value = Date.now();
        });
      }
      if (connection)
        useEventListener(connection, "change", updateNetworkInformation, false);
      updateNetworkInformation();
      return {
        isSupported,
        isOnline,
        saveData,
        offlineAt,
        onlineAt,
        downlink,
        downlinkMax,
        effectiveType,
        rtt,
        type
      };
    }
    var __defProp$6 = Object.defineProperty;
    var __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;
    var __hasOwnProp$6 = Object.prototype.hasOwnProperty;
    var __propIsEnum$6 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$6 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$6.call(b, prop))
          __defNormalProp$6(a, prop, b[prop]);
      if (__getOwnPropSymbols$6)
        for (var prop of __getOwnPropSymbols$6(b)) {
          if (__propIsEnum$6.call(b, prop))
            __defNormalProp$6(a, prop, b[prop]);
        }
      return a;
    };
    function useNow(options = {}) {
      const {
        controls: exposeControls = false,
        interval = "requestAnimationFrame"
      } = options;
      const now = vueDemi.ref(new Date());
      const update = () => now.value = new Date();
      const controls = interval === "requestAnimationFrame" ? useRafFn(update, { immediate: true }) : shared.useIntervalFn(update, interval, { immediate: true });
      if (exposeControls) {
        return __spreadValues$6({
          now
        }, controls);
      } else {
        return now;
      }
    }
    function useObjectUrl(object) {
      const url = vueDemi.ref();
      const release = () => {
        if (url.value)
          URL.revokeObjectURL(url.value);
        url.value = void 0;
      };
      vueDemi.watch(() => vueDemi.unref(object), (newObject) => {
        release();
        if (newObject)
          url.value = URL.createObjectURL(newObject);
      }, { immediate: true });
      shared.tryOnScopeDispose(release);
      return vueDemi.readonly(url);
    }
    function useClamp(value, min, max) {
      const _value = vueDemi.ref(value);
      return vueDemi.computed({
        get() {
          return _value.value = shared.clamp(_value.value, shared.resolveUnref(min), shared.resolveUnref(max));
        },
        set(value2) {
          _value.value = shared.clamp(value2, shared.resolveUnref(min), shared.resolveUnref(max));
        }
      });
    }
    function useOffsetPagination(options) {
      const {
        total = Infinity,
        pageSize = 10,
        page = 1,
        onPageChange = shared.noop,
        onPageSizeChange = shared.noop,
        onPageCountChange = shared.noop
      } = options;
      const currentPageSize = useClamp(pageSize, 1, Infinity);
      const pageCount = vueDemi.computed(() => Math.max(1, Math.ceil(vueDemi.unref(total) / vueDemi.unref(currentPageSize))));
      const currentPage = useClamp(page, 1, pageCount);
      const isFirstPage = vueDemi.computed(() => currentPage.value === 1);
      const isLastPage = vueDemi.computed(() => currentPage.value === pageCount.value);
      if (vueDemi.isRef(page))
        shared.syncRef(page, currentPage);
      if (vueDemi.isRef(pageSize))
        shared.syncRef(pageSize, currentPageSize);
      function prev() {
        currentPage.value--;
      }
      function next() {
        currentPage.value++;
      }
      const returnValue = {
        currentPage,
        currentPageSize,
        pageCount,
        isFirstPage,
        isLastPage,
        prev,
        next
      };
      vueDemi.watch(currentPage, () => {
        onPageChange(vueDemi.reactive(returnValue));
      });
      vueDemi.watch(currentPageSize, () => {
        onPageSizeChange(vueDemi.reactive(returnValue));
      });
      vueDemi.watch(pageCount, () => {
        onPageCountChange(vueDemi.reactive(returnValue));
      });
      return returnValue;
    }
    function useOnline(options = {}) {
      const { isOnline } = useNetwork(options);
      return isOnline;
    }
    function usePageLeave(options = {}) {
      const { window: window2 = defaultWindow } = options;
      const isLeft = vueDemi.ref(false);
      const handler = (event) => {
        if (!window2)
          return;
        event = event || window2.event;
        const from = event.relatedTarget || event.toElement;
        isLeft.value = !from;
      };
      if (window2) {
        useEventListener(window2, "mouseout", handler, { passive: true });
        useEventListener(window2.document, "mouseleave", handler, { passive: true });
        useEventListener(window2.document, "mouseenter", handler, { passive: true });
      }
      return isLeft;
    }
    function useParallax(target, options = {}) {
      const {
        deviceOrientationTiltAdjust = (i) => i,
        deviceOrientationRollAdjust = (i) => i,
        mouseTiltAdjust = (i) => i,
        mouseRollAdjust = (i) => i,
        window: window2 = defaultWindow
      } = options;
      const orientation = vueDemi.reactive(useDeviceOrientation({ window: window2 }));
      const {
        elementX: x,
        elementY: y,
        elementWidth: width,
        elementHeight: height
      } = useMouseInElement(target, { handleOutside: false, window: window2 });
      const source = vueDemi.computed(() => {
        if (orientation.isSupported && (orientation.alpha != null && orientation.alpha !== 0 || orientation.gamma != null && orientation.gamma !== 0))
          return "deviceOrientation";
        return "mouse";
      });
      const roll = vueDemi.computed(() => {
        if (source.value === "deviceOrientation") {
          const value = -orientation.beta / 90;
          return deviceOrientationRollAdjust(value);
        } else {
          const value = -(y.value - height.value / 2) / height.value;
          return mouseRollAdjust(value);
        }
      });
      const tilt = vueDemi.computed(() => {
        if (source.value === "deviceOrientation") {
          const value = orientation.gamma / 90;
          return deviceOrientationTiltAdjust(value);
        } else {
          const value = (x.value - width.value / 2) / width.value;
          return mouseTiltAdjust(value);
        }
      });
      return { roll, tilt, source };
    }
    var __defProp$5 = Object.defineProperty;
    var __defProps$1 = Object.defineProperties;
    var __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;
    var __hasOwnProp$5 = Object.prototype.hasOwnProperty;
    var __propIsEnum$5 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$5 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$5.call(b, prop))
          __defNormalProp$5(a, prop, b[prop]);
      if (__getOwnPropSymbols$5)
        for (var prop of __getOwnPropSymbols$5(b)) {
          if (__propIsEnum$5.call(b, prop))
            __defNormalProp$5(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));
    var defaultState = {
      x: 0,
      y: 0,
      pointerId: 0,
      pressure: 0,
      tiltX: 0,
      tiltY: 0,
      width: 0,
      height: 0,
      twist: 0,
      pointerType: null
    };
    var keys = Object.keys(defaultState);
    function usePointer(options = {}) {
      const {
        target = defaultWindow
      } = options;
      const isInside = vueDemi.ref(false);
      const state = vueDemi.ref(options.initialValue || {});
      Object.assign(state.value, defaultState, state.value);
      const handler = (event) => {
        isInside.value = true;
        if (options.pointerTypes && !options.pointerTypes.includes(event.pointerType))
          return;
        state.value = shared.objectPick(event, keys, false);
      };
      if (target) {
        useEventListener(target, "pointerdown", handler, { passive: true });
        useEventListener(target, "pointermove", handler, { passive: true });
        useEventListener(target, "pointerleave", () => isInside.value = false, { passive: true });
      }
      return __spreadProps$1(__spreadValues$5({}, shared.toRefs(state)), {
        isInside
      });
    }
    exports.SwipeDirection = void 0;
    (function(SwipeDirection2) {
      SwipeDirection2["UP"] = "UP";
      SwipeDirection2["RIGHT"] = "RIGHT";
      SwipeDirection2["DOWN"] = "DOWN";
      SwipeDirection2["LEFT"] = "LEFT";
      SwipeDirection2["NONE"] = "NONE";
    })(exports.SwipeDirection || (exports.SwipeDirection = {}));
    function useSwipe(target, options = {}) {
      const {
        threshold = 50,
        onSwipe,
        onSwipeEnd,
        onSwipeStart,
        passive = true,
        window: window2 = defaultWindow
      } = options;
      const coordsStart = vueDemi.reactive({ x: 0, y: 0 });
      const coordsEnd = vueDemi.reactive({ x: 0, y: 0 });
      const diffX = vueDemi.computed(() => coordsStart.x - coordsEnd.x);
      const diffY = vueDemi.computed(() => coordsStart.y - coordsEnd.y);
      const { max, abs } = Math;
      const isThresholdExceeded = vueDemi.computed(() => max(abs(diffX.value), abs(diffY.value)) >= threshold);
      const isSwiping = vueDemi.ref(false);
      const direction = vueDemi.computed(() => {
        if (!isThresholdExceeded.value)
          return exports.SwipeDirection.NONE;
        if (abs(diffX.value) > abs(diffY.value)) {
          return diffX.value > 0 ? exports.SwipeDirection.LEFT : exports.SwipeDirection.RIGHT;
        } else {
          return diffY.value > 0 ? exports.SwipeDirection.UP : exports.SwipeDirection.DOWN;
        }
      });
      const getTouchEventCoords = (e) => [e.touches[0].clientX, e.touches[0].clientY];
      const updateCoordsStart = (x, y) => {
        coordsStart.x = x;
        coordsStart.y = y;
      };
      const updateCoordsEnd = (x, y) => {
        coordsEnd.x = x;
        coordsEnd.y = y;
      };
      let listenerOptions;
      const isPassiveEventSupported = checkPassiveEventSupport(window2 == null ? void 0 : window2.document);
      if (!passive)
        listenerOptions = isPassiveEventSupported ? { passive: false, capture: true } : { capture: true };
      else
        listenerOptions = isPassiveEventSupported ? { passive: true } : { capture: false };
      const onTouchEnd = (e) => {
        if (isSwiping.value)
          onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);
        isSwiping.value = false;
      };
      const stops = [
        useEventListener(target, "touchstart", (e) => {
          if (listenerOptions.capture && !listenerOptions.passive)
            e.preventDefault();
          const [x, y] = getTouchEventCoords(e);
          updateCoordsStart(x, y);
          updateCoordsEnd(x, y);
          onSwipeStart == null ? void 0 : onSwipeStart(e);
        }, listenerOptions),
        useEventListener(target, "touchmove", (e) => {
          const [x, y] = getTouchEventCoords(e);
          updateCoordsEnd(x, y);
          if (!isSwiping.value && isThresholdExceeded.value)
            isSwiping.value = true;
          if (isSwiping.value)
            onSwipe == null ? void 0 : onSwipe(e);
        }, listenerOptions),
        useEventListener(target, "touchend", onTouchEnd, listenerOptions),
        useEventListener(target, "touchcancel", onTouchEnd, listenerOptions)
      ];
      const stop = () => stops.forEach((s) => s());
      return {
        isPassiveEventSupported,
        isSwiping,
        direction,
        coordsStart,
        coordsEnd,
        lengthX: diffX,
        lengthY: diffY,
        stop
      };
    }
    function checkPassiveEventSupport(document2) {
      if (!document2)
        return false;
      let supportsPassive = false;
      const optionsBlock = {
        get passive() {
          supportsPassive = true;
          return false;
        }
      };
      document2.addEventListener("x", shared.noop, optionsBlock);
      document2.removeEventListener("x", shared.noop);
      return supportsPassive;
    }
    function usePointerSwipe(target, options = {}) {
      const targetRef = shared.resolveRef(target);
      const {
        threshold = 50,
        onSwipe,
        onSwipeEnd,
        onSwipeStart
      } = options;
      const posStart = vueDemi.reactive({ x: 0, y: 0 });
      const updatePosStart = (x, y) => {
        posStart.x = x;
        posStart.y = y;
      };
      const posEnd = vueDemi.reactive({ x: 0, y: 0 });
      const updatePosEnd = (x, y) => {
        posEnd.x = x;
        posEnd.y = y;
      };
      const distanceX = vueDemi.computed(() => posStart.x - posEnd.x);
      const distanceY = vueDemi.computed(() => posStart.y - posEnd.y);
      const { max, abs } = Math;
      const isThresholdExceeded = vueDemi.computed(() => max(abs(distanceX.value), abs(distanceY.value)) >= threshold);
      const isSwiping = vueDemi.ref(false);
      const isPointerDown = vueDemi.ref(false);
      const direction = vueDemi.computed(() => {
        if (!isThresholdExceeded.value)
          return exports.SwipeDirection.NONE;
        if (abs(distanceX.value) > abs(distanceY.value)) {
          return distanceX.value > 0 ? exports.SwipeDirection.LEFT : exports.SwipeDirection.RIGHT;
        } else {
          return distanceY.value > 0 ? exports.SwipeDirection.UP : exports.SwipeDirection.DOWN;
        }
      });
      const filterEvent = (e) => {
        if (options.pointerTypes)
          return options.pointerTypes.includes(e.pointerType);
        return true;
      };
      const stops = [
        useEventListener(target, "pointerdown", (e) => {
          var _a, _b;
          if (!filterEvent(e))
            return;
          isPointerDown.value = true;
          (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty("touch-action", "none");
          const eventTarget = e.target;
          eventTarget == null ? void 0 : eventTarget.setPointerCapture(e.pointerId);
          const { clientX: x, clientY: y } = e;
          updatePosStart(x, y);
          updatePosEnd(x, y);
          onSwipeStart == null ? void 0 : onSwipeStart(e);
        }),
        useEventListener(target, "pointermove", (e) => {
          if (!filterEvent(e))
            return;
          if (!isPointerDown.value)
            return;
          const { clientX: x, clientY: y } = e;
          updatePosEnd(x, y);
          if (!isSwiping.value && isThresholdExceeded.value)
            isSwiping.value = true;
          if (isSwiping.value)
            onSwipe == null ? void 0 : onSwipe(e);
        }),
        useEventListener(target, "pointerup", (e) => {
          var _a, _b;
          if (!filterEvent(e))
            return;
          if (isSwiping.value)
            onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);
          isPointerDown.value = false;
          isSwiping.value = false;
          (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty("touch-action", "initial");
        })
      ];
      const stop = () => stops.forEach((s) => s());
      return {
        isSwiping: vueDemi.readonly(isSwiping),
        direction: vueDemi.readonly(direction),
        posStart: vueDemi.readonly(posStart),
        posEnd: vueDemi.readonly(posEnd),
        distanceX,
        distanceY,
        stop
      };
    }
    function usePreferredColorScheme(options) {
      const isLight = useMediaQuery("(prefers-color-scheme: light)", options);
      const isDark = useMediaQuery("(prefers-color-scheme: dark)", options);
      return vueDemi.computed(() => {
        if (isDark.value)
          return "dark";
        if (isLight.value)
          return "light";
        return "no-preference";
      });
    }
    function usePreferredContrast(options) {
      const isMore = useMediaQuery("(prefers-contrast: more)", options);
      const isLess = useMediaQuery("(prefers-contrast: less)", options);
      const isCustom = useMediaQuery("(prefers-contrast: custom)", options);
      return vueDemi.computed(() => {
        if (isMore.value)
          return "more";
        if (isLess.value)
          return "less";
        if (isCustom.value)
          return "custom";
        return "no-preference";
      });
    }
    function usePreferredLanguages(options = {}) {
      const { window: window2 = defaultWindow } = options;
      if (!window2)
        return vueDemi.ref(["en"]);
      const navigator = window2.navigator;
      const value = vueDemi.ref(navigator.languages);
      useEventListener(window2, "languagechange", () => {
        value.value = navigator.languages;
      });
      return value;
    }
    function usePreferredReducedMotion(options) {
      const isReduced = useMediaQuery("(prefers-reduced-motion: reduce)", options);
      return vueDemi.computed(() => {
        if (isReduced.value)
          return "reduce";
        return "no-preference";
      });
    }
    var useScreenOrientation = (options = {}) => {
      const {
        window: window2 = defaultWindow
      } = options;
      const isSupported = useSupported(() => window2 && "screen" in window2 && "orientation" in window2.screen);
      const screenOrientation = isSupported.value ? window2.screen.orientation : {};
      const orientation = vueDemi.ref(screenOrientation.type);
      const angle = vueDemi.ref(screenOrientation.angle || 0);
      if (isSupported.value) {
        useEventListener(window2, "orientationchange", () => {
          orientation.value = screenOrientation.type;
          angle.value = screenOrientation.angle;
        });
      }
      const lockOrientation = (type) => {
        if (!isSupported.value)
          return Promise.reject(new Error("Not supported"));
        return screenOrientation.lock(type);
      };
      const unlockOrientation = () => {
        if (isSupported.value)
          screenOrientation.unlock();
      };
      return {
        isSupported,
        orientation,
        angle,
        lockOrientation,
        unlockOrientation
      };
    };
    var topVarName = "--vueuse-safe-area-top";
    var rightVarName = "--vueuse-safe-area-right";
    var bottomVarName = "--vueuse-safe-area-bottom";
    var leftVarName = "--vueuse-safe-area-left";
    function useScreenSafeArea() {
      const top = vueDemi.ref("");
      const right = vueDemi.ref("");
      const bottom = vueDemi.ref("");
      const left = vueDemi.ref("");
      if (shared.isClient) {
        const topCssVar = useCssVar(topVarName);
        const rightCssVar = useCssVar(rightVarName);
        const bottomCssVar = useCssVar(bottomVarName);
        const leftCssVar = useCssVar(leftVarName);
        topCssVar.value = "env(safe-area-inset-top, 0px)";
        rightCssVar.value = "env(safe-area-inset-right, 0px)";
        bottomCssVar.value = "env(safe-area-inset-bottom, 0px)";
        leftCssVar.value = "env(safe-area-inset-left, 0px)";
        update();
        useEventListener("resize", shared.useDebounceFn(update));
      }
      function update() {
        top.value = getValue(topVarName);
        right.value = getValue(rightVarName);
        bottom.value = getValue(bottomVarName);
        left.value = getValue(leftVarName);
      }
      return {
        top,
        right,
        bottom,
        left,
        update
      };
    }
    function getValue(position) {
      return getComputedStyle(document.documentElement).getPropertyValue(position);
    }
    function useScriptTag(src, onLoaded = shared.noop, options = {}) {
      const {
        immediate = true,
        manual = false,
        type = "text/javascript",
        async = true,
        crossOrigin,
        referrerPolicy,
        noModule,
        defer,
        document: document2 = defaultDocument,
        attrs = {}
      } = options;
      const scriptTag = vueDemi.ref(null);
      let _promise = null;
      const loadScript = (waitForScriptLoad) => new Promise((resolve, reject) => {
        const resolveWithElement = (el2) => {
          scriptTag.value = el2;
          resolve(el2);
          return el2;
        };
        if (!document2) {
          resolve(false);
          return;
        }
        let shouldAppend = false;
        let el = document2.querySelector(`script[src="${shared.resolveUnref(src)}"]`);
        if (!el) {
          el = document2.createElement("script");
          el.type = type;
          el.async = async;
          el.src = shared.resolveUnref(src);
          if (defer)
            el.defer = defer;
          if (crossOrigin)
            el.crossOrigin = crossOrigin;
          if (noModule)
            el.noModule = noModule;
          if (referrerPolicy)
            el.referrerPolicy = referrerPolicy;
          Object.entries(attrs).forEach(([name, value]) => el == null ? void 0 : el.setAttribute(name, value));
          shouldAppend = true;
        } else if (el.hasAttribute("data-loaded")) {
          resolveWithElement(el);
        }
        el.addEventListener("error", (event) => reject(event));
        el.addEventListener("abort", (event) => reject(event));
        el.addEventListener("load", () => {
          el.setAttribute("data-loaded", "true");
          onLoaded(el);
          resolveWithElement(el);
        });
        if (shouldAppend)
          el = document2.head.appendChild(el);
        if (!waitForScriptLoad)
          resolveWithElement(el);
      });
      const load = (waitForScriptLoad = true) => {
        if (!_promise)
          _promise = loadScript(waitForScriptLoad);
        return _promise;
      };
      const unload = () => {
        if (!document2)
          return;
        _promise = null;
        if (scriptTag.value)
          scriptTag.value = null;
        const el = document2.querySelector(`script[src="${shared.resolveUnref(src)}"]`);
        if (el)
          document2.head.removeChild(el);
      };
      if (immediate && !manual)
        shared.tryOnMounted(load);
      if (!manual)
        shared.tryOnUnmounted(unload);
      return { scriptTag, load, unload };
    }
    function preventDefault(rawEvent) {
      const e = rawEvent || window.event;
      if (e.touches.length > 1)
        return true;
      if (e.preventDefault)
        e.preventDefault();
      return false;
    }
    function useScrollLock(element, initialState = false) {
      const isLocked = vueDemi.ref(initialState);
      let stopTouchMoveListener = null;
      let initialOverflow;
      vueDemi.watch(shared.resolveRef(element), (el) => {
        if (el) {
          const ele = el;
          initialOverflow = ele.style.overflow;
          if (isLocked.value)
            ele.style.overflow = "hidden";
        }
      }, {
        immediate: true
      });
      const lock = () => {
        const ele = shared.resolveUnref(element);
        if (!ele || isLocked.value)
          return;
        if (shared.isIOS) {
          stopTouchMoveListener = useEventListener(ele, "touchmove", preventDefault, { passive: false });
        }
        ele.style.overflow = "hidden";
        isLocked.value = true;
      };
      const unlock = () => {
        const ele = shared.resolveUnref(element);
        if (!ele || !isLocked.value)
          return;
        shared.isIOS && (stopTouchMoveListener == null ? void 0 : stopTouchMoveListener());
        ele.style.overflow = initialOverflow;
        isLocked.value = false;
      };
      shared.tryOnScopeDispose(unlock);
      return vueDemi.computed({
        get() {
          return isLocked.value;
        },
        set(v) {
          if (v)
            lock();
          else
            unlock();
        }
      });
    }
    function useSessionStorage(key, initialValue, options = {}) {
      const { window: window2 = defaultWindow } = options;
      return useStorage(key, initialValue, window2 == null ? void 0 : window2.sessionStorage, options);
    }
    var __defProp$4 = Object.defineProperty;
    var __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;
    var __hasOwnProp$4 = Object.prototype.hasOwnProperty;
    var __propIsEnum$4 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$4 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$4.call(b, prop))
          __defNormalProp$4(a, prop, b[prop]);
      if (__getOwnPropSymbols$4)
        for (var prop of __getOwnPropSymbols$4(b)) {
          if (__propIsEnum$4.call(b, prop))
            __defNormalProp$4(a, prop, b[prop]);
        }
      return a;
    };
    function useShare(shareOptions = {}, options = {}) {
      const { navigator = defaultNavigator } = options;
      const _navigator = navigator;
      const isSupported = useSupported(() => _navigator && "canShare" in _navigator);
      const share = async (overrideOptions = {}) => {
        if (isSupported.value) {
          const data = __spreadValues$4(__spreadValues$4({}, shared.resolveUnref(shareOptions)), shared.resolveUnref(overrideOptions));
          let granted = true;
          if (data.files && _navigator.canShare)
            granted = _navigator.canShare({ files: data.files });
          if (granted)
            return _navigator.share(data);
        }
      };
      return {
        isSupported,
        share
      };
    }
    function useSpeechRecognition(options = {}) {
      const {
        interimResults = true,
        continuous = true,
        window: window2 = defaultWindow
      } = options;
      const lang = shared.resolveRef(options.lang || "en-US");
      const isListening = vueDemi.ref(false);
      const isFinal = vueDemi.ref(false);
      const result = vueDemi.ref("");
      const error = vueDemi.shallowRef(void 0);
      const toggle = (value = !isListening.value) => {
        isListening.value = value;
      };
      const start = () => {
        isListening.value = true;
      };
      const stop = () => {
        isListening.value = false;
      };
      const SpeechRecognition = window2 && (window2.SpeechRecognition || window2.webkitSpeechRecognition);
      const isSupported = useSupported(() => SpeechRecognition);
      let recognition;
      if (isSupported.value) {
        recognition = new SpeechRecognition();
        recognition.continuous = continuous;
        recognition.interimResults = interimResults;
        recognition.lang = vueDemi.unref(lang);
        recognition.onstart = () => {
          isFinal.value = false;
        };
        vueDemi.watch(lang, (lang2) => {
          if (recognition && !isListening.value)
            recognition.lang = lang2;
        });
        recognition.onresult = (event) => {
          const transcript = Array.from(event.results).map((result2) => {
            isFinal.value = result2.isFinal;
            return result2[0];
          }).map((result2) => result2.transcript).join("");
          result.value = transcript;
          error.value = void 0;
        };
        recognition.onerror = (event) => {
          error.value = event;
        };
        recognition.onend = () => {
          isListening.value = false;
          recognition.lang = vueDemi.unref(lang);
        };
        vueDemi.watch(isListening, () => {
          if (isListening.value)
            recognition.start();
          else
            recognition.stop();
        });
      }
      shared.tryOnScopeDispose(() => {
        isListening.value = false;
      });
      return {
        isSupported,
        isListening,
        isFinal,
        recognition,
        result,
        error,
        toggle,
        start,
        stop
      };
    }
    function useSpeechSynthesis(text, options = {}) {
      const {
        pitch = 1,
        rate = 1,
        volume = 1,
        window: window2 = defaultWindow
      } = options;
      const synth = window2 && window2.speechSynthesis;
      const isSupported = useSupported(() => synth);
      const isPlaying = vueDemi.ref(false);
      const status = vueDemi.ref("init");
      const spokenText = shared.resolveRef(text || "");
      const lang = shared.resolveRef(options.lang || "en-US");
      const error = vueDemi.shallowRef(void 0);
      const toggle = (value = !isPlaying.value) => {
        isPlaying.value = value;
      };
      const bindEventsForUtterance = (utterance2) => {
        utterance2.lang = vueDemi.unref(lang);
        utterance2.voice = vueDemi.unref(options.voice) || null;
        utterance2.pitch = pitch;
        utterance2.rate = rate;
        utterance2.volume = volume;
        utterance2.onstart = () => {
          isPlaying.value = true;
          status.value = "play";
        };
        utterance2.onpause = () => {
          isPlaying.value = false;
          status.value = "pause";
        };
        utterance2.onresume = () => {
          isPlaying.value = true;
          status.value = "play";
        };
        utterance2.onend = () => {
          isPlaying.value = false;
          status.value = "end";
        };
        utterance2.onerror = (event) => {
          error.value = event;
        };
      };
      const utterance = vueDemi.computed(() => {
        isPlaying.value = false;
        status.value = "init";
        const newUtterance = new SpeechSynthesisUtterance(spokenText.value);
        bindEventsForUtterance(newUtterance);
        return newUtterance;
      });
      const speak = () => {
        synth.cancel();
        utterance && synth.speak(utterance.value);
      };
      if (isSupported.value) {
        bindEventsForUtterance(utterance.value);
        vueDemi.watch(lang, (lang2) => {
          if (utterance.value && !isPlaying.value)
            utterance.value.lang = lang2;
        });
        if (options.voice) {
          vueDemi.watch(options.voice, () => {
            synth.cancel();
          });
        }
        vueDemi.watch(isPlaying, () => {
          if (isPlaying.value)
            synth.resume();
          else
            synth.pause();
        });
      }
      shared.tryOnScopeDispose(() => {
        isPlaying.value = false;
      });
      return {
        isSupported,
        isPlaying,
        status,
        utterance,
        error,
        toggle,
        speak
      };
    }
    function useStepper(steps, initialStep) {
      const stepsRef = vueDemi.ref(steps);
      const stepNames = vueDemi.computed(() => Array.isArray(stepsRef.value) ? stepsRef.value : Object.keys(stepsRef.value));
      const index = vueDemi.ref(stepNames.value.indexOf(initialStep != null ? initialStep : stepNames.value[0]));
      const current = vueDemi.computed(() => at(index.value));
      const isFirst = vueDemi.computed(() => index.value === 0);
      const isLast = vueDemi.computed(() => index.value === stepNames.value.length - 1);
      const next = vueDemi.computed(() => stepNames.value[index.value + 1]);
      const previous = vueDemi.computed(() => stepNames.value[index.value - 1]);
      function at(index2) {
        if (Array.isArray(stepsRef.value))
          return stepsRef.value[index2];
        return stepsRef.value[stepNames.value[index2]];
      }
      function get(step) {
        if (!stepNames.value.includes(step))
          return;
        return at(stepNames.value.indexOf(step));
      }
      function goTo(step) {
        if (stepNames.value.includes(step))
          index.value = stepNames.value.indexOf(step);
      }
      function goToNext() {
        if (isLast.value)
          return;
        index.value++;
      }
      function goToPrevious() {
        if (isFirst.value)
          return;
        index.value--;
      }
      function goBackTo(step) {
        if (isAfter(step))
          goTo(step);
      }
      function isNext(step) {
        return stepNames.value.indexOf(step) === index.value + 1;
      }
      function isPrevious(step) {
        return stepNames.value.indexOf(step) === index.value - 1;
      }
      function isCurrent(step) {
        return stepNames.value.indexOf(step) === index.value;
      }
      function isBefore(step) {
        return index.value < stepNames.value.indexOf(step);
      }
      function isAfter(step) {
        return index.value > stepNames.value.indexOf(step);
      }
      return {
        steps: stepsRef,
        stepNames,
        index,
        current,
        next,
        previous,
        isFirst,
        isLast,
        at,
        get,
        goTo,
        goToNext,
        goToPrevious,
        goBackTo,
        isNext,
        isPrevious,
        isCurrent,
        isBefore,
        isAfter
      };
    }
    function useStorageAsync(key, initialValue, storage, options = {}) {
      var _a;
      const {
        flush = "pre",
        deep = true,
        listenToStorageChanges = true,
        writeDefaults = true,
        shallow,
        window: window2 = defaultWindow,
        eventFilter,
        onError = (e) => {
          console.error(e);
        }
      } = options;
      const rawInit = shared.resolveUnref(initialValue);
      const type = guessSerializerType(rawInit);
      const data = (shallow ? vueDemi.shallowRef : vueDemi.ref)(initialValue);
      const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];
      if (!storage) {
        try {
          storage = getSSRHandler("getDefaultStorage", () => {
            var _a2;
            return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;
          })();
        } catch (e) {
          onError(e);
        }
      }
      async function read(event) {
        if (!storage || event && event.key !== key)
          return;
        try {
          const rawValue = event ? event.newValue : await storage.getItem(key);
          if (rawValue == null) {
            data.value = rawInit;
            if (writeDefaults && rawInit !== null)
              await storage.setItem(key, await serializer.write(rawInit));
          } else {
            data.value = await serializer.read(rawValue);
          }
        } catch (e) {
          onError(e);
        }
      }
      read();
      if (window2 && listenToStorageChanges)
        useEventListener(window2, "storage", (e) => setTimeout(() => read(e), 0));
      if (storage) {
        shared.watchWithFilter(data, async () => {
          try {
            if (data.value == null)
              await storage.removeItem(key);
            else
              await storage.setItem(key, await serializer.write(data.value));
          } catch (e) {
            onError(e);
          }
        }, {
          flush,
          deep,
          eventFilter
        });
      }
      return data;
    }
    var _id = 0;
    function useStyleTag(css, options = {}) {
      const isLoaded = vueDemi.ref(false);
      const {
        document: document2 = defaultDocument,
        immediate = true,
        manual = false,
        id = `vueuse_styletag_${++_id}`
      } = options;
      const cssRef = vueDemi.ref(css);
      let stop = () => {
      };
      const load = () => {
        if (!document2)
          return;
        const el = document2.getElementById(id) || document2.createElement("style");
        el.type = "text/css";
        el.id = id;
        if (options.media)
          el.media = options.media;
        document2.head.appendChild(el);
        if (isLoaded.value)
          return;
        stop = vueDemi.watch(cssRef, (value) => {
          el.innerText = value;
        }, { immediate: true });
        isLoaded.value = true;
      };
      const unload = () => {
        if (!document2 || !isLoaded.value)
          return;
        stop();
        document2.head.removeChild(document2.getElementById(id));
        isLoaded.value = false;
      };
      if (immediate && !manual)
        shared.tryOnMounted(load);
      if (!manual)
        shared.tryOnScopeDispose(unload);
      return {
        id,
        css: cssRef,
        unload,
        load,
        isLoaded: vueDemi.readonly(isLoaded)
      };
    }
    function useTemplateRefsList() {
      const refs = vueDemi.ref([]);
      refs.value.set = (el) => {
        if (el)
          refs.value.push(el);
      };
      vueDemi.onBeforeUpdate(() => {
        refs.value.length = 0;
      });
      return refs;
    }
    function useTextDirection(options = {}) {
      const {
        document: document2 = defaultDocument,
        selector = "html",
        observe = false,
        initialValue = "ltr"
      } = options;
      function getValue2() {
        var _a, _b;
        return (_b = (_a = document2 == null ? void 0 : document2.querySelector(selector)) == null ? void 0 : _a.getAttribute("dir")) != null ? _b : initialValue;
      }
      const dir = vueDemi.ref(getValue2());
      shared.tryOnMounted(() => dir.value = getValue2());
      if (observe && document2) {
        useMutationObserver(document2.querySelector(selector), () => dir.value = getValue2(), { attributes: true });
      }
      return vueDemi.computed({
        get() {
          return dir.value;
        },
        set(v) {
          var _a, _b;
          dir.value = v;
          if (!document2)
            return;
          if (dir.value)
            (_a = document2.querySelector(selector)) == null ? void 0 : _a.setAttribute("dir", dir.value);
          else
            (_b = document2.querySelector(selector)) == null ? void 0 : _b.removeAttribute("dir");
        }
      });
    }
    function getRangesFromSelection(selection) {
      var _a;
      const rangeCount = (_a = selection.rangeCount) != null ? _a : 0;
      const ranges = new Array(rangeCount);
      for (let i = 0; i < rangeCount; i++) {
        const range = selection.getRangeAt(i);
        ranges[i] = range;
      }
      return ranges;
    }
    function useTextSelection(options = {}) {
      const {
        window: window2 = defaultWindow
      } = options;
      const selection = vueDemi.ref(null);
      const text = vueDemi.computed(() => {
        var _a, _b;
        return (_b = (_a = selection.value) == null ? void 0 : _a.toString()) != null ? _b : "";
      });
      const ranges = vueDemi.computed(() => selection.value ? getRangesFromSelection(selection.value) : []);
      const rects = vueDemi.computed(() => ranges.value.map((range) => range.getBoundingClientRect()));
      function onSelectionChange() {
        selection.value = null;
        if (window2)
          selection.value = window2.getSelection();
      }
      if (window2)
        useEventListener(window2.document, "selectionchange", onSelectionChange);
      return {
        text,
        rects,
        ranges,
        selection
      };
    }
    function useTextareaAutosize(options) {
      const textarea = vueDemi.ref(options == null ? void 0 : options.element);
      const input = vueDemi.ref(options == null ? void 0 : options.input);
      function triggerResize() {
        var _a, _b;
        if (!textarea.value)
          return;
        textarea.value.style.height = "1px";
        textarea.value.style.height = `${(_a = textarea.value) == null ? void 0 : _a.scrollHeight}px`;
        (_b = options == null ? void 0 : options.onResize) == null ? void 0 : _b.call(options);
      }
      vueDemi.watch([input, textarea], triggerResize, { immediate: true });
      if (options == null ? void 0 : options.watch)
        vueDemi.watch(options.watch, triggerResize, { immediate: true, deep: true });
      return {
        textarea,
        input,
        triggerResize
      };
    }
    var __defProp$3 = Object.defineProperty;
    var __defProps = Object.defineProperties;
    var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
    var __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;
    var __hasOwnProp$3 = Object.prototype.hasOwnProperty;
    var __propIsEnum$3 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$3 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$3.call(b, prop))
          __defNormalProp$3(a, prop, b[prop]);
      if (__getOwnPropSymbols$3)
        for (var prop of __getOwnPropSymbols$3(b)) {
          if (__propIsEnum$3.call(b, prop))
            __defNormalProp$3(a, prop, b[prop]);
        }
      return a;
    };
    var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
    function useThrottledRefHistory(source, options = {}) {
      const { throttle = 200, trailing = true } = options;
      const filter = shared.throttleFilter(throttle, trailing);
      const history = useRefHistory(source, __spreadProps(__spreadValues$3({}, options), { eventFilter: filter }));
      return __spreadValues$3({}, history);
    }
    var __defProp$2 = Object.defineProperty;
    var __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;
    var __hasOwnProp$2 = Object.prototype.hasOwnProperty;
    var __propIsEnum$2 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$2 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$2.call(b, prop))
          __defNormalProp$2(a, prop, b[prop]);
      if (__getOwnPropSymbols$2)
        for (var prop of __getOwnPropSymbols$2(b)) {
          if (__propIsEnum$2.call(b, prop))
            __defNormalProp$2(a, prop, b[prop]);
        }
      return a;
    };
    var __objRest = (source, exclude) => {
      var target = {};
      for (var prop in source)
        if (__hasOwnProp$2.call(source, prop) && exclude.indexOf(prop) < 0)
          target[prop] = source[prop];
      if (source != null && __getOwnPropSymbols$2)
        for (var prop of __getOwnPropSymbols$2(source)) {
          if (exclude.indexOf(prop) < 0 && __propIsEnum$2.call(source, prop))
            target[prop] = source[prop];
        }
      return target;
    };
    var UNITS = [
      { max: 6e4, value: 1e3, name: "second" },
      { max: 276e4, value: 6e4, name: "minute" },
      { max: 72e6, value: 36e5, name: "hour" },
      { max: 5184e5, value: 864e5, name: "day" },
      { max: 24192e5, value: 6048e5, name: "week" },
      { max: 28512e6, value: 2592e6, name: "month" },
      { max: Infinity, value: 31536e6, name: "year" }
    ];
    var DEFAULT_MESSAGES = {
      justNow: "just now",
      past: (n) => n.match(/\d/) ? `${n} ago` : n,
      future: (n) => n.match(/\d/) ? `in ${n}` : n,
      month: (n, past) => n === 1 ? past ? "last month" : "next month" : `${n} month${n > 1 ? "s" : ""}`,
      year: (n, past) => n === 1 ? past ? "last year" : "next year" : `${n} year${n > 1 ? "s" : ""}`,
      day: (n, past) => n === 1 ? past ? "yesterday" : "tomorrow" : `${n} day${n > 1 ? "s" : ""}`,
      week: (n, past) => n === 1 ? past ? "last week" : "next week" : `${n} week${n > 1 ? "s" : ""}`,
      hour: (n) => `${n} hour${n > 1 ? "s" : ""}`,
      minute: (n) => `${n} minute${n > 1 ? "s" : ""}`,
      second: (n) => `${n} second${n > 1 ? "s" : ""}`
    };
    var DEFAULT_FORMATTER = (date) => date.toISOString().slice(0, 10);
    function useTimeAgo(time, options = {}) {
      const {
        controls: exposeControls = false,
        max,
        updateInterval = 3e4,
        messages = DEFAULT_MESSAGES,
        fullDateFormatter = DEFAULT_FORMATTER,
        showSecond = false
      } = options;
      const { abs, round } = Math;
      const _a = useNow({ interval: updateInterval, controls: true }), { now } = _a, controls = __objRest(_a, ["now"]);
      function getTimeago(from, now2) {
        var _a2;
        const diff = +now2 - +from;
        const absDiff = abs(diff);
        if (absDiff < 6e4 && !showSecond)
          return messages.justNow;
        if (typeof max === "number" && absDiff > max)
          return fullDateFormatter(new Date(from));
        if (typeof max === "string") {
          const unitMax = (_a2 = UNITS.find((i) => i.name === max)) == null ? void 0 : _a2.max;
          if (unitMax && absDiff > unitMax)
            return fullDateFormatter(new Date(from));
        }
        for (const unit of UNITS) {
          if (absDiff < unit.max)
            return format(diff, unit);
        }
      }
      function applyFormat(name, val, isPast) {
        const formatter = messages[name];
        if (typeof formatter === "function")
          return formatter(val, isPast);
        return formatter.replace("{0}", val.toString());
      }
      function format(diff, unit) {
        const val = round(abs(diff) / unit.value);
        const past = diff > 0;
        const str = applyFormat(unit.name, val, past);
        return applyFormat(past ? "past" : "future", str, past);
      }
      const timeAgo = vueDemi.computed(() => getTimeago(new Date(shared.resolveUnref(time)), vueDemi.unref(now.value)));
      if (exposeControls) {
        return __spreadValues$2({
          timeAgo
        }, controls);
      } else {
        return timeAgo;
      }
    }
    function useTimeoutPoll(fn, interval, timeoutPollOptions) {
      const { start } = shared.useTimeoutFn(loop, interval);
      const isActive = vueDemi.ref(false);
      async function loop() {
        if (!isActive.value)
          return;
        await fn();
        start();
      }
      function resume() {
        if (!isActive.value) {
          isActive.value = true;
          loop();
        }
      }
      function pause() {
        isActive.value = false;
      }
      if (timeoutPollOptions == null ? void 0 : timeoutPollOptions.immediate)
        resume();
      shared.tryOnScopeDispose(pause);
      return {
        isActive,
        pause,
        resume
      };
    }
    var __defProp$1 = Object.defineProperty;
    var __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;
    var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
    var __propIsEnum$1 = Object.prototype.propertyIsEnumerable;
    var __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues$1 = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp$1.call(b, prop))
          __defNormalProp$1(a, prop, b[prop]);
      if (__getOwnPropSymbols$1)
        for (var prop of __getOwnPropSymbols$1(b)) {
          if (__propIsEnum$1.call(b, prop))
            __defNormalProp$1(a, prop, b[prop]);
        }
      return a;
    };
    function useTimestamp(options = {}) {
      const {
        controls: exposeControls = false,
        offset = 0,
        immediate = true,
        interval = "requestAnimationFrame",
        callback
      } = options;
      const ts = vueDemi.ref(shared.timestamp() + offset);
      const update = () => ts.value = shared.timestamp() + offset;
      const cb = callback ? () => {
        update();
        callback(ts.value);
      } : update;
      const controls = interval === "requestAnimationFrame" ? useRafFn(cb, { immediate }) : shared.useIntervalFn(cb, interval, { immediate });
      if (exposeControls) {
        return __spreadValues$1({
          timestamp: ts
        }, controls);
      } else {
        return ts;
      }
    }
    function useTitle(newTitle = null, options = {}) {
      var _a, _b;
      const {
        document: document2 = defaultDocument,
        observe = false,
        titleTemplate = "%s"
      } = options;
      const title = shared.resolveRef((_a = newTitle != null ? newTitle : document2 == null ? void 0 : document2.title) != null ? _a : null);
      const isReadonly = newTitle && shared.isFunction(newTitle);
      function format(t) {
        return shared.isFunction(titleTemplate) ? titleTemplate(t) : vueDemi.unref(titleTemplate).replace("%s", t);
      }
      vueDemi.watch(title, (t, o) => {
        if (shared.isString(t) && t !== o && document2)
          document2.title = format(t);
      }, { immediate: true });
      if (observe && document2 && !isReadonly) {
        useMutationObserver((_b = document2.head) == null ? void 0 : _b.querySelector("title"), () => {
          if (document2 && document2.title !== title.value)
            title.value = format(document2.title);
        }, { childList: true });
      }
      return title;
    }
    var __defProp = Object.defineProperty;
    var __getOwnPropSymbols = Object.getOwnPropertySymbols;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __propIsEnum = Object.prototype.propertyIsEnumerable;
    var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
    var __spreadValues = (a, b) => {
      for (var prop in b || (b = {}))
        if (__hasOwnProp.call(b, prop))
          __defNormalProp(a, prop, b[prop]);
      if (__getOwnPropSymbols)
        for (var prop of __getOwnPropSymbols(b)) {
          if (__propIsEnum.call(b, prop))
            __defNormalProp(a, prop, b[prop]);
        }
      return a;
    };
    var _TransitionPresets = {
      easeInSine: [0.12, 0, 0.39, 0],
      easeOutSine: [0.61, 1, 0.88, 1],
      easeInOutSine: [0.37, 0, 0.63, 1],
      easeInQuad: [0.11, 0, 0.5, 0],
      easeOutQuad: [0.5, 1, 0.89, 1],
      easeInOutQuad: [0.45, 0, 0.55, 1],
      easeInCubic: [0.32, 0, 0.67, 0],
      easeOutCubic: [0.33, 1, 0.68, 1],
      easeInOutCubic: [0.65, 0, 0.35, 1],
      easeInQuart: [0.5, 0, 0.75, 0],
      easeOutQuart: [0.25, 1, 0.5, 1],
      easeInOutQuart: [0.76, 0, 0.24, 1],
      easeInQuint: [0.64, 0, 0.78, 0],
      easeOutQuint: [0.22, 1, 0.36, 1],
      easeInOutQuint: [0.83, 0, 0.17, 1],
      easeInExpo: [0.7, 0, 0.84, 0],
      easeOutExpo: [0.16, 1, 0.3, 1],
      easeInOutExpo: [0.87, 0, 0.13, 1],
      easeInCirc: [0.55, 0, 1, 0.45],
      easeOutCirc: [0, 0.55, 0.45, 1],
      easeInOutCirc: [0.85, 0, 0.15, 1],
      easeInBack: [0.36, 0, 0.66, -0.56],
      easeOutBack: [0.34, 1.56, 0.64, 1],
      easeInOutBack: [0.68, -0.6, 0.32, 1.6]
    };
    var TransitionPresets = __spreadValues({
      linear: shared.identity
    }, _TransitionPresets);
    function createEasingFunction([p0, p1, p2, p3]) {
      const a = (a1, a2) => 1 - 3 * a2 + 3 * a1;
      const b = (a1, a2) => 3 * a2 - 6 * a1;
      const c = (a1) => 3 * a1;
      const calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;
      const getSlope = (t, a1, a2) => 3 * a(a1, a2) * t * t + 2 * b(a1, a2) * t + c(a1);
      const getTforX = (x) => {
        let aGuessT = x;
        for (let i = 0; i < 4; ++i) {
          const currentSlope = getSlope(aGuessT, p0, p2);
          if (currentSlope === 0)
            return aGuessT;
          const currentX = calcBezier(aGuessT, p0, p2) - x;
          aGuessT -= currentX / currentSlope;
        }
        return aGuessT;
      };
      return (x) => p0 === p1 && p2 === p3 ? x : calcBezier(getTforX(x), p1, p3);
    }
    function useTransition(source, options = {}) {
      const {
        delay = 0,
        disabled = false,
        duration = 1e3,
        onFinished = shared.noop,
        onStarted = shared.noop,
        transition = shared.identity
      } = options;
      const currentTransition = vueDemi.computed(() => {
        const t = vueDemi.unref(transition);
        return shared.isFunction(t) ? t : createEasingFunction(t);
      });
      const sourceValue = vueDemi.computed(() => {
        const s = vueDemi.unref(source);
        return shared.isNumber(s) ? s : s.map(vueDemi.unref);
      });
      const sourceVector = vueDemi.computed(() => shared.isNumber(sourceValue.value) ? [sourceValue.value] : sourceValue.value);
      const outputVector = vueDemi.ref(sourceVector.value.slice(0));
      let currentDuration;
      let diffVector;
      let endAt;
      let startAt;
      let startVector;
      const { resume, pause } = useRafFn(() => {
        const now = Date.now();
        const progress = shared.clamp(1 - (endAt - now) / currentDuration, 0, 1);
        outputVector.value = startVector.map((val, i) => {
          var _a;
          return val + ((_a = diffVector[i]) != null ? _a : 0) * currentTransition.value(progress);
        });
        if (progress >= 1) {
          pause();
          onFinished();
        }
      }, { immediate: false });
      const start = () => {
        pause();
        currentDuration = vueDemi.unref(duration);
        diffVector = outputVector.value.map((n, i) => {
          var _a, _b;
          return ((_a = sourceVector.value[i]) != null ? _a : 0) - ((_b = outputVector.value[i]) != null ? _b : 0);
        });
        startVector = outputVector.value.slice(0);
        startAt = Date.now();
        endAt = startAt + currentDuration;
        resume();
        onStarted();
      };
      const timeout = shared.useTimeoutFn(start, delay, { immediate: false });
      vueDemi.watch(sourceVector, () => {
        if (vueDemi.unref(disabled)) {
          outputVector.value = sourceVector.value.slice(0);
        } else {
          if (vueDemi.unref(delay) <= 0)
            start();
          else
            timeout.start();
        }
      }, { deep: true });
      return vueDemi.computed(() => {
        const targetVector = vueDemi.unref(disabled) ? sourceVector : outputVector;
        return shared.isNumber(sourceValue.value) ? targetVector.value[0] : targetVector.value;
      });
    }
    function useUrlSearchParams(mode = "history", options = {}) {
      const {
        initialValue = {},
        removeNullishValues = true,
        removeFalsyValues = false,
        write: enableWrite = true,
        window: window2 = defaultWindow
      } = options;
      if (!window2)
        return vueDemi.reactive(initialValue);
      const state = vueDemi.reactive({});
      function getRawParams() {
        if (mode === "history") {
          return window2.location.search || "";
        } else if (mode === "hash") {
          const hash = window2.location.hash || "";
          const index = hash.indexOf("?");
          return index > 0 ? hash.slice(index) : "";
        } else {
          return (window2.location.hash || "").replace(/^#/, "");
        }
      }
      function constructQuery(params) {
        const stringified = params.toString();
        if (mode === "history")
          return `${stringified ? `?${stringified}` : ""}${window2.location.hash || ""}`;
        if (mode === "hash-params")
          return `${window2.location.search || ""}${stringified ? `#${stringified}` : ""}`;
        const hash = window2.location.hash || "#";
        const index = hash.indexOf("?");
        if (index > 0)
          return `${hash.slice(0, index)}${stringified ? `?${stringified}` : ""}`;
        return `${hash}${stringified ? `?${stringified}` : ""}`;
      }
      function read() {
        return new URLSearchParams(getRawParams());
      }
      function updateState(params) {
        const unusedKeys = new Set(Object.keys(state));
        for (const key of params.keys()) {
          const paramsForKey = params.getAll(key);
          state[key] = paramsForKey.length > 1 ? paramsForKey : params.get(key) || "";
          unusedKeys.delete(key);
        }
        Array.from(unusedKeys).forEach((key) => delete state[key]);
      }
      const { pause, resume } = shared.pausableWatch(state, () => {
        const params = new URLSearchParams("");
        Object.keys(state).forEach((key) => {
          const mapEntry = state[key];
          if (Array.isArray(mapEntry))
            mapEntry.forEach((value) => params.append(key, value));
          else if (removeNullishValues && mapEntry == null)
            params.delete(key);
          else if (removeFalsyValues && !mapEntry)
            params.delete(key);
          else
            params.set(key, mapEntry);
        });
        write(params);
      }, { deep: true });
      function write(params, shouldUpdate) {
        pause();
        if (shouldUpdate)
          updateState(params);
        window2.history.replaceState(window2.history.state, window2.document.title, window2.location.pathname + constructQuery(params));
        resume();
      }
      function onChanged() {
        if (!enableWrite)
          return;
        write(read(), true);
      }
      useEventListener(window2, "popstate", onChanged, false);
      if (mode !== "history")
        useEventListener(window2, "hashchange", onChanged, false);
      const initial = read();
      if (initial.keys().next().value)
        updateState(initial);
      else
        Object.assign(state, initialValue);
      return state;
    }
    function useUserMedia(options = {}) {
      var _a, _b;
      const enabled = vueDemi.ref((_a = options.enabled) != null ? _a : false);
      const autoSwitch = vueDemi.ref((_b = options.autoSwitch) != null ? _b : true);
      const videoDeviceId = vueDemi.ref(options.videoDeviceId);
      const audioDeviceId = vueDemi.ref(options.audioDeviceId);
      const { navigator = defaultNavigator } = options;
      const isSupported = useSupported(() => {
        var _a2;
        return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getUserMedia;
      });
      const stream = vueDemi.shallowRef();
      function getDeviceOptions(device) {
        if (device.value === "none" || device.value === false)
          return false;
        if (device.value == null)
          return true;
        return {
          deviceId: device.value
        };
      }
      async function _start() {
        if (!isSupported.value || stream.value)
          return;
        stream.value = await navigator.mediaDevices.getUserMedia({
          video: getDeviceOptions(videoDeviceId),
          audio: getDeviceOptions(audioDeviceId)
        });
        return stream.value;
      }
      async function _stop() {
        var _a2;
        (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());
        stream.value = void 0;
      }
      function stop() {
        _stop();
        enabled.value = false;
      }
      async function start() {
        await _start();
        if (stream.value)
          enabled.value = true;
        return stream.value;
      }
      async function restart() {
        _stop();
        return await start();
      }
      vueDemi.watch(enabled, (v) => {
        if (v)
          _start();
        else
          _stop();
      }, { immediate: true });
      vueDemi.watch([videoDeviceId, audioDeviceId], () => {
        if (autoSwitch.value && stream.value)
          restart();
      }, { immediate: true });
      return {
        isSupported,
        stream,
        start,
        stop,
        restart,
        videoDeviceId,
        audioDeviceId,
        enabled,
        autoSwitch
      };
    }
    function useVModel(props, key, emit, options = {}) {
      var _a, _b, _c, _d, _e;
      const {
        clone = false,
        passive = false,
        eventName,
        deep = false,
        defaultValue
      } = options;
      const vm = vueDemi.getCurrentInstance();
      const _emit = emit || (vm == null ? void 0 : vm.emit) || ((_a = vm == null ? void 0 : vm.$emit) == null ? void 0 : _a.bind(vm)) || ((_c = (_b = vm == null ? void 0 : vm.proxy) == null ? void 0 : _b.$emit) == null ? void 0 : _c.bind(vm == null ? void 0 : vm.proxy));
      let event = eventName;
      if (!key) {
        if (vueDemi.isVue2) {
          const modelOptions = (_e = (_d = vm == null ? void 0 : vm.proxy) == null ? void 0 : _d.$options) == null ? void 0 : _e.model;
          key = (modelOptions == null ? void 0 : modelOptions.value) || "value";
          if (!eventName)
            event = (modelOptions == null ? void 0 : modelOptions.event) || "input";
        } else {
          key = "modelValue";
        }
      }
      event = eventName || event || `update:${key.toString()}`;
      const cloneFn = (val) => !clone ? val : shared.isFunction(clone) ? clone(val) : cloneFnJSON(val);
      const getValue2 = () => shared.isDef(props[key]) ? cloneFn(props[key]) : defaultValue;
      if (passive) {
        const initialValue = getValue2();
        const proxy = vueDemi.ref(initialValue);
        vueDemi.watch(() => props[key], (v) => proxy.value = cloneFn(v));
        vueDemi.watch(proxy, (v) => {
          if (v !== props[key] || deep)
            _emit(event, v);
        }, { deep });
        return proxy;
      } else {
        return vueDemi.computed({
          get() {
            return getValue2();
          },
          set(value) {
            _emit(event, value);
          }
        });
      }
    }
    function useVModels(props, emit, options = {}) {
      const ret = {};
      for (const key in props)
        ret[key] = useVModel(props, key, emit, options);
      return ret;
    }
    function useVibrate(options) {
      const {
        pattern = [],
        interval = 0,
        navigator = defaultNavigator
      } = options || {};
      const isSupported = useSupported(() => typeof navigator !== "undefined" && "vibrate" in navigator);
      const patternRef = shared.resolveRef(pattern);
      let intervalControls;
      const vibrate = (pattern2 = patternRef.value) => {
        if (isSupported.value)
          navigator.vibrate(pattern2);
      };
      const stop = () => {
        if (isSupported.value)
          navigator.vibrate(0);
        intervalControls == null ? void 0 : intervalControls.pause();
      };
      if (interval > 0) {
        intervalControls = shared.useIntervalFn(vibrate, interval, {
          immediate: false,
          immediateCallback: false
        });
      }
      return {
        isSupported,
        pattern,
        intervalControls,
        vibrate,
        stop
      };
    }
    function useVirtualList(list, options) {
      const containerRef = vueDemi.ref();
      const size = useElementSize(containerRef);
      const currentList = vueDemi.ref([]);
      const source = vueDemi.shallowRef(list);
      const state = vueDemi.ref({ start: 0, end: 10 });
      const { itemHeight, overscan = 5 } = options;
      const getViewCapacity = (containerHeight) => {
        if (typeof itemHeight === "number")
          return Math.ceil(containerHeight / itemHeight);
        const { start = 0 } = state.value;
        let sum = 0;
        let capacity = 0;
        for (let i = start; i < source.value.length; i++) {
          const height = itemHeight(i);
          sum += height;
          if (sum >= containerHeight) {
            capacity = i;
            break;
          }
        }
        return capacity - start;
      };
      const getOffset = (scrollTop) => {
        if (typeof itemHeight === "number")
          return Math.floor(scrollTop / itemHeight) + 1;
        let sum = 0;
        let offset = 0;
        for (let i = 0; i < source.value.length; i++) {
          const height = itemHeight(i);
          sum += height;
          if (sum >= scrollTop) {
            offset = i;
            break;
          }
        }
        return offset + 1;
      };
      const calculateRange = () => {
        const element = containerRef.value;
        if (element) {
          const offset = getOffset(element.scrollTop);
          const viewCapacity = getViewCapacity(element.clientHeight);
          const from = offset - overscan;
          const to = offset + viewCapacity + overscan;
          state.value = {
            start: from < 0 ? 0 : from,
            end: to > source.value.length ? source.value.length : to
          };
          currentList.value = source.value.slice(state.value.start, state.value.end).map((ele, index) => ({
            data: ele,
            index: index + state.value.start
          }));
        }
      };
      vueDemi.watch([size.width, size.height, list], () => {
        calculateRange();
      });
      const totalHeight = vueDemi.computed(() => {
        if (typeof itemHeight === "number")
          return source.value.length * itemHeight;
        return source.value.reduce((sum, _, index) => sum + itemHeight(index), 0);
      });
      const getDistanceTop = (index) => {
        if (typeof itemHeight === "number") {
          const height2 = index * itemHeight;
          return height2;
        }
        const height = source.value.slice(0, index).reduce((sum, _, i) => sum + itemHeight(i), 0);
        return height;
      };
      const scrollTo = (index) => {
        if (containerRef.value) {
          containerRef.value.scrollTop = getDistanceTop(index);
          calculateRange();
        }
      };
      const offsetTop = vueDemi.computed(() => getDistanceTop(state.value.start));
      const wrapperProps = vueDemi.computed(() => {
        return {
          style: {
            width: "100%",
            height: `${totalHeight.value - offsetTop.value}px`,
            marginTop: `${offsetTop.value}px`
          }
        };
      });
      const containerStyle = { overflowY: "auto" };
      return {
        list: currentList,
        scrollTo,
        containerProps: {
          ref: containerRef,
          onScroll: () => {
            calculateRange();
          },
          style: containerStyle
        },
        wrapperProps
      };
    }
    var useWakeLock = (options = {}) => {
      const {
        navigator = defaultNavigator,
        document: document2 = defaultDocument
      } = options;
      let wakeLock;
      const isSupported = useSupported(() => navigator && "wakeLock" in navigator);
      const isActive = vueDemi.ref(false);
      async function onVisibilityChange() {
        if (!isSupported.value || !wakeLock)
          return;
        if (document2 && document2.visibilityState === "visible")
          wakeLock = await navigator.wakeLock.request("screen");
        isActive.value = !wakeLock.released;
      }
      if (document2)
        useEventListener(document2, "visibilitychange", onVisibilityChange, { passive: true });
      async function request(type) {
        if (!isSupported.value)
          return;
        wakeLock = await navigator.wakeLock.request(type);
        isActive.value = !wakeLock.released;
      }
      async function release() {
        if (!isSupported.value || !wakeLock)
          return;
        await wakeLock.release();
        isActive.value = !wakeLock.released;
        wakeLock = null;
      }
      return {
        isSupported,
        isActive,
        request,
        release
      };
    };
    var useWebNotification = (defaultOptions2 = {}) => {
      const {
        window: window2 = defaultWindow
      } = defaultOptions2;
      const isSupported = useSupported(() => !!window2 && "Notification" in window2);
      const notification = vueDemi.ref(null);
      const requestPermission = async () => {
        if (!isSupported.value)
          return;
        if ("permission" in Notification && Notification.permission !== "denied")
          await Notification.requestPermission();
      };
      const onClick = shared.createEventHook();
      const onShow = shared.createEventHook();
      const onError = shared.createEventHook();
      const onClose = shared.createEventHook();
      const show = async (overrides) => {
        if (!isSupported.value)
          return;
        await requestPermission();
        const options = Object.assign({}, defaultOptions2, overrides);
        notification.value = new Notification(options.title || "", options);
        notification.value.onclick = (event) => onClick.trigger(event);
        notification.value.onshow = (event) => onShow.trigger(event);
        notification.value.onerror = (event) => onError.trigger(event);
        notification.value.onclose = (event) => onClose.trigger(event);
        return notification.value;
      };
      const close = () => {
        if (notification.value)
          notification.value.close();
        notification.value = null;
      };
      shared.tryOnMounted(async () => {
        if (isSupported.value)
          await requestPermission();
      });
      shared.tryOnScopeDispose(close);
      if (isSupported.value && window2) {
        const document2 = window2.document;
        useEventListener(document2, "visibilitychange", (e) => {
          e.preventDefault();
          if (document2.visibilityState === "visible") {
            close();
          }
        });
      }
      return {
        isSupported,
        notification,
        show,
        close,
        onClick,
        onShow,
        onError,
        onClose
      };
    };
    var DEFAULT_PING_MESSAGE = "ping";
    function resolveNestedOptions(options) {
      if (options === true)
        return {};
      return options;
    }
    function useWebSocket(url, options = {}) {
      const {
        onConnected,
        onDisconnected,
        onError,
        onMessage,
        immediate = true,
        autoClose = true,
        protocols = []
      } = options;
      const data = vueDemi.ref(null);
      const status = vueDemi.ref("CLOSED");
      const wsRef = vueDemi.ref();
      let heartbeatPause;
      let heartbeatResume;
      let explicitlyClosed = false;
      let retried = 0;
      let bufferedData = [];
      let pongTimeoutWait;
      const close = (code = 1e3, reason) => {
        if (!wsRef.value)
          return;
        explicitlyClosed = true;
        heartbeatPause == null ? void 0 : heartbeatPause();
        wsRef.value.close(code, reason);
      };
      const _sendBuffer = () => {
        if (bufferedData.length && wsRef.value && status.value === "OPEN") {
          for (const buffer of bufferedData)
            wsRef.value.send(buffer);
          bufferedData = [];
        }
      };
      const resetHeartbeat = () => {
        clearTimeout(pongTimeoutWait);
      };
      const send = (data2, useBuffer = true) => {
        if (!wsRef.value || status.value !== "OPEN") {
          if (useBuffer)
            bufferedData.push(data2);
          return false;
        }
        _sendBuffer();
        wsRef.value.send(data2);
        return true;
      };
      const _init = () => {
        const ws = new WebSocket(url, protocols);
        wsRef.value = ws;
        status.value = "CONNECTING";
        explicitlyClosed = false;
        ws.onopen = () => {
          status.value = "OPEN";
          onConnected == null ? void 0 : onConnected(ws);
          heartbeatResume == null ? void 0 : heartbeatResume();
          _sendBuffer();
        };
        ws.onclose = (ev) => {
          status.value = "CLOSED";
          wsRef.value = void 0;
          onDisconnected == null ? void 0 : onDisconnected(ws, ev);
          if (!explicitlyClosed && options.autoReconnect) {
            const {
              retries = -1,
              delay = 1e3,
              onFailed
            } = resolveNestedOptions(options.autoReconnect);
            retried += 1;
            if (typeof retries === "number" && (retries < 0 || retried < retries))
              setTimeout(_init, delay);
            else if (typeof retries === "function" && retries())
              setTimeout(_init, delay);
            else
              onFailed == null ? void 0 : onFailed();
          }
        };
        ws.onerror = (e) => {
          onError == null ? void 0 : onError(ws, e);
        };
        ws.onmessage = (e) => {
          resetHeartbeat();
          if (options.heartbeat) {
            const {
              message = DEFAULT_PING_MESSAGE
            } = resolveNestedOptions(options.heartbeat);
            if (e.data === message)
              return;
          }
          data.value = e.data;
          onMessage == null ? void 0 : onMessage(ws, e);
        };
      };
      if (options.heartbeat) {
        const {
          message = DEFAULT_PING_MESSAGE,
          interval = 1e3,
          pongTimeout = 1e3
        } = resolveNestedOptions(options.heartbeat);
        const { pause, resume } = shared.useIntervalFn(() => {
          send(message, false);
          pongTimeoutWait = setTimeout(() => {
            close();
          }, pongTimeout);
        }, interval, { immediate: false });
        heartbeatPause = pause;
        heartbeatResume = resume;
      }
      if (immediate)
        _init();
      if (autoClose) {
        useEventListener(window, "beforeunload", () => close());
        shared.tryOnScopeDispose(close);
      }
      const open = () => {
        close();
        retried = 0;
        _init();
      };
      return {
        data,
        status,
        close,
        send,
        open,
        ws: wsRef
      };
    }
    function useWebWorker(url, workerOptions, options = {}) {
      const {
        window: window2 = defaultWindow
      } = options;
      const data = vueDemi.ref(null);
      const worker = vueDemi.shallowRef();
      const post = function post2(val) {
        if (!worker.value)
          return;
        worker.value.postMessage(val);
      };
      const terminate = function terminate2() {
        if (!worker.value)
          return;
        worker.value.terminate();
      };
      if (window2) {
        worker.value = new Worker(url, workerOptions);
        worker.value.onmessage = (e) => {
          data.value = e.data;
        };
        shared.tryOnScopeDispose(() => {
          if (worker.value)
            worker.value.terminate();
        });
      }
      return {
        data,
        post,
        terminate,
        worker
      };
    }
    var jobRunner = (userFunc) => (e) => {
      const userFuncArgs = e.data[0];
      return Promise.resolve(userFunc.apply(void 0, userFuncArgs)).then((result) => {
        postMessage(["SUCCESS", result]);
      }).catch((error) => {
        postMessage(["ERROR", error]);
      });
    };
    var depsParser = (deps) => {
      if (deps.length === 0)
        return "";
      const depsString = deps.map((dep) => `'${dep}'`).toString();
      return `importScripts(${depsString})`;
    };
    var createWorkerBlobUrl = (fn, deps) => {
      const blobCode = `${depsParser(deps)}; onmessage=(${jobRunner})(${fn})`;
      const blob = new Blob([blobCode], { type: "text/javascript" });
      const url = URL.createObjectURL(blob);
      return url;
    };
    var useWebWorkerFn = (fn, options = {}) => {
      const {
        dependencies = [],
        timeout,
        window: window2 = defaultWindow
      } = options;
      const worker = vueDemi.ref();
      const workerStatus = vueDemi.ref("PENDING");
      const promise = vueDemi.ref({});
      const timeoutId = vueDemi.ref();
      const workerTerminate = (status = "PENDING") => {
        if (worker.value && worker.value._url && window2) {
          worker.value.terminate();
          URL.revokeObjectURL(worker.value._url);
          promise.value = {};
          worker.value = void 0;
          window2.clearTimeout(timeoutId.value);
          workerStatus.value = status;
        }
      };
      workerTerminate();
      shared.tryOnScopeDispose(workerTerminate);
      const generateWorker = () => {
        const blobUrl = createWorkerBlobUrl(fn, dependencies);
        const newWorker = new Worker(blobUrl);
        newWorker._url = blobUrl;
        newWorker.onmessage = (e) => {
          const { resolve = () => {
          }, reject = () => {
          } } = promise.value;
          const [status, result] = e.data;
          switch (status) {
            case "SUCCESS":
              resolve(result);
              workerTerminate(status);
              break;
            default:
              reject(result);
              workerTerminate("ERROR");
              break;
          }
        };
        newWorker.onerror = (e) => {
          const { reject = () => {
          } } = promise.value;
          reject(e);
          workerTerminate("ERROR");
        };
        if (timeout) {
          timeoutId.value = setTimeout(() => workerTerminate("TIMEOUT_EXPIRED"), timeout);
        }
        return newWorker;
      };
      const callWorker = (...fnArgs) => new Promise((resolve, reject) => {
        promise.value = {
          resolve,
          reject
        };
        worker.value && worker.value.postMessage([[...fnArgs]]);
        workerStatus.value = "RUNNING";
      });
      const workerFn = (...fnArgs) => {
        if (workerStatus.value === "RUNNING") {
          console.error("[useWebWorkerFn] You can only run one instance of the worker at a time.");
          return Promise.reject();
        }
        worker.value = generateWorker();
        return callWorker(...fnArgs);
      };
      return {
        workerFn,
        workerStatus,
        workerTerminate
      };
    };
    function useWindowFocus({ window: window2 = defaultWindow } = {}) {
      if (!window2)
        return vueDemi.ref(false);
      const focused = vueDemi.ref(window2.document.hasFocus());
      useEventListener(window2, "blur", () => {
        focused.value = false;
      });
      useEventListener(window2, "focus", () => {
        focused.value = true;
      });
      return focused;
    }
    function useWindowScroll({ window: window2 = defaultWindow } = {}) {
      if (!window2) {
        return {
          x: vueDemi.ref(0),
          y: vueDemi.ref(0)
        };
      }
      const x = vueDemi.ref(window2.pageXOffset);
      const y = vueDemi.ref(window2.pageYOffset);
      useEventListener("scroll", () => {
        x.value = window2.pageXOffset;
        y.value = window2.pageYOffset;
      }, {
        capture: false,
        passive: true
      });
      return { x, y };
    }
    function useWindowSize(options = {}) {
      const {
        window: window2 = defaultWindow,
        initialWidth = Infinity,
        initialHeight = Infinity,
        listenOrientation = true,
        includeScrollbar = true
      } = options;
      const width = vueDemi.ref(initialWidth);
      const height = vueDemi.ref(initialHeight);
      const update = () => {
        if (window2) {
          if (includeScrollbar) {
            width.value = window2.innerWidth;
            height.value = window2.innerHeight;
          } else {
            width.value = window2.document.documentElement.clientWidth;
            height.value = window2.document.documentElement.clientHeight;
          }
        }
      };
      update();
      shared.tryOnMounted(update);
      useEventListener("resize", update, { passive: true });
      if (listenOrientation)
        useEventListener("orientationchange", update, { passive: true });
      return { width, height };
    }
    exports.DefaultMagicKeysAliasMap = DefaultMagicKeysAliasMap;
    exports.StorageSerializers = StorageSerializers;
    exports.TransitionPresets = TransitionPresets;
    exports.asyncComputed = computedAsync;
    exports.breakpointsAntDesign = breakpointsAntDesign;
    exports.breakpointsBootstrapV5 = breakpointsBootstrapV5;
    exports.breakpointsQuasar = breakpointsQuasar;
    exports.breakpointsSematic = breakpointsSematic;
    exports.breakpointsTailwind = breakpointsTailwind;
    exports.breakpointsVuetify = breakpointsVuetify;
    exports.cloneFnJSON = cloneFnJSON;
    exports.computedAsync = computedAsync;
    exports.computedInject = computedInject;
    exports.createFetch = createFetch;
    exports.createUnrefFn = createUnrefFn;
    exports.defaultDocument = defaultDocument;
    exports.defaultLocation = defaultLocation;
    exports.defaultNavigator = defaultNavigator;
    exports.defaultWindow = defaultWindow;
    exports.getSSRHandler = getSSRHandler;
    exports.mapGamepadToXbox360Controller = mapGamepadToXbox360Controller;
    exports.onClickOutside = onClickOutside;
    exports.onKeyDown = onKeyDown;
    exports.onKeyPressed = onKeyPressed;
    exports.onKeyStroke = onKeyStroke;
    exports.onKeyUp = onKeyUp;
    exports.onLongPress = onLongPress;
    exports.onStartTyping = onStartTyping;
    exports.setSSRHandler = setSSRHandler;
    exports.templateRef = templateRef;
    exports.unrefElement = unrefElement;
    exports.useActiveElement = useActiveElement;
    exports.useAsyncQueue = useAsyncQueue;
    exports.useAsyncState = useAsyncState;
    exports.useBase64 = useBase64;
    exports.useBattery = useBattery;
    exports.useBluetooth = useBluetooth;
    exports.useBreakpoints = useBreakpoints;
    exports.useBroadcastChannel = useBroadcastChannel;
    exports.useBrowserLocation = useBrowserLocation;
    exports.useCached = useCached;
    exports.useClipboard = useClipboard;
    exports.useCloned = useCloned;
    exports.useColorMode = useColorMode;
    exports.useConfirmDialog = useConfirmDialog;
    exports.useCssVar = useCssVar;
    exports.useCurrentElement = useCurrentElement;
    exports.useCycleList = useCycleList;
    exports.useDark = useDark;
    exports.useDebouncedRefHistory = useDebouncedRefHistory;
    exports.useDeviceMotion = useDeviceMotion;
    exports.useDeviceOrientation = useDeviceOrientation;
    exports.useDevicePixelRatio = useDevicePixelRatio;
    exports.useDevicesList = useDevicesList;
    exports.useDisplayMedia = useDisplayMedia;
    exports.useDocumentVisibility = useDocumentVisibility;
    exports.useDraggable = useDraggable;
    exports.useDropZone = useDropZone;
    exports.useElementBounding = useElementBounding;
    exports.useElementByPoint = useElementByPoint;
    exports.useElementHover = useElementHover;
    exports.useElementSize = useElementSize;
    exports.useElementVisibility = useElementVisibility;
    exports.useEventBus = useEventBus;
    exports.useEventListener = useEventListener;
    exports.useEventSource = useEventSource;
    exports.useEyeDropper = useEyeDropper;
    exports.useFavicon = useFavicon;
    exports.useFetch = useFetch;
    exports.useFileDialog = useFileDialog;
    exports.useFileSystemAccess = useFileSystemAccess;
    exports.useFocus = useFocus;
    exports.useFocusWithin = useFocusWithin;
    exports.useFps = useFps;
    exports.useFullscreen = useFullscreen;
    exports.useGamepad = useGamepad;
    exports.useGeolocation = useGeolocation;
    exports.useIdle = useIdle;
    exports.useImage = useImage;
    exports.useInfiniteScroll = useInfiniteScroll;
    exports.useIntersectionObserver = useIntersectionObserver;
    exports.useKeyModifier = useKeyModifier;
    exports.useLocalStorage = useLocalStorage;
    exports.useMagicKeys = useMagicKeys;
    exports.useManualRefHistory = useManualRefHistory;
    exports.useMediaControls = useMediaControls;
    exports.useMediaQuery = useMediaQuery;
    exports.useMemoize = useMemoize;
    exports.useMemory = useMemory;
    exports.useMounted = useMounted;
    exports.useMouse = useMouse;
    exports.useMouseInElement = useMouseInElement;
    exports.useMousePressed = useMousePressed;
    exports.useMutationObserver = useMutationObserver;
    exports.useNavigatorLanguage = useNavigatorLanguage;
    exports.useNetwork = useNetwork;
    exports.useNow = useNow;
    exports.useObjectUrl = useObjectUrl;
    exports.useOffsetPagination = useOffsetPagination;
    exports.useOnline = useOnline;
    exports.usePageLeave = usePageLeave;
    exports.useParallax = useParallax;
    exports.usePermission = usePermission;
    exports.usePointer = usePointer;
    exports.usePointerSwipe = usePointerSwipe;
    exports.usePreferredColorScheme = usePreferredColorScheme;
    exports.usePreferredContrast = usePreferredContrast;
    exports.usePreferredDark = usePreferredDark;
    exports.usePreferredLanguages = usePreferredLanguages;
    exports.usePreferredReducedMotion = usePreferredReducedMotion;
    exports.useRafFn = useRafFn;
    exports.useRefHistory = useRefHistory;
    exports.useResizeObserver = useResizeObserver;
    exports.useScreenOrientation = useScreenOrientation;
    exports.useScreenSafeArea = useScreenSafeArea;
    exports.useScriptTag = useScriptTag;
    exports.useScroll = useScroll;
    exports.useScrollLock = useScrollLock;
    exports.useSessionStorage = useSessionStorage;
    exports.useShare = useShare;
    exports.useSpeechRecognition = useSpeechRecognition;
    exports.useSpeechSynthesis = useSpeechSynthesis;
    exports.useStepper = useStepper;
    exports.useStorage = useStorage;
    exports.useStorageAsync = useStorageAsync;
    exports.useStyleTag = useStyleTag;
    exports.useSupported = useSupported;
    exports.useSwipe = useSwipe;
    exports.useTemplateRefsList = useTemplateRefsList;
    exports.useTextDirection = useTextDirection;
    exports.useTextSelection = useTextSelection;
    exports.useTextareaAutosize = useTextareaAutosize;
    exports.useThrottledRefHistory = useThrottledRefHistory;
    exports.useTimeAgo = useTimeAgo;
    exports.useTimeoutPoll = useTimeoutPoll;
    exports.useTimestamp = useTimestamp;
    exports.useTitle = useTitle;
    exports.useTransition = useTransition;
    exports.useUrlSearchParams = useUrlSearchParams;
    exports.useUserMedia = useUserMedia;
    exports.useVModel = useVModel;
    exports.useVModels = useVModels;
    exports.useVibrate = useVibrate;
    exports.useVirtualList = useVirtualList;
    exports.useWakeLock = useWakeLock;
    exports.useWebNotification = useWebNotification;
    exports.useWebSocket = useWebSocket;
    exports.useWebWorker = useWebWorker;
    exports.useWebWorkerFn = useWebWorkerFn;
    exports.useWindowFocus = useWindowFocus;
    exports.useWindowScroll = useWindowScroll;
    exports.useWindowSize = useWindowSize;
    Object.keys(shared).forEach(function(k) {
      if (k !== "default" && !exports.hasOwnProperty(k))
        Object.defineProperty(exports, k, {
          enumerable: true,
          get: function() {
            return shared[k];
          }
        });
    });
  }
});

// node_modules/element-plus/lib/utils/types.js
var require_types = __commonJS({
  "node_modules/element-plus/lib/utils/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    var lodashUnified = require_require();
    var core = require_core();
    var vue = require_vue();
    var isUndefined = (val) => val === void 0;
    var isEmpty = (val) => !val && val !== 0 || shared.isArray(val) && val.length === 0 || shared.isObject(val) && !Object.keys(val).length;
    var isElement = (e) => {
      if (typeof Element === "undefined")
        return false;
      return e instanceof Element;
    };
    var isPropAbsent = (prop) => {
      return lodashUnified.isNil(prop);
    };
    Object.defineProperty(exports, "isArray", {
      enumerable: true,
      get: function() {
        return shared.isArray;
      }
    });
    Object.defineProperty(exports, "isDate", {
      enumerable: true,
      get: function() {
        return shared.isDate;
      }
    });
    Object.defineProperty(exports, "isFunction", {
      enumerable: true,
      get: function() {
        return shared.isFunction;
      }
    });
    Object.defineProperty(exports, "isObject", {
      enumerable: true,
      get: function() {
        return shared.isObject;
      }
    });
    Object.defineProperty(exports, "isPromise", {
      enumerable: true,
      get: function() {
        return shared.isPromise;
      }
    });
    Object.defineProperty(exports, "isString", {
      enumerable: true,
      get: function() {
        return shared.isString;
      }
    });
    Object.defineProperty(exports, "isSymbol", {
      enumerable: true,
      get: function() {
        return shared.isSymbol;
      }
    });
    Object.defineProperty(exports, "isBoolean", {
      enumerable: true,
      get: function() {
        return core.isBoolean;
      }
    });
    Object.defineProperty(exports, "isNumber", {
      enumerable: true,
      get: function() {
        return core.isNumber;
      }
    });
    Object.defineProperty(exports, "isVNode", {
      enumerable: true,
      get: function() {
        return vue.isVNode;
      }
    });
    exports.isElement = isElement;
    exports.isEmpty = isEmpty;
    exports.isPropAbsent = isPropAbsent;
    exports.isUndefined = isUndefined;
  }
});

// node_modules/element-plus/lib/utils/objects.js
var require_objects = __commonJS({
  "node_modules/element-plus/lib/utils/objects.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var lodashUnified = require_require();
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    var keysOf = (arr) => Object.keys(arr);
    var entriesOf = (arr) => Object.entries(arr);
    var getProp = (obj, path, defaultValue) => {
      return {
        get value() {
          return lodashUnified.get(obj, path, defaultValue);
        },
        set value(val) {
          lodashUnified.set(obj, path, val);
        }
      };
    };
    Object.defineProperty(exports, "hasOwn", {
      enumerable: true,
      get: function() {
        return shared.hasOwn;
      }
    });
    exports.entriesOf = entriesOf;
    exports.getProp = getProp;
    exports.keysOf = keysOf;
  }
});

// node_modules/element-plus/lib/utils/error.js
var require_error = __commonJS({
  "node_modules/element-plus/lib/utils/error.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    require_types();
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    var ElementPlusError = class extends Error {
      constructor(m) {
        super(m);
        this.name = "ElementPlusError";
      }
    };
    function throwError(scope, m) {
      throw new ElementPlusError(`[${scope}] ${m}`);
    }
    function debugWarn(scope, message) {
      if (true) {
        const error = shared.isString(scope) ? new ElementPlusError(`[${scope}] ${message}`) : scope;
        console.warn(error);
      }
    }
    exports.debugWarn = debugWarn;
    exports.throwError = throwError;
  }
});

// node_modules/element-plus/lib/utils/strings.js
var require_strings = __commonJS({
  "node_modules/element-plus/lib/utils/strings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    var escapeStringRegexp = (string = "") => string.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
    var capitalize2 = (str) => shared.capitalize(str);
    Object.defineProperty(exports, "camelize", {
      enumerable: true,
      get: function() {
        return shared.camelize;
      }
    });
    Object.defineProperty(exports, "hyphenate", {
      enumerable: true,
      get: function() {
        return shared.hyphenate;
      }
    });
    Object.defineProperty(exports, "kebabCase", {
      enumerable: true,
      get: function() {
        return shared.hyphenate;
      }
    });
    exports.capitalize = capitalize2;
    exports.escapeStringRegexp = escapeStringRegexp;
  }
});

// node_modules/element-plus/lib/utils/dom/style.js
var require_style = __commonJS({
  "node_modules/element-plus/lib/utils/dom/style.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var core = require_core();
    require_types();
    require_strings();
    var objects = require_objects();
    var error = require_error();
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    var SCOPE = "utils/dom/style";
    var classNameToArray = (cls = "") => cls.split(" ").filter((item) => !!item.trim());
    var hasClass = (el, cls) => {
      if (!el || !cls)
        return false;
      if (cls.includes(" "))
        throw new Error("className should not contain space.");
      return el.classList.contains(cls);
    };
    var addClass = (el, cls) => {
      if (!el || !cls.trim())
        return;
      el.classList.add(...classNameToArray(cls));
    };
    var removeClass = (el, cls) => {
      if (!el || !cls.trim())
        return;
      el.classList.remove(...classNameToArray(cls));
    };
    var getStyle = (element, styleName) => {
      var _a;
      if (!core.isClient || !element || !styleName)
        return "";
      let key = shared.camelize(styleName);
      if (key === "float")
        key = "cssFloat";
      try {
        const style = element.style[key];
        if (style)
          return style;
        const computed = (_a = document.defaultView) == null ? void 0 : _a.getComputedStyle(element, "");
        return computed ? computed[key] : "";
      } catch (e) {
        return element.style[key];
      }
    };
    var setStyle = (element, styleName, value) => {
      if (!element || !styleName)
        return;
      if (shared.isObject(styleName)) {
        objects.entriesOf(styleName).forEach(([prop, value2]) => setStyle(element, prop, value2));
      } else {
        const key = shared.camelize(styleName);
        element.style[key] = value;
      }
    };
    var removeStyle = (element, style) => {
      if (!element || !style)
        return;
      if (shared.isObject(style)) {
        objects.keysOf(style).forEach((prop) => removeStyle(element, prop));
      } else {
        setStyle(element, style, "");
      }
    };
    function addUnit(value, defaultUnit = "px") {
      if (!value)
        return "";
      if (shared.isString(value)) {
        return value;
      } else if (core.isNumber(value)) {
        return `${value}${defaultUnit}`;
      }
      error.debugWarn(SCOPE, "binding value must be a string or number");
    }
    exports.addClass = addClass;
    exports.addUnit = addUnit;
    exports.classNameToArray = classNameToArray;
    exports.getStyle = getStyle;
    exports.hasClass = hasClass;
    exports.removeClass = removeClass;
    exports.removeStyle = removeStyle;
    exports.setStyle = setStyle;
  }
});

// node_modules/element-plus/lib/utils/dom/scroll.js
var require_scroll = __commonJS({
  "node_modules/element-plus/lib/utils/dom/scroll.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var core = require_core();
    var style = require_style();
    var isScroll = (el, isVertical) => {
      if (!core.isClient)
        return false;
      const key = {
        undefined: "overflow",
        true: "overflow-y",
        false: "overflow-x"
      }[String(isVertical)];
      const overflow = style.getStyle(el, key);
      return ["scroll", "auto", "overlay"].some((s) => overflow.includes(s));
    };
    var getScrollContainer = (el, isVertical) => {
      if (!core.isClient)
        return;
      let parent = el;
      while (parent) {
        if ([window, document, document.documentElement].includes(parent))
          return window;
        if (isScroll(parent, isVertical))
          return parent;
        parent = parent.parentNode;
      }
      return parent;
    };
    var scrollBarWidth;
    var getScrollBarWidth = (namespace) => {
      var _a;
      if (!core.isClient)
        return 0;
      if (scrollBarWidth !== void 0)
        return scrollBarWidth;
      const outer = document.createElement("div");
      outer.className = `${namespace}-scrollbar__wrap`;
      outer.style.visibility = "hidden";
      outer.style.width = "100px";
      outer.style.position = "absolute";
      outer.style.top = "-9999px";
      document.body.appendChild(outer);
      const widthNoScroll = outer.offsetWidth;
      outer.style.overflow = "scroll";
      const inner = document.createElement("div");
      inner.style.width = "100%";
      outer.appendChild(inner);
      const widthWithScroll = inner.offsetWidth;
      (_a = outer.parentNode) == null ? void 0 : _a.removeChild(outer);
      scrollBarWidth = widthNoScroll - widthWithScroll;
      return scrollBarWidth;
    };
    function scrollIntoView(container, selected) {
      if (!core.isClient)
        return;
      if (!selected) {
        container.scrollTop = 0;
        return;
      }
      const offsetParents = [];
      let pointer = selected.offsetParent;
      while (pointer !== null && container !== pointer && container.contains(pointer)) {
        offsetParents.push(pointer);
        pointer = pointer.offsetParent;
      }
      const top = selected.offsetTop + offsetParents.reduce((prev, curr) => prev + curr.offsetTop, 0);
      const bottom = top + selected.offsetHeight;
      const viewRectTop = container.scrollTop;
      const viewRectBottom = viewRectTop + container.clientHeight;
      if (top < viewRectTop) {
        container.scrollTop = top;
      } else if (bottom > viewRectBottom) {
        container.scrollTop = bottom - container.clientHeight;
      }
    }
    exports.getScrollBarWidth = getScrollBarWidth;
    exports.getScrollContainer = getScrollContainer;
    exports.isScroll = isScroll;
    exports.scrollIntoView = scrollIntoView;
  }
});

// node_modules/element-plus/lib/utils/vue/global-node.js
var require_global_node = __commonJS({
  "node_modules/element-plus/lib/utils/vue/global-node.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var core = require_core();
    var globalNodes = [];
    var target = !core.isClient ? void 0 : document.body;
    function createGlobalNode(id) {
      const el = document.createElement("div");
      if (id !== void 0) {
        el.setAttribute("id", id);
      }
      target.appendChild(el);
      globalNodes.push(el);
      return el;
    }
    function removeGlobalNode(el) {
      globalNodes.splice(globalNodes.indexOf(el), 1);
      el.remove();
    }
    function changeGlobalNodesTarget(el) {
      if (el === target)
        return;
      target = el;
      globalNodes.forEach((el2) => {
        if (el2.contains(target) === false) {
          target.appendChild(el2);
        }
      });
    }
    exports.changeGlobalNodesTarget = changeGlobalNodesTarget;
    exports.createGlobalNode = createGlobalNode;
    exports.removeGlobalNode = removeGlobalNode;
  }
});

// node_modules/element-plus/lib/utils/vue/props/runtime.js
var require_runtime = __commonJS({
  "node_modules/element-plus/lib/utils/vue/props/runtime.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var vue = require_vue();
    var lodashUnified = require_require();
    require_types();
    require_objects();
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    var epPropKey = "__epPropKey";
    var definePropType = (val) => val;
    var isEpProp = (val) => shared.isObject(val) && !!val[epPropKey];
    var buildProp = (prop, key) => {
      if (!shared.isObject(prop) || isEpProp(prop))
        return prop;
      const { values, required, default: defaultValue, type, validator } = prop;
      const _validator = values || validator ? (val) => {
        let valid = false;
        let allowedValues = [];
        if (values) {
          allowedValues = Array.from(values);
          if (shared.hasOwn(prop, "default")) {
            allowedValues.push(defaultValue);
          }
          valid || (valid = allowedValues.includes(val));
        }
        if (validator)
          valid || (valid = validator(val));
        if (!valid && allowedValues.length > 0) {
          const allowValuesText = [...new Set(allowedValues)].map((value) => JSON.stringify(value)).join(", ");
          vue.warn(`Invalid prop: validation failed${key ? ` for prop "${key}"` : ""}. Expected one of [${allowValuesText}], got value ${JSON.stringify(val)}.`);
        }
        return valid;
      } : void 0;
      const epProp = {
        type,
        required: !!required,
        validator: _validator,
        [epPropKey]: true
      };
      if (shared.hasOwn(prop, "default"))
        epProp.default = defaultValue;
      return epProp;
    };
    var buildProps2 = (props) => lodashUnified.fromPairs(Object.entries(props).map(([key, option]) => [
      key,
      buildProp(option, key)
    ]));
    exports.buildProp = buildProp;
    exports.buildProps = buildProps2;
    exports.definePropType = definePropType;
    exports.epPropKey = epPropKey;
    exports.isEpProp = isEpProp;
  }
});

// node_modules/element-plus/lib/constants/aria.js
var require_aria2 = __commonJS({
  "node_modules/element-plus/lib/constants/aria.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var EVENT_CODE = {
      tab: "Tab",
      enter: "Enter",
      space: "Space",
      left: "ArrowLeft",
      up: "ArrowUp",
      right: "ArrowRight",
      down: "ArrowDown",
      esc: "Escape",
      delete: "Delete",
      backspace: "Backspace",
      numpadEnter: "NumpadEnter",
      pageUp: "PageUp",
      pageDown: "PageDown",
      home: "Home",
      end: "End"
    };
    exports.EVENT_CODE = EVENT_CODE;
  }
});

// node_modules/element-plus/lib/constants/size.js
var require_size = __commonJS({
  "node_modules/element-plus/lib/constants/size.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var componentSizes = ["", "default", "small", "large"];
    var componentSizeMap = {
      large: 40,
      default: 32,
      small: 24
    };
    exports.componentSizeMap = componentSizeMap;
    exports.componentSizes = componentSizes;
  }
});

// node_modules/element-plus/lib/constants/date.js
var require_date = __commonJS({
  "node_modules/element-plus/lib/constants/date.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var datePickTypes = [
      "year",
      "month",
      "date",
      "dates",
      "week",
      "datetime",
      "datetimerange",
      "daterange",
      "monthrange"
    ];
    var WEEK_DAYS = [
      "sun",
      "mon",
      "tue",
      "wed",
      "thu",
      "fri",
      "sat"
    ];
    exports.WEEK_DAYS = WEEK_DAYS;
    exports.datePickTypes = datePickTypes;
  }
});

// node_modules/element-plus/lib/constants/event.js
var require_event = __commonJS({
  "node_modules/element-plus/lib/constants/event.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var UPDATE_MODEL_EVENT = "update:modelValue";
    var CHANGE_EVENT = "change";
    var INPUT_EVENT = "input";
    exports.CHANGE_EVENT = CHANGE_EVENT;
    exports.INPUT_EVENT = INPUT_EVENT;
    exports.UPDATE_MODEL_EVENT = UPDATE_MODEL_EVENT;
  }
});

// node_modules/element-plus/lib/constants/key.js
var require_key = __commonJS({
  "node_modules/element-plus/lib/constants/key.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var INSTALLED_KEY = Symbol("INSTALLED_KEY");
    exports.INSTALLED_KEY = INSTALLED_KEY;
  }
});

// node_modules/element-plus/lib/constants/index.js
var require_constants = __commonJS({
  "node_modules/element-plus/lib/constants/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var aria = require_aria2();
    var date = require_date();
    var event = require_event();
    var key = require_key();
    var size = require_size();
    exports.EVENT_CODE = aria.EVENT_CODE;
    exports.WEEK_DAYS = date.WEEK_DAYS;
    exports.datePickTypes = date.datePickTypes;
    exports.CHANGE_EVENT = event.CHANGE_EVENT;
    exports.INPUT_EVENT = event.INPUT_EVENT;
    exports.UPDATE_MODEL_EVENT = event.UPDATE_MODEL_EVENT;
    exports.INSTALLED_KEY = key.INSTALLED_KEY;
    exports.componentSizeMap = size.componentSizeMap;
    exports.componentSizes = size.componentSizes;
  }
});

// node_modules/element-plus/lib/utils/rand.js
var require_rand = __commonJS({
  "node_modules/element-plus/lib/utils/rand.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var generateId = () => Math.floor(Math.random() * 1e4);
    var getRandomInt = (max) => Math.floor(Math.random() * Math.floor(max));
    exports.generateId = generateId;
    exports.getRandomInt = getRandomInt;
  }
});

// node_modules/element-plus/lib/utils/dom/event.js
var require_event2 = __commonJS({
  "node_modules/element-plus/lib/utils/dom/event.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var composeEventHandlers = (theirsHandler, oursHandler, { checkForDefaultPrevented = true } = {}) => {
      const handleEvent = (event) => {
        const shouldPrevent = theirsHandler == null ? void 0 : theirsHandler(event);
        if (checkForDefaultPrevented === false || !shouldPrevent) {
          return oursHandler == null ? void 0 : oursHandler(event);
        }
      };
      return handleEvent;
    };
    var whenMouse = (handler) => {
      return (e) => e.pointerType === "mouse" ? handler(e) : void 0;
    };
    exports.composeEventHandlers = composeEventHandlers;
    exports.whenMouse = whenMouse;
  }
});

// node_modules/element-plus/lib/utils/dom/position.js
var require_position = __commonJS({
  "node_modules/element-plus/lib/utils/dom/position.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var core = require_core();
    var isInContainer = (el, container) => {
      if (!core.isClient || !el || !container)
        return false;
      const elRect = el.getBoundingClientRect();
      let containerRect;
      if (container instanceof Element) {
        containerRect = container.getBoundingClientRect();
      } else {
        containerRect = {
          top: 0,
          right: window.innerWidth,
          bottom: window.innerHeight,
          left: 0
        };
      }
      return elRect.top < containerRect.bottom && elRect.bottom > containerRect.top && elRect.right > containerRect.left && elRect.left < containerRect.right;
    };
    var getOffsetTop = (el) => {
      let offset = 0;
      let parent = el;
      while (parent) {
        offset += parent.offsetTop;
        parent = parent.offsetParent;
      }
      return offset;
    };
    var getOffsetTopDistance = (el, containerEl) => {
      return Math.abs(getOffsetTop(el) - getOffsetTop(containerEl));
    };
    var getClientXY = (event) => {
      let clientX;
      let clientY;
      if (event.type === "touchend") {
        clientY = event.changedTouches[0].clientY;
        clientX = event.changedTouches[0].clientX;
      } else if (event.type.startsWith("touch")) {
        clientY = event.touches[0].clientY;
        clientX = event.touches[0].clientX;
      } else {
        clientY = event.clientY;
        clientX = event.clientX;
      }
      return {
        clientX,
        clientY
      };
    };
    exports.getClientXY = getClientXY;
    exports.getOffsetTop = getOffsetTop;
    exports.getOffsetTopDistance = getOffsetTopDistance;
    exports.isInContainer = isInContainer;
  }
});

// node_modules/element-plus/lib/utils/dom/index.js
var require_dom = __commonJS({
  "node_modules/element-plus/lib/utils/dom/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var aria = require_aria();
    var event = require_event2();
    var position = require_position();
    var scroll = require_scroll();
    var style = require_style();
    exports.attemptFocus = aria.attemptFocus;
    exports.focusNode = aria.focusNode;
    exports.getSibling = aria.getSibling;
    exports.isFocusable = aria.isFocusable;
    exports.isLeaf = aria.isLeaf;
    exports.isVisible = aria.isVisible;
    exports.obtainAllFocusableElements = aria.obtainAllFocusableElements;
    exports.triggerEvent = aria.triggerEvent;
    exports.composeEventHandlers = event.composeEventHandlers;
    exports.whenMouse = event.whenMouse;
    exports.getClientXY = position.getClientXY;
    exports.getOffsetTop = position.getOffsetTop;
    exports.getOffsetTopDistance = position.getOffsetTopDistance;
    exports.isInContainer = position.isInContainer;
    exports.getScrollBarWidth = scroll.getScrollBarWidth;
    exports.getScrollContainer = scroll.getScrollContainer;
    exports.isScroll = scroll.isScroll;
    exports.scrollIntoView = scroll.scrollIntoView;
    exports.addClass = style.addClass;
    exports.addUnit = style.addUnit;
    exports.classNameToArray = style.classNameToArray;
    exports.getStyle = style.getStyle;
    exports.hasClass = style.hasClass;
    exports.removeClass = style.removeClass;
    exports.removeStyle = style.removeStyle;
    exports.setStyle = style.setStyle;
  }
});

// node_modules/@element-plus/icons-vue/dist/index.cjs
var require_dist = __commonJS({
  "node_modules/@element-plus/icons-vue/dist/index.cjs"(exports, module) {
    "use strict";
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames(from))
          !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      return to;
    };
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      AddLocation: () => add_location_default,
      Aim: () => aim_default,
      AlarmClock: () => alarm_clock_default,
      Apple: () => apple_default,
      ArrowDown: () => arrow_down_default,
      ArrowDownBold: () => arrow_down_bold_default,
      ArrowLeft: () => arrow_left_default,
      ArrowLeftBold: () => arrow_left_bold_default,
      ArrowRight: () => arrow_right_default,
      ArrowRightBold: () => arrow_right_bold_default,
      ArrowUp: () => arrow_up_default,
      ArrowUpBold: () => arrow_up_bold_default,
      Avatar: () => avatar_default,
      Back: () => back_default,
      Baseball: () => baseball_default,
      Basketball: () => basketball_default,
      Bell: () => bell_default,
      BellFilled: () => bell_filled_default,
      Bicycle: () => bicycle_default,
      Bottom: () => bottom_default,
      BottomLeft: () => bottom_left_default,
      BottomRight: () => bottom_right_default,
      Bowl: () => bowl_default,
      Box: () => box_default,
      Briefcase: () => briefcase_default,
      Brush: () => brush_default,
      BrushFilled: () => brush_filled_default,
      Burger: () => burger_default,
      Calendar: () => calendar_default,
      Camera: () => camera_default,
      CameraFilled: () => camera_filled_default,
      CaretBottom: () => caret_bottom_default,
      CaretLeft: () => caret_left_default,
      CaretRight: () => caret_right_default,
      CaretTop: () => caret_top_default,
      Cellphone: () => cellphone_default,
      ChatDotRound: () => chat_dot_round_default,
      ChatDotSquare: () => chat_dot_square_default,
      ChatLineRound: () => chat_line_round_default,
      ChatLineSquare: () => chat_line_square_default,
      ChatRound: () => chat_round_default,
      ChatSquare: () => chat_square_default,
      Check: () => check_default,
      Checked: () => checked_default,
      Cherry: () => cherry_default,
      Chicken: () => chicken_default,
      ChromeFilled: () => chrome_filled_default,
      CircleCheck: () => circle_check_default,
      CircleCheckFilled: () => circle_check_filled_default,
      CircleClose: () => circle_close_default,
      CircleCloseFilled: () => circle_close_filled_default,
      CirclePlus: () => circle_plus_default,
      CirclePlusFilled: () => circle_plus_filled_default,
      Clock: () => clock_default,
      Close: () => close_default,
      CloseBold: () => close_bold_default,
      Cloudy: () => cloudy_default,
      Coffee: () => coffee_default,
      CoffeeCup: () => coffee_cup_default,
      Coin: () => coin_default,
      ColdDrink: () => cold_drink_default,
      Collection: () => collection_default,
      CollectionTag: () => collection_tag_default,
      Comment: () => comment_default,
      Compass: () => compass_default,
      Connection: () => connection_default,
      Coordinate: () => coordinate_default,
      CopyDocument: () => copy_document_default,
      Cpu: () => cpu_default,
      CreditCard: () => credit_card_default,
      Crop: () => crop_default,
      DArrowLeft: () => d_arrow_left_default,
      DArrowRight: () => d_arrow_right_default,
      DCaret: () => d_caret_default,
      DataAnalysis: () => data_analysis_default,
      DataBoard: () => data_board_default,
      DataLine: () => data_line_default,
      Delete: () => delete_default,
      DeleteFilled: () => delete_filled_default,
      DeleteLocation: () => delete_location_default,
      Dessert: () => dessert_default,
      Discount: () => discount_default,
      Dish: () => dish_default,
      DishDot: () => dish_dot_default,
      Document: () => document_default,
      DocumentAdd: () => document_add_default,
      DocumentChecked: () => document_checked_default,
      DocumentCopy: () => document_copy_default,
      DocumentDelete: () => document_delete_default,
      DocumentRemove: () => document_remove_default,
      Download: () => download_default,
      Drizzling: () => drizzling_default,
      Edit: () => edit_default,
      EditPen: () => edit_pen_default,
      Eleme: () => eleme_default,
      ElemeFilled: () => eleme_filled_default,
      ElementPlus: () => element_plus_default,
      Expand: () => expand_default,
      Failed: () => failed_default,
      Female: () => female_default,
      Files: () => files_default,
      Film: () => film_default,
      Filter: () => filter_default,
      Finished: () => finished_default,
      FirstAidKit: () => first_aid_kit_default,
      Flag: () => flag_default,
      Fold: () => fold_default,
      Folder: () => folder_default,
      FolderAdd: () => folder_add_default,
      FolderChecked: () => folder_checked_default,
      FolderDelete: () => folder_delete_default,
      FolderOpened: () => folder_opened_default,
      FolderRemove: () => folder_remove_default,
      Food: () => food_default,
      Football: () => football_default,
      ForkSpoon: () => fork_spoon_default,
      Fries: () => fries_default,
      FullScreen: () => full_screen_default,
      Goblet: () => goblet_default,
      GobletFull: () => goblet_full_default,
      GobletSquare: () => goblet_square_default,
      GobletSquareFull: () => goblet_square_full_default,
      GoldMedal: () => gold_medal_default,
      Goods: () => goods_default,
      GoodsFilled: () => goods_filled_default,
      Grape: () => grape_default,
      Grid: () => grid_default,
      Guide: () => guide_default,
      Handbag: () => handbag_default,
      Headset: () => headset_default,
      Help: () => help_default,
      HelpFilled: () => help_filled_default,
      Hide: () => hide_default,
      Histogram: () => histogram_default,
      HomeFilled: () => home_filled_default,
      HotWater: () => hot_water_default,
      House: () => house_default,
      IceCream: () => ice_cream_default,
      IceCreamRound: () => ice_cream_round_default,
      IceCreamSquare: () => ice_cream_square_default,
      IceDrink: () => ice_drink_default,
      IceTea: () => ice_tea_default,
      InfoFilled: () => info_filled_default,
      Iphone: () => iphone_default,
      Key: () => key_default,
      KnifeFork: () => knife_fork_default,
      Lightning: () => lightning_default,
      Link: () => link_default,
      List: () => list_default,
      Loading: () => loading_default,
      Location: () => location_default,
      LocationFilled: () => location_filled_default,
      LocationInformation: () => location_information_default,
      Lock: () => lock_default,
      Lollipop: () => lollipop_default,
      MagicStick: () => magic_stick_default,
      Magnet: () => magnet_default,
      Male: () => male_default,
      Management: () => management_default,
      MapLocation: () => map_location_default,
      Medal: () => medal_default,
      Memo: () => memo_default,
      Menu: () => menu_default,
      Message: () => message_default,
      MessageBox: () => message_box_default,
      Mic: () => mic_default,
      Microphone: () => microphone_default,
      MilkTea: () => milk_tea_default,
      Minus: () => minus_default,
      Money: () => money_default,
      Monitor: () => monitor_default,
      Moon: () => moon_default,
      MoonNight: () => moon_night_default,
      More: () => more_default,
      MoreFilled: () => more_filled_default,
      MostlyCloudy: () => mostly_cloudy_default,
      Mouse: () => mouse_default,
      Mug: () => mug_default,
      Mute: () => mute_default,
      MuteNotification: () => mute_notification_default,
      NoSmoking: () => no_smoking_default,
      Notebook: () => notebook_default,
      Notification: () => notification_default,
      Odometer: () => odometer_default,
      OfficeBuilding: () => office_building_default,
      Open: () => open_default,
      Operation: () => operation_default,
      Opportunity: () => opportunity_default,
      Orange: () => orange_default,
      Paperclip: () => paperclip_default,
      PartlyCloudy: () => partly_cloudy_default,
      Pear: () => pear_default,
      Phone: () => phone_default,
      PhoneFilled: () => phone_filled_default,
      Picture: () => picture_default,
      PictureFilled: () => picture_filled_default,
      PictureRounded: () => picture_rounded_default,
      PieChart: () => pie_chart_default,
      Place: () => place_default,
      Platform: () => platform_default,
      Plus: () => plus_default,
      Pointer: () => pointer_default,
      Position: () => position_default,
      Postcard: () => postcard_default,
      Pouring: () => pouring_default,
      Present: () => present_default,
      PriceTag: () => price_tag_default,
      Printer: () => printer_default,
      Promotion: () => promotion_default,
      QuartzWatch: () => quartz_watch_default,
      QuestionFilled: () => question_filled_default,
      Rank: () => rank_default,
      Reading: () => reading_default,
      ReadingLamp: () => reading_lamp_default,
      Refresh: () => refresh_default,
      RefreshLeft: () => refresh_left_default,
      RefreshRight: () => refresh_right_default,
      Refrigerator: () => refrigerator_default,
      Remove: () => remove_default,
      RemoveFilled: () => remove_filled_default,
      Right: () => right_default,
      ScaleToOriginal: () => scale_to_original_default,
      School: () => school_default,
      Scissor: () => scissor_default,
      Search: () => search_default,
      Select: () => select_default,
      Sell: () => sell_default,
      SemiSelect: () => semi_select_default,
      Service: () => service_default,
      SetUp: () => set_up_default,
      Setting: () => setting_default,
      Share: () => share_default,
      Ship: () => ship_default,
      Shop: () => shop_default,
      ShoppingBag: () => shopping_bag_default,
      ShoppingCart: () => shopping_cart_default,
      ShoppingCartFull: () => shopping_cart_full_default,
      ShoppingTrolley: () => shopping_trolley_default,
      Smoking: () => smoking_default,
      Soccer: () => soccer_default,
      SoldOut: () => sold_out_default,
      Sort: () => sort_default,
      SortDown: () => sort_down_default,
      SortUp: () => sort_up_default,
      Stamp: () => stamp_default,
      Star: () => star_default,
      StarFilled: () => star_filled_default,
      Stopwatch: () => stopwatch_default,
      SuccessFilled: () => success_filled_default,
      Sugar: () => sugar_default,
      Suitcase: () => suitcase_default,
      SuitcaseLine: () => suitcase_line_default,
      Sunny: () => sunny_default,
      Sunrise: () => sunrise_default,
      Sunset: () => sunset_default,
      Switch: () => switch_default,
      SwitchButton: () => switch_button_default,
      SwitchFilled: () => switch_filled_default,
      TakeawayBox: () => takeaway_box_default,
      Ticket: () => ticket_default,
      Tickets: () => tickets_default,
      Timer: () => timer_default,
      ToiletPaper: () => toilet_paper_default,
      Tools: () => tools_default,
      Top: () => top_default,
      TopLeft: () => top_left_default,
      TopRight: () => top_right_default,
      TrendCharts: () => trend_charts_default,
      Trophy: () => trophy_default,
      TrophyBase: () => trophy_base_default,
      TurnOff: () => turn_off_default,
      Umbrella: () => umbrella_default,
      Unlock: () => unlock_default,
      Upload: () => upload_default,
      UploadFilled: () => upload_filled_default,
      User: () => user_default,
      UserFilled: () => user_filled_default,
      Van: () => van_default,
      VideoCamera: () => video_camera_default,
      VideoCameraFilled: () => video_camera_filled_default,
      VideoPause: () => video_pause_default,
      VideoPlay: () => video_play_default,
      View: () => view_default,
      Wallet: () => wallet_default,
      WalletFilled: () => wallet_filled_default,
      WarnTriangleFilled: () => warn_triangle_filled_default,
      Warning: () => warning_default,
      WarningFilled: () => warning_filled_default,
      Watch: () => watch_default,
      Watermelon: () => watermelon_default,
      WindPower: () => wind_power_default,
      ZoomIn: () => zoom_in_default,
      ZoomOut: () => zoom_out_default
    });
    module.exports = __toCommonJS2(src_exports);
    var import_vue = require_vue();
    var export_helper_default = (sfc, props) => {
      let target = sfc.__vccOpts || sfc;
      for (let [key, val] of props)
        target[key] = val;
      return target;
    };
    var _sfc_main = {
      name: "AddLocation"
    };
    var _hoisted_1 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2 = (0, import_vue.createElementVNode)("path", {
      fill: "currentColor",
      d: "M288 896h448q32 0 32 32t-32 32H288q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_3 = (0, import_vue.createElementVNode)("path", {
      fill: "currentColor",
      d: "M800 416a288 288 0 1 0-576 0c0 118.144 94.528 272.128 288 456.576C705.472 688.128 800 534.144 800 416zM512 960C277.312 746.688 160 565.312 160 416a352 352 0 0 1 704 0c0 149.312-117.312 330.688-352 544z"
    }, null, -1);
    var _hoisted_4 = (0, import_vue.createElementVNode)("path", {
      fill: "currentColor",
      d: "M544 384h96a32 32 0 1 1 0 64h-96v96a32 32 0 0 1-64 0v-96h-96a32 32 0 0 1 0-64h96v-96a32 32 0 0 1 64 0v96z"
    }, null, -1);
    var _hoisted_5 = [
      _hoisted_2,
      _hoisted_3,
      _hoisted_4
    ];
    function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue.openBlock)(), (0, import_vue.createElementBlock)("svg", _hoisted_1, _hoisted_5);
    }
    var add_location_default = export_helper_default(_sfc_main, [["render", _sfc_render], ["__file", "add-location.vue"]]);
    var import_vue2 = require_vue();
    var _sfc_main2 = {
      name: "Aim"
    };
    var _hoisted_12 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_22 = (0, import_vue2.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768zm0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"
    }, null, -1);
    var _hoisted_32 = (0, import_vue2.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 96a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V128a32 32 0 0 1 32-32zm0 576a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V704a32 32 0 0 1 32-32zM96 512a32 32 0 0 1 32-32h192a32 32 0 0 1 0 64H128a32 32 0 0 1-32-32zm576 0a32 32 0 0 1 32-32h192a32 32 0 1 1 0 64H704a32 32 0 0 1-32-32z"
    }, null, -1);
    var _hoisted_42 = [
      _hoisted_22,
      _hoisted_32
    ];
    function _sfc_render2(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)("svg", _hoisted_12, _hoisted_42);
    }
    var aim_default = export_helper_default(_sfc_main2, [["render", _sfc_render2], ["__file", "aim.vue"]]);
    var import_vue3 = require_vue();
    var _sfc_main3 = {
      name: "AlarmClock"
    };
    var _hoisted_13 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_23 = (0, import_vue3.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 832a320 320 0 1 0 0-640 320 320 0 0 0 0 640zm0 64a384 384 0 1 1 0-768 384 384 0 0 1 0 768z"
    }, null, -1);
    var _hoisted_33 = (0, import_vue3.createElementVNode)("path", {
      fill: "currentColor",
      d: "m292.288 824.576 55.424 32-48 83.136a32 32 0 1 1-55.424-32l48-83.136zm439.424 0-55.424 32 48 83.136a32 32 0 1 0 55.424-32l-48-83.136zM512 512h160a32 32 0 1 1 0 64H480a32 32 0 0 1-32-32V320a32 32 0 0 1 64 0v192zM90.496 312.256A160 160 0 0 1 312.32 90.496l-46.848 46.848a96 96 0 0 0-128 128L90.56 312.256zm835.264 0A160 160 0 0 0 704 90.496l46.848 46.848a96 96 0 0 1 128 128l46.912 46.912z"
    }, null, -1);
    var _hoisted_43 = [
      _hoisted_23,
      _hoisted_33
    ];
    function _sfc_render3(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue3.openBlock)(), (0, import_vue3.createElementBlock)("svg", _hoisted_13, _hoisted_43);
    }
    var alarm_clock_default = export_helper_default(_sfc_main3, [["render", _sfc_render3], ["__file", "alarm-clock.vue"]]);
    var import_vue4 = require_vue();
    var _sfc_main4 = {
      name: "Apple"
    };
    var _hoisted_14 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_24 = (0, import_vue4.createElementVNode)("path", {
      fill: "currentColor",
      d: "M599.872 203.776a189.44 189.44 0 0 1 64.384-4.672l2.624.128c31.168 1.024 51.2 4.096 79.488 16.32 37.632 16.128 74.496 45.056 111.488 89.344 96.384 115.264 82.752 372.8-34.752 521.728-7.68 9.728-32 41.6-30.72 39.936a426.624 426.624 0 0 1-30.08 35.776c-31.232 32.576-65.28 49.216-110.08 50.048-31.36.64-53.568-5.312-84.288-18.752l-6.528-2.88c-20.992-9.216-30.592-11.904-47.296-11.904-18.112 0-28.608 2.88-51.136 12.672l-6.464 2.816c-28.416 12.224-48.32 18.048-76.16 19.2-74.112 2.752-116.928-38.08-180.672-132.16-96.64-142.08-132.608-349.312-55.04-486.4 46.272-81.92 129.92-133.632 220.672-135.04 32.832-.576 60.288 6.848 99.648 22.72 27.136 10.88 34.752 13.76 37.376 14.272 16.256-20.16 27.776-36.992 34.56-50.24 13.568-26.304 27.2-59.968 40.704-100.8a32 32 0 1 1 60.8 20.224c-12.608 37.888-25.408 70.4-38.528 97.664zm-51.52 78.08c-14.528 17.792-31.808 37.376-51.904 58.816a32 32 0 1 1-46.72-43.776l12.288-13.248c-28.032-11.2-61.248-26.688-95.68-26.112-70.4 1.088-135.296 41.6-171.648 105.792C121.6 492.608 176 684.16 247.296 788.992c34.816 51.328 76.352 108.992 130.944 106.944 52.48-2.112 72.32-34.688 135.872-34.688 63.552 0 81.28 34.688 136.96 33.536 56.448-1.088 75.776-39.04 126.848-103.872 107.904-136.768 107.904-362.752 35.776-449.088-72.192-86.272-124.672-84.096-151.68-85.12-41.472-4.288-81.6 12.544-113.664 25.152z"
    }, null, -1);
    var _hoisted_34 = [
      _hoisted_24
    ];
    function _sfc_render4(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue4.openBlock)(), (0, import_vue4.createElementBlock)("svg", _hoisted_14, _hoisted_34);
    }
    var apple_default = export_helper_default(_sfc_main4, [["render", _sfc_render4], ["__file", "apple.vue"]]);
    var import_vue5 = require_vue();
    var _sfc_main5 = {
      name: "ArrowDownBold"
    };
    var _hoisted_15 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_25 = (0, import_vue5.createElementVNode)("path", {
      fill: "currentColor",
      d: "M104.704 338.752a64 64 0 0 1 90.496 0l316.8 316.8 316.8-316.8a64 64 0 0 1 90.496 90.496L557.248 791.296a64 64 0 0 1-90.496 0L104.704 429.248a64 64 0 0 1 0-90.496z"
    }, null, -1);
    var _hoisted_35 = [
      _hoisted_25
    ];
    function _sfc_render5(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue5.openBlock)(), (0, import_vue5.createElementBlock)("svg", _hoisted_15, _hoisted_35);
    }
    var arrow_down_bold_default = export_helper_default(_sfc_main5, [["render", _sfc_render5], ["__file", "arrow-down-bold.vue"]]);
    var import_vue6 = require_vue();
    var _sfc_main6 = {
      name: "ArrowDown"
    };
    var _hoisted_16 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_26 = (0, import_vue6.createElementVNode)("path", {
      fill: "currentColor",
      d: "M831.872 340.864 512 652.672 192.128 340.864a30.592 30.592 0 0 0-42.752 0 29.12 29.12 0 0 0 0 41.6L489.664 714.24a32 32 0 0 0 44.672 0l340.288-331.712a29.12 29.12 0 0 0 0-41.728 30.592 30.592 0 0 0-42.752 0z"
    }, null, -1);
    var _hoisted_36 = [
      _hoisted_26
    ];
    function _sfc_render6(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue6.openBlock)(), (0, import_vue6.createElementBlock)("svg", _hoisted_16, _hoisted_36);
    }
    var arrow_down_default = export_helper_default(_sfc_main6, [["render", _sfc_render6], ["__file", "arrow-down.vue"]]);
    var import_vue7 = require_vue();
    var _sfc_main7 = {
      name: "ArrowLeftBold"
    };
    var _hoisted_17 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_27 = (0, import_vue7.createElementVNode)("path", {
      fill: "currentColor",
      d: "M685.248 104.704a64 64 0 0 1 0 90.496L368.448 512l316.8 316.8a64 64 0 0 1-90.496 90.496L232.704 557.248a64 64 0 0 1 0-90.496l362.048-362.048a64 64 0 0 1 90.496 0z"
    }, null, -1);
    var _hoisted_37 = [
      _hoisted_27
    ];
    function _sfc_render7(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue7.openBlock)(), (0, import_vue7.createElementBlock)("svg", _hoisted_17, _hoisted_37);
    }
    var arrow_left_bold_default = export_helper_default(_sfc_main7, [["render", _sfc_render7], ["__file", "arrow-left-bold.vue"]]);
    var import_vue8 = require_vue();
    var _sfc_main8 = {
      name: "ArrowLeft"
    };
    var _hoisted_18 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_28 = (0, import_vue8.createElementVNode)("path", {
      fill: "currentColor",
      d: "M609.408 149.376 277.76 489.6a32 32 0 0 0 0 44.672l331.648 340.352a29.12 29.12 0 0 0 41.728 0 30.592 30.592 0 0 0 0-42.752L339.264 511.936l311.872-319.872a30.592 30.592 0 0 0 0-42.688 29.12 29.12 0 0 0-41.728 0z"
    }, null, -1);
    var _hoisted_38 = [
      _hoisted_28
    ];
    function _sfc_render8(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue8.openBlock)(), (0, import_vue8.createElementBlock)("svg", _hoisted_18, _hoisted_38);
    }
    var arrow_left_default = export_helper_default(_sfc_main8, [["render", _sfc_render8], ["__file", "arrow-left.vue"]]);
    var import_vue9 = require_vue();
    var _sfc_main9 = {
      name: "ArrowRightBold"
    };
    var _hoisted_19 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_29 = (0, import_vue9.createElementVNode)("path", {
      fill: "currentColor",
      d: "M338.752 104.704a64 64 0 0 0 0 90.496l316.8 316.8-316.8 316.8a64 64 0 0 0 90.496 90.496l362.048-362.048a64 64 0 0 0 0-90.496L429.248 104.704a64 64 0 0 0-90.496 0z"
    }, null, -1);
    var _hoisted_39 = [
      _hoisted_29
    ];
    function _sfc_render9(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue9.openBlock)(), (0, import_vue9.createElementBlock)("svg", _hoisted_19, _hoisted_39);
    }
    var arrow_right_bold_default = export_helper_default(_sfc_main9, [["render", _sfc_render9], ["__file", "arrow-right-bold.vue"]]);
    var import_vue10 = require_vue();
    var _sfc_main10 = {
      name: "ArrowRight"
    };
    var _hoisted_110 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_210 = (0, import_vue10.createElementVNode)("path", {
      fill: "currentColor",
      d: "M340.864 149.312a30.592 30.592 0 0 0 0 42.752L652.736 512 340.864 831.872a30.592 30.592 0 0 0 0 42.752 29.12 29.12 0 0 0 41.728 0L714.24 534.336a32 32 0 0 0 0-44.672L382.592 149.376a29.12 29.12 0 0 0-41.728 0z"
    }, null, -1);
    var _hoisted_310 = [
      _hoisted_210
    ];
    function _sfc_render10(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue10.openBlock)(), (0, import_vue10.createElementBlock)("svg", _hoisted_110, _hoisted_310);
    }
    var arrow_right_default = export_helper_default(_sfc_main10, [["render", _sfc_render10], ["__file", "arrow-right.vue"]]);
    var import_vue11 = require_vue();
    var _sfc_main11 = {
      name: "ArrowUpBold"
    };
    var _hoisted_111 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_211 = (0, import_vue11.createElementVNode)("path", {
      fill: "currentColor",
      d: "M104.704 685.248a64 64 0 0 0 90.496 0l316.8-316.8 316.8 316.8a64 64 0 0 0 90.496-90.496L557.248 232.704a64 64 0 0 0-90.496 0L104.704 594.752a64 64 0 0 0 0 90.496z"
    }, null, -1);
    var _hoisted_311 = [
      _hoisted_211
    ];
    function _sfc_render11(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue11.openBlock)(), (0, import_vue11.createElementBlock)("svg", _hoisted_111, _hoisted_311);
    }
    var arrow_up_bold_default = export_helper_default(_sfc_main11, [["render", _sfc_render11], ["__file", "arrow-up-bold.vue"]]);
    var import_vue12 = require_vue();
    var _sfc_main12 = {
      name: "ArrowUp"
    };
    var _hoisted_112 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_212 = (0, import_vue12.createElementVNode)("path", {
      fill: "currentColor",
      d: "m488.832 344.32-339.84 356.672a32 32 0 0 0 0 44.16l.384.384a29.44 29.44 0 0 0 42.688 0l320-335.872 319.872 335.872a29.44 29.44 0 0 0 42.688 0l.384-.384a32 32 0 0 0 0-44.16L535.168 344.32a32 32 0 0 0-46.336 0z"
    }, null, -1);
    var _hoisted_312 = [
      _hoisted_212
    ];
    function _sfc_render12(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue12.openBlock)(), (0, import_vue12.createElementBlock)("svg", _hoisted_112, _hoisted_312);
    }
    var arrow_up_default = export_helper_default(_sfc_main12, [["render", _sfc_render12], ["__file", "arrow-up.vue"]]);
    var import_vue13 = require_vue();
    var _sfc_main13 = {
      name: "Avatar"
    };
    var _hoisted_113 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_213 = (0, import_vue13.createElementVNode)("path", {
      fill: "currentColor",
      d: "M628.736 528.896A416 416 0 0 1 928 928H96a415.872 415.872 0 0 1 299.264-399.104L512 704l116.736-175.104zM720 304a208 208 0 1 1-416 0 208 208 0 0 1 416 0z"
    }, null, -1);
    var _hoisted_313 = [
      _hoisted_213
    ];
    function _sfc_render13(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue13.openBlock)(), (0, import_vue13.createElementBlock)("svg", _hoisted_113, _hoisted_313);
    }
    var avatar_default = export_helper_default(_sfc_main13, [["render", _sfc_render13], ["__file", "avatar.vue"]]);
    var import_vue14 = require_vue();
    var _sfc_main14 = {
      name: "Back"
    };
    var _hoisted_114 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_214 = (0, import_vue14.createElementVNode)("path", {
      fill: "currentColor",
      d: "M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z"
    }, null, -1);
    var _hoisted_314 = (0, import_vue14.createElementVNode)("path", {
      fill: "currentColor",
      d: "m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z"
    }, null, -1);
    var _hoisted_44 = [
      _hoisted_214,
      _hoisted_314
    ];
    function _sfc_render14(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue14.openBlock)(), (0, import_vue14.createElementBlock)("svg", _hoisted_114, _hoisted_44);
    }
    var back_default = export_helper_default(_sfc_main14, [["render", _sfc_render14], ["__file", "back.vue"]]);
    var import_vue15 = require_vue();
    var _sfc_main15 = {
      name: "Baseball"
    };
    var _hoisted_115 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_215 = (0, import_vue15.createElementVNode)("path", {
      fill: "currentColor",
      d: "M195.2 828.8a448 448 0 1 1 633.6-633.6 448 448 0 0 1-633.6 633.6zm45.248-45.248a384 384 0 1 0 543.104-543.104 384 384 0 0 0-543.104 543.104z"
    }, null, -1);
    var _hoisted_315 = (0, import_vue15.createElementVNode)("path", {
      fill: "currentColor",
      d: "M497.472 96.896c22.784 4.672 44.416 9.472 64.896 14.528a256.128 256.128 0 0 0 350.208 350.208c5.056 20.48 9.856 42.112 14.528 64.896A320.128 320.128 0 0 1 497.472 96.896zM108.48 491.904a320.128 320.128 0 0 1 423.616 423.68c-23.04-3.648-44.992-7.424-65.728-11.52a256.128 256.128 0 0 0-346.496-346.432 1736.64 1736.64 0 0 1-11.392-65.728z"
    }, null, -1);
    var _hoisted_45 = [
      _hoisted_215,
      _hoisted_315
    ];
    function _sfc_render15(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue15.openBlock)(), (0, import_vue15.createElementBlock)("svg", _hoisted_115, _hoisted_45);
    }
    var baseball_default = export_helper_default(_sfc_main15, [["render", _sfc_render15], ["__file", "baseball.vue"]]);
    var import_vue16 = require_vue();
    var _sfc_main16 = {
      name: "Basketball"
    };
    var _hoisted_116 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_216 = (0, import_vue16.createElementVNode)("path", {
      fill: "currentColor",
      d: "M778.752 788.224a382.464 382.464 0 0 0 116.032-245.632 256.512 256.512 0 0 0-241.728-13.952 762.88 762.88 0 0 1 125.696 259.584zm-55.04 44.224a699.648 699.648 0 0 0-125.056-269.632 256.128 256.128 0 0 0-56.064 331.968 382.72 382.72 0 0 0 181.12-62.336zm-254.08 61.248A320.128 320.128 0 0 1 557.76 513.6a715.84 715.84 0 0 0-48.192-48.128 320.128 320.128 0 0 1-379.264 88.384 382.4 382.4 0 0 0 110.144 229.696 382.4 382.4 0 0 0 229.184 110.08zM129.28 481.088a256.128 256.128 0 0 0 331.072-56.448 699.648 699.648 0 0 0-268.8-124.352 382.656 382.656 0 0 0-62.272 180.8zm106.56-235.84a762.88 762.88 0 0 1 258.688 125.056 256.512 256.512 0 0 0-13.44-241.088A382.464 382.464 0 0 0 235.84 245.248zm318.08-114.944c40.576 89.536 37.76 193.92-8.448 281.344a779.84 779.84 0 0 1 66.176 66.112 320.832 320.832 0 0 1 282.112-8.128 382.4 382.4 0 0 0-110.144-229.12 382.4 382.4 0 0 0-229.632-110.208zM828.8 828.8a448 448 0 1 1-633.6-633.6 448 448 0 0 1 633.6 633.6z"
    }, null, -1);
    var _hoisted_316 = [
      _hoisted_216
    ];
    function _sfc_render16(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue16.openBlock)(), (0, import_vue16.createElementBlock)("svg", _hoisted_116, _hoisted_316);
    }
    var basketball_default = export_helper_default(_sfc_main16, [["render", _sfc_render16], ["__file", "basketball.vue"]]);
    var import_vue17 = require_vue();
    var _sfc_main17 = {
      name: "BellFilled"
    };
    var _hoisted_117 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_217 = (0, import_vue17.createElementVNode)("path", {
      fill: "currentColor",
      d: "M640 832a128 128 0 0 1-256 0h256zm192-64H134.4a38.4 38.4 0 0 1 0-76.8H192V448c0-154.88 110.08-284.16 256.32-313.6a64 64 0 1 1 127.36 0A320.128 320.128 0 0 1 832 448v243.2h57.6a38.4 38.4 0 0 1 0 76.8H832z"
    }, null, -1);
    var _hoisted_317 = [
      _hoisted_217
    ];
    function _sfc_render17(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue17.openBlock)(), (0, import_vue17.createElementBlock)("svg", _hoisted_117, _hoisted_317);
    }
    var bell_filled_default = export_helper_default(_sfc_main17, [["render", _sfc_render17], ["__file", "bell-filled.vue"]]);
    var import_vue18 = require_vue();
    var _sfc_main18 = {
      name: "Bell"
    };
    var _hoisted_118 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_218 = (0, import_vue18.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a64 64 0 0 1 64 64v64H448v-64a64 64 0 0 1 64-64z"
    }, null, -1);
    var _hoisted_318 = (0, import_vue18.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 768h512V448a256 256 0 1 0-512 0v320zm256-640a320 320 0 0 1 320 320v384H192V448a320 320 0 0 1 320-320z"
    }, null, -1);
    var _hoisted_46 = (0, import_vue18.createElementVNode)("path", {
      fill: "currentColor",
      d: "M96 768h832q32 0 32 32t-32 32H96q-32 0-32-32t32-32zm352 128h128a64 64 0 0 1-128 0z"
    }, null, -1);
    var _hoisted_52 = [
      _hoisted_218,
      _hoisted_318,
      _hoisted_46
    ];
    function _sfc_render18(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue18.openBlock)(), (0, import_vue18.createElementBlock)("svg", _hoisted_118, _hoisted_52);
    }
    var bell_default = export_helper_default(_sfc_main18, [["render", _sfc_render18], ["__file", "bell.vue"]]);
    var import_vue19 = require_vue();
    var _sfc_main19 = {
      name: "Bicycle"
    };
    var _hoisted_119 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_219 = (0, import_vue19.createStaticVNode)('<path fill="currentColor" d="M256 832a128 128 0 1 0 0-256 128 128 0 0 0 0 256zm0 64a192 192 0 1 1 0-384 192 192 0 0 1 0 384z"></path><path fill="currentColor" d="M288 672h320q32 0 32 32t-32 32H288q-32 0-32-32t32-32z"></path><path fill="currentColor" d="M768 832a128 128 0 1 0 0-256 128 128 0 0 0 0 256zm0 64a192 192 0 1 1 0-384 192 192 0 0 1 0 384z"></path><path fill="currentColor" d="M480 192a32 32 0 0 1 0-64h160a32 32 0 0 1 31.04 24.256l96 384a32 32 0 0 1-62.08 15.488L615.04 192H480zM96 384a32 32 0 0 1 0-64h128a32 32 0 0 1 30.336 21.888l64 192a32 32 0 1 1-60.672 20.224L200.96 384H96z"></path><path fill="currentColor" d="m373.376 599.808-42.752-47.616 320-288 42.752 47.616z"></path>', 5);
    var _hoisted_7 = [
      _hoisted_219
    ];
    function _sfc_render19(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue19.openBlock)(), (0, import_vue19.createElementBlock)("svg", _hoisted_119, _hoisted_7);
    }
    var bicycle_default = export_helper_default(_sfc_main19, [["render", _sfc_render19], ["__file", "bicycle.vue"]]);
    var import_vue20 = require_vue();
    var _sfc_main20 = {
      name: "BottomLeft"
    };
    var _hoisted_120 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_220 = (0, import_vue20.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 768h416a32 32 0 1 1 0 64H224a32 32 0 0 1-32-32V352a32 32 0 0 1 64 0v416z"
    }, null, -1);
    var _hoisted_319 = (0, import_vue20.createElementVNode)("path", {
      fill: "currentColor",
      d: "M246.656 822.656a32 32 0 0 1-45.312-45.312l544-544a32 32 0 0 1 45.312 45.312l-544 544z"
    }, null, -1);
    var _hoisted_47 = [
      _hoisted_220,
      _hoisted_319
    ];
    function _sfc_render20(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue20.openBlock)(), (0, import_vue20.createElementBlock)("svg", _hoisted_120, _hoisted_47);
    }
    var bottom_left_default = export_helper_default(_sfc_main20, [["render", _sfc_render20], ["__file", "bottom-left.vue"]]);
    var import_vue21 = require_vue();
    var _sfc_main21 = {
      name: "BottomRight"
    };
    var _hoisted_121 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_221 = (0, import_vue21.createElementVNode)("path", {
      fill: "currentColor",
      d: "M352 768a32 32 0 1 0 0 64h448a32 32 0 0 0 32-32V352a32 32 0 0 0-64 0v416H352z"
    }, null, -1);
    var _hoisted_320 = (0, import_vue21.createElementVNode)("path", {
      fill: "currentColor",
      d: "M777.344 822.656a32 32 0 0 0 45.312-45.312l-544-544a32 32 0 0 0-45.312 45.312l544 544z"
    }, null, -1);
    var _hoisted_48 = [
      _hoisted_221,
      _hoisted_320
    ];
    function _sfc_render21(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue21.openBlock)(), (0, import_vue21.createElementBlock)("svg", _hoisted_121, _hoisted_48);
    }
    var bottom_right_default = export_helper_default(_sfc_main21, [["render", _sfc_render21], ["__file", "bottom-right.vue"]]);
    var import_vue22 = require_vue();
    var _sfc_main22 = {
      name: "Bottom"
    };
    var _hoisted_122 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_222 = (0, import_vue22.createElementVNode)("path", {
      fill: "currentColor",
      d: "M544 805.888V168a32 32 0 1 0-64 0v637.888L246.656 557.952a30.72 30.72 0 0 0-45.312 0 35.52 35.52 0 0 0 0 48.064l288 306.048a30.72 30.72 0 0 0 45.312 0l288-306.048a35.52 35.52 0 0 0 0-48 30.72 30.72 0 0 0-45.312 0L544 805.824z"
    }, null, -1);
    var _hoisted_321 = [
      _hoisted_222
    ];
    function _sfc_render22(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue22.openBlock)(), (0, import_vue22.createElementBlock)("svg", _hoisted_122, _hoisted_321);
    }
    var bottom_default = export_helper_default(_sfc_main22, [["render", _sfc_render22], ["__file", "bottom.vue"]]);
    var import_vue23 = require_vue();
    var _sfc_main23 = {
      name: "Bowl"
    };
    var _hoisted_123 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_223 = (0, import_vue23.createElementVNode)("path", {
      fill: "currentColor",
      d: "M714.432 704a351.744 351.744 0 0 0 148.16-256H161.408a351.744 351.744 0 0 0 148.16 256h404.864zM288 766.592A415.68 415.68 0 0 1 96 416a32 32 0 0 1 32-32h768a32 32 0 0 1 32 32 415.68 415.68 0 0 1-192 350.592V832a64 64 0 0 1-64 64H352a64 64 0 0 1-64-64v-65.408zM493.248 320h-90.496l254.4-254.4a32 32 0 1 1 45.248 45.248L493.248 320zm187.328 0h-128l269.696-155.712a32 32 0 0 1 32 55.424L680.576 320zM352 768v64h320v-64H352z"
    }, null, -1);
    var _hoisted_322 = [
      _hoisted_223
    ];
    function _sfc_render23(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue23.openBlock)(), (0, import_vue23.createElementBlock)("svg", _hoisted_123, _hoisted_322);
    }
    var bowl_default = export_helper_default(_sfc_main23, [["render", _sfc_render23], ["__file", "bowl.vue"]]);
    var import_vue24 = require_vue();
    var _sfc_main24 = {
      name: "Box"
    };
    var _hoisted_124 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_224 = (0, import_vue24.createElementVNode)("path", {
      fill: "currentColor",
      d: "M317.056 128 128 344.064V896h768V344.064L706.944 128H317.056zm-14.528-64h418.944a32 32 0 0 1 24.064 10.88l206.528 236.096A32 32 0 0 1 960 332.032V928a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V332.032a32 32 0 0 1 7.936-21.12L278.4 75.008A32 32 0 0 1 302.528 64z"
    }, null, -1);
    var _hoisted_323 = (0, import_vue24.createElementVNode)("path", {
      fill: "currentColor",
      d: "M64 320h896v64H64z"
    }, null, -1);
    var _hoisted_49 = (0, import_vue24.createElementVNode)("path", {
      fill: "currentColor",
      d: "M448 327.872V640h128V327.872L526.08 128h-28.16L448 327.872zM448 64h128l64 256v352a32 32 0 0 1-32 32H416a32 32 0 0 1-32-32V320l64-256z"
    }, null, -1);
    var _hoisted_53 = [
      _hoisted_224,
      _hoisted_323,
      _hoisted_49
    ];
    function _sfc_render24(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue24.openBlock)(), (0, import_vue24.createElementBlock)("svg", _hoisted_124, _hoisted_53);
    }
    var box_default = export_helper_default(_sfc_main24, [["render", _sfc_render24], ["__file", "box.vue"]]);
    var import_vue25 = require_vue();
    var _sfc_main25 = {
      name: "Briefcase"
    };
    var _hoisted_125 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_225 = (0, import_vue25.createElementVNode)("path", {
      fill: "currentColor",
      d: "M320 320V128h384v192h192v192H128V320h192zM128 576h768v320H128V576zm256-256h256.064V192H384v128z"
    }, null, -1);
    var _hoisted_324 = [
      _hoisted_225
    ];
    function _sfc_render25(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue25.openBlock)(), (0, import_vue25.createElementBlock)("svg", _hoisted_125, _hoisted_324);
    }
    var briefcase_default = export_helper_default(_sfc_main25, [["render", _sfc_render25], ["__file", "briefcase.vue"]]);
    var import_vue26 = require_vue();
    var _sfc_main26 = {
      name: "BrushFilled"
    };
    var _hoisted_126 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_226 = (0, import_vue26.createElementVNode)("path", {
      fill: "currentColor",
      d: "M608 704v160a96 96 0 0 1-192 0V704h-96a128 128 0 0 1-128-128h640a128 128 0 0 1-128 128h-96zM192 512V128.064h640V512H192z"
    }, null, -1);
    var _hoisted_325 = [
      _hoisted_226
    ];
    function _sfc_render26(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue26.openBlock)(), (0, import_vue26.createElementBlock)("svg", _hoisted_126, _hoisted_325);
    }
    var brush_filled_default = export_helper_default(_sfc_main26, [["render", _sfc_render26], ["__file", "brush-filled.vue"]]);
    var import_vue27 = require_vue();
    var _sfc_main27 = {
      name: "Brush"
    };
    var _hoisted_127 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_227 = (0, import_vue27.createElementVNode)("path", {
      fill: "currentColor",
      d: "M896 448H128v192a64 64 0 0 0 64 64h192v192h256V704h192a64 64 0 0 0 64-64V448zm-770.752-64c0-47.552 5.248-90.24 15.552-128 14.72-54.016 42.496-107.392 83.2-160h417.28l-15.36 70.336L736 96h211.2c-24.832 42.88-41.92 96.256-51.2 160a663.872 663.872 0 0 0-6.144 128H960v256a128 128 0 0 1-128 128H704v160a32 32 0 0 1-32 32H352a32 32 0 0 1-32-32V768H192A128 128 0 0 1 64 640V384h61.248zm64 0h636.544c-2.048-45.824.256-91.584 6.848-137.216 4.48-30.848 10.688-59.776 18.688-86.784h-96.64l-221.12 141.248L561.92 160H256.512c-25.856 37.888-43.776 75.456-53.952 112.832-8.768 32.064-13.248 69.12-13.312 111.168z"
    }, null, -1);
    var _hoisted_326 = [
      _hoisted_227
    ];
    function _sfc_render27(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue27.openBlock)(), (0, import_vue27.createElementBlock)("svg", _hoisted_127, _hoisted_326);
    }
    var brush_default = export_helper_default(_sfc_main27, [["render", _sfc_render27], ["__file", "brush.vue"]]);
    var import_vue28 = require_vue();
    var _sfc_main28 = {
      name: "Burger"
    };
    var _hoisted_128 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_228 = (0, import_vue28.createElementVNode)("path", {
      fill: "currentColor",
      d: "M160 512a32 32 0 0 0-32 32v64a32 32 0 0 0 30.08 32H864a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32H160zm736-58.56A96 96 0 0 1 960 544v64a96 96 0 0 1-51.968 85.312L855.36 833.6a96 96 0 0 1-89.856 62.272H258.496A96 96 0 0 1 168.64 833.6l-52.608-140.224A96 96 0 0 1 64 608v-64a96 96 0 0 1 64-90.56V448a384 384 0 1 1 768 5.44zM832 448a320 320 0 0 0-640 0h640zM512 704H188.352l40.192 107.136a32 32 0 0 0 29.952 20.736h507.008a32 32 0 0 0 29.952-20.736L835.648 704H512z"
    }, null, -1);
    var _hoisted_327 = [
      _hoisted_228
    ];
    function _sfc_render28(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue28.openBlock)(), (0, import_vue28.createElementBlock)("svg", _hoisted_128, _hoisted_327);
    }
    var burger_default = export_helper_default(_sfc_main28, [["render", _sfc_render28], ["__file", "burger.vue"]]);
    var import_vue29 = require_vue();
    var _sfc_main29 = {
      name: "Calendar"
    };
    var _hoisted_129 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_229 = (0, import_vue29.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 384v512h768V192H768v32a32 32 0 1 1-64 0v-32H320v32a32 32 0 0 1-64 0v-32H128v128h768v64H128zm192-256h384V96a32 32 0 1 1 64 0v32h160a32 32 0 0 1 32 32v768a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32h160V96a32 32 0 0 1 64 0v32zm-32 384h64a32 32 0 0 1 0 64h-64a32 32 0 0 1 0-64zm0 192h64a32 32 0 1 1 0 64h-64a32 32 0 1 1 0-64zm192-192h64a32 32 0 0 1 0 64h-64a32 32 0 0 1 0-64zm0 192h64a32 32 0 1 1 0 64h-64a32 32 0 1 1 0-64zm192-192h64a32 32 0 1 1 0 64h-64a32 32 0 1 1 0-64zm0 192h64a32 32 0 1 1 0 64h-64a32 32 0 1 1 0-64z"
    }, null, -1);
    var _hoisted_328 = [
      _hoisted_229
    ];
    function _sfc_render29(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue29.openBlock)(), (0, import_vue29.createElementBlock)("svg", _hoisted_129, _hoisted_328);
    }
    var calendar_default = export_helper_default(_sfc_main29, [["render", _sfc_render29], ["__file", "calendar.vue"]]);
    var import_vue30 = require_vue();
    var _sfc_main30 = {
      name: "CameraFilled"
    };
    var _hoisted_130 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_230 = (0, import_vue30.createElementVNode)("path", {
      fill: "currentColor",
      d: "M160 224a64 64 0 0 0-64 64v512a64 64 0 0 0 64 64h704a64 64 0 0 0 64-64V288a64 64 0 0 0-64-64H748.416l-46.464-92.672A64 64 0 0 0 644.736 96H379.328a64 64 0 0 0-57.216 35.392L275.776 224H160zm352 435.2a115.2 115.2 0 1 0 0-230.4 115.2 115.2 0 0 0 0 230.4zm0 140.8a256 256 0 1 1 0-512 256 256 0 0 1 0 512z"
    }, null, -1);
    var _hoisted_329 = [
      _hoisted_230
    ];
    function _sfc_render30(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue30.openBlock)(), (0, import_vue30.createElementBlock)("svg", _hoisted_130, _hoisted_329);
    }
    var camera_filled_default = export_helper_default(_sfc_main30, [["render", _sfc_render30], ["__file", "camera-filled.vue"]]);
    var import_vue31 = require_vue();
    var _sfc_main31 = {
      name: "Camera"
    };
    var _hoisted_131 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_231 = (0, import_vue31.createElementVNode)("path", {
      fill: "currentColor",
      d: "M896 256H128v576h768V256zm-199.424-64-32.064-64h-304.96l-32 64h369.024zM96 192h160l46.336-92.608A64 64 0 0 1 359.552 64h304.96a64 64 0 0 1 57.216 35.328L768.192 192H928a32 32 0 0 1 32 32v640a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V224a32 32 0 0 1 32-32zm416 512a160 160 0 1 0 0-320 160 160 0 0 0 0 320zm0 64a224 224 0 1 1 0-448 224 224 0 0 1 0 448z"
    }, null, -1);
    var _hoisted_330 = [
      _hoisted_231
    ];
    function _sfc_render31(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue31.openBlock)(), (0, import_vue31.createElementBlock)("svg", _hoisted_131, _hoisted_330);
    }
    var camera_default = export_helper_default(_sfc_main31, [["render", _sfc_render31], ["__file", "camera.vue"]]);
    var import_vue32 = require_vue();
    var _sfc_main32 = {
      name: "CaretBottom"
    };
    var _hoisted_132 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_232 = (0, import_vue32.createElementVNode)("path", {
      fill: "currentColor",
      d: "m192 384 320 384 320-384z"
    }, null, -1);
    var _hoisted_331 = [
      _hoisted_232
    ];
    function _sfc_render32(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue32.openBlock)(), (0, import_vue32.createElementBlock)("svg", _hoisted_132, _hoisted_331);
    }
    var caret_bottom_default = export_helper_default(_sfc_main32, [["render", _sfc_render32], ["__file", "caret-bottom.vue"]]);
    var import_vue33 = require_vue();
    var _sfc_main33 = {
      name: "CaretLeft"
    };
    var _hoisted_133 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_233 = (0, import_vue33.createElementVNode)("path", {
      fill: "currentColor",
      d: "M672 192 288 511.936 672 832z"
    }, null, -1);
    var _hoisted_332 = [
      _hoisted_233
    ];
    function _sfc_render33(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue33.openBlock)(), (0, import_vue33.createElementBlock)("svg", _hoisted_133, _hoisted_332);
    }
    var caret_left_default = export_helper_default(_sfc_main33, [["render", _sfc_render33], ["__file", "caret-left.vue"]]);
    var import_vue34 = require_vue();
    var _sfc_main34 = {
      name: "CaretRight"
    };
    var _hoisted_134 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_234 = (0, import_vue34.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 192v640l384-320.064z"
    }, null, -1);
    var _hoisted_333 = [
      _hoisted_234
    ];
    function _sfc_render34(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue34.openBlock)(), (0, import_vue34.createElementBlock)("svg", _hoisted_134, _hoisted_333);
    }
    var caret_right_default = export_helper_default(_sfc_main34, [["render", _sfc_render34], ["__file", "caret-right.vue"]]);
    var import_vue35 = require_vue();
    var _sfc_main35 = {
      name: "CaretTop"
    };
    var _hoisted_135 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_235 = (0, import_vue35.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 320 192 704h639.936z"
    }, null, -1);
    var _hoisted_334 = [
      _hoisted_235
    ];
    function _sfc_render35(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue35.openBlock)(), (0, import_vue35.createElementBlock)("svg", _hoisted_135, _hoisted_334);
    }
    var caret_top_default = export_helper_default(_sfc_main35, [["render", _sfc_render35], ["__file", "caret-top.vue"]]);
    var import_vue36 = require_vue();
    var _sfc_main36 = {
      name: "Cellphone"
    };
    var _hoisted_136 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_236 = (0, import_vue36.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 128a64 64 0 0 0-64 64v640a64 64 0 0 0 64 64h512a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H256zm0-64h512a128 128 0 0 1 128 128v640a128 128 0 0 1-128 128H256a128 128 0 0 1-128-128V192A128 128 0 0 1 256 64zm128 128h256a32 32 0 1 1 0 64H384a32 32 0 0 1 0-64zm128 640a64 64 0 1 1 0-128 64 64 0 0 1 0 128z"
    }, null, -1);
    var _hoisted_335 = [
      _hoisted_236
    ];
    function _sfc_render36(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue36.openBlock)(), (0, import_vue36.createElementBlock)("svg", _hoisted_136, _hoisted_335);
    }
    var cellphone_default = export_helper_default(_sfc_main36, [["render", _sfc_render36], ["__file", "cellphone.vue"]]);
    var import_vue37 = require_vue();
    var _sfc_main37 = {
      name: "ChatDotRound"
    };
    var _hoisted_137 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_237 = (0, import_vue37.createElementVNode)("path", {
      fill: "currentColor",
      d: "m174.72 855.68 135.296-45.12 23.68 11.84C388.096 849.536 448.576 864 512 864c211.84 0 384-166.784 384-352S723.84 160 512 160 128 326.784 128 512c0 69.12 24.96 139.264 70.848 199.232l22.08 28.8-46.272 115.584zm-45.248 82.56A32 32 0 0 1 89.6 896l58.368-145.92C94.72 680.32 64 596.864 64 512 64 299.904 256 96 512 96s448 203.904 448 416-192 416-448 416a461.056 461.056 0 0 1-206.912-48.384l-175.616 58.56z"
    }, null, -1);
    var _hoisted_336 = (0, import_vue37.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 563.2a51.2 51.2 0 1 1 0-102.4 51.2 51.2 0 0 1 0 102.4zm192 0a51.2 51.2 0 1 1 0-102.4 51.2 51.2 0 0 1 0 102.4zm-384 0a51.2 51.2 0 1 1 0-102.4 51.2 51.2 0 0 1 0 102.4z"
    }, null, -1);
    var _hoisted_410 = [
      _hoisted_237,
      _hoisted_336
    ];
    function _sfc_render37(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue37.openBlock)(), (0, import_vue37.createElementBlock)("svg", _hoisted_137, _hoisted_410);
    }
    var chat_dot_round_default = export_helper_default(_sfc_main37, [["render", _sfc_render37], ["__file", "chat-dot-round.vue"]]);
    var import_vue38 = require_vue();
    var _sfc_main38 = {
      name: "ChatDotSquare"
    };
    var _hoisted_138 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_238 = (0, import_vue38.createElementVNode)("path", {
      fill: "currentColor",
      d: "M273.536 736H800a64 64 0 0 0 64-64V256a64 64 0 0 0-64-64H224a64 64 0 0 0-64 64v570.88L273.536 736zM296 800 147.968 918.4A32 32 0 0 1 96 893.44V256a128 128 0 0 1 128-128h576a128 128 0 0 1 128 128v416a128 128 0 0 1-128 128H296z"
    }, null, -1);
    var _hoisted_337 = (0, import_vue38.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 499.2a51.2 51.2 0 1 1 0-102.4 51.2 51.2 0 0 1 0 102.4zm192 0a51.2 51.2 0 1 1 0-102.4 51.2 51.2 0 0 1 0 102.4zm-384 0a51.2 51.2 0 1 1 0-102.4 51.2 51.2 0 0 1 0 102.4z"
    }, null, -1);
    var _hoisted_411 = [
      _hoisted_238,
      _hoisted_337
    ];
    function _sfc_render38(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue38.openBlock)(), (0, import_vue38.createElementBlock)("svg", _hoisted_138, _hoisted_411);
    }
    var chat_dot_square_default = export_helper_default(_sfc_main38, [["render", _sfc_render38], ["__file", "chat-dot-square.vue"]]);
    var import_vue39 = require_vue();
    var _sfc_main39 = {
      name: "ChatLineRound"
    };
    var _hoisted_139 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_239 = (0, import_vue39.createElementVNode)("path", {
      fill: "currentColor",
      d: "m174.72 855.68 135.296-45.12 23.68 11.84C388.096 849.536 448.576 864 512 864c211.84 0 384-166.784 384-352S723.84 160 512 160 128 326.784 128 512c0 69.12 24.96 139.264 70.848 199.232l22.08 28.8-46.272 115.584zm-45.248 82.56A32 32 0 0 1 89.6 896l58.368-145.92C94.72 680.32 64 596.864 64 512 64 299.904 256 96 512 96s448 203.904 448 416-192 416-448 416a461.056 461.056 0 0 1-206.912-48.384l-175.616 58.56z"
    }, null, -1);
    var _hoisted_338 = (0, import_vue39.createElementVNode)("path", {
      fill: "currentColor",
      d: "M352 576h320q32 0 32 32t-32 32H352q-32 0-32-32t32-32zm32-192h256q32 0 32 32t-32 32H384q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_412 = [
      _hoisted_239,
      _hoisted_338
    ];
    function _sfc_render39(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue39.openBlock)(), (0, import_vue39.createElementBlock)("svg", _hoisted_139, _hoisted_412);
    }
    var chat_line_round_default = export_helper_default(_sfc_main39, [["render", _sfc_render39], ["__file", "chat-line-round.vue"]]);
    var import_vue40 = require_vue();
    var _sfc_main40 = {
      name: "ChatLineSquare"
    };
    var _hoisted_140 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_240 = (0, import_vue40.createElementVNode)("path", {
      fill: "currentColor",
      d: "M160 826.88 273.536 736H800a64 64 0 0 0 64-64V256a64 64 0 0 0-64-64H224a64 64 0 0 0-64 64v570.88zM296 800 147.968 918.4A32 32 0 0 1 96 893.44V256a128 128 0 0 1 128-128h576a128 128 0 0 1 128 128v416a128 128 0 0 1-128 128H296z"
    }, null, -1);
    var _hoisted_339 = (0, import_vue40.createElementVNode)("path", {
      fill: "currentColor",
      d: "M352 512h320q32 0 32 32t-32 32H352q-32 0-32-32t32-32zm0-192h320q32 0 32 32t-32 32H352q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_413 = [
      _hoisted_240,
      _hoisted_339
    ];
    function _sfc_render40(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue40.openBlock)(), (0, import_vue40.createElementBlock)("svg", _hoisted_140, _hoisted_413);
    }
    var chat_line_square_default = export_helper_default(_sfc_main40, [["render", _sfc_render40], ["__file", "chat-line-square.vue"]]);
    var import_vue41 = require_vue();
    var _sfc_main41 = {
      name: "ChatRound"
    };
    var _hoisted_141 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_241 = (0, import_vue41.createElementVNode)("path", {
      fill: "currentColor",
      d: "m174.72 855.68 130.048-43.392 23.424 11.392C382.4 849.984 444.352 864 512 864c223.744 0 384-159.872 384-352 0-192.832-159.104-352-384-352S128 319.168 128 512a341.12 341.12 0 0 0 69.248 204.288l21.632 28.8-44.16 110.528zm-45.248 82.56A32 32 0 0 1 89.6 896l56.512-141.248A405.12 405.12 0 0 1 64 512C64 299.904 235.648 96 512 96s448 203.904 448 416-173.44 416-448 416c-79.68 0-150.848-17.152-211.712-46.72l-170.88 56.96z"
    }, null, -1);
    var _hoisted_340 = [
      _hoisted_241
    ];
    function _sfc_render41(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue41.openBlock)(), (0, import_vue41.createElementBlock)("svg", _hoisted_141, _hoisted_340);
    }
    var chat_round_default = export_helper_default(_sfc_main41, [["render", _sfc_render41], ["__file", "chat-round.vue"]]);
    var import_vue42 = require_vue();
    var _sfc_main42 = {
      name: "ChatSquare"
    };
    var _hoisted_142 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_242 = (0, import_vue42.createElementVNode)("path", {
      fill: "currentColor",
      d: "M273.536 736H800a64 64 0 0 0 64-64V256a64 64 0 0 0-64-64H224a64 64 0 0 0-64 64v570.88L273.536 736zM296 800 147.968 918.4A32 32 0 0 1 96 893.44V256a128 128 0 0 1 128-128h576a128 128 0 0 1 128 128v416a128 128 0 0 1-128 128H296z"
    }, null, -1);
    var _hoisted_341 = [
      _hoisted_242
    ];
    function _sfc_render42(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue42.openBlock)(), (0, import_vue42.createElementBlock)("svg", _hoisted_142, _hoisted_341);
    }
    var chat_square_default = export_helper_default(_sfc_main42, [["render", _sfc_render42], ["__file", "chat-square.vue"]]);
    var import_vue43 = require_vue();
    var _sfc_main43 = {
      name: "Check"
    };
    var _hoisted_143 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_243 = (0, import_vue43.createElementVNode)("path", {
      fill: "currentColor",
      d: "M406.656 706.944 195.84 496.256a32 32 0 1 0-45.248 45.248l256 256 512-512a32 32 0 0 0-45.248-45.248L406.592 706.944z"
    }, null, -1);
    var _hoisted_342 = [
      _hoisted_243
    ];
    function _sfc_render43(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue43.openBlock)(), (0, import_vue43.createElementBlock)("svg", _hoisted_143, _hoisted_342);
    }
    var check_default = export_helper_default(_sfc_main43, [["render", _sfc_render43], ["__file", "check.vue"]]);
    var import_vue44 = require_vue();
    var _sfc_main44 = {
      name: "Checked"
    };
    var _hoisted_144 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_244 = (0, import_vue44.createElementVNode)("path", {
      fill: "currentColor",
      d: "M704 192h160v736H160V192h160.064v64H704v-64zM311.616 537.28l-45.312 45.248L447.36 763.52l316.8-316.8-45.312-45.184L447.36 673.024 311.616 537.28zM384 192V96h256v96H384z"
    }, null, -1);
    var _hoisted_343 = [
      _hoisted_244
    ];
    function _sfc_render44(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue44.openBlock)(), (0, import_vue44.createElementBlock)("svg", _hoisted_144, _hoisted_343);
    }
    var checked_default = export_helper_default(_sfc_main44, [["render", _sfc_render44], ["__file", "checked.vue"]]);
    var import_vue45 = require_vue();
    var _sfc_main45 = {
      name: "Cherry"
    };
    var _hoisted_145 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_245 = (0, import_vue45.createElementVNode)("path", {
      fill: "currentColor",
      d: "M261.056 449.6c13.824-69.696 34.88-128.96 63.36-177.728 23.744-40.832 61.12-88.64 112.256-143.872H320a32 32 0 0 1 0-64h384a32 32 0 1 1 0 64H554.752c14.912 39.168 41.344 86.592 79.552 141.76 47.36 68.48 84.8 106.752 106.304 114.304a224 224 0 1 1-84.992 14.784c-22.656-22.912-47.04-53.76-73.92-92.608-38.848-56.128-67.008-105.792-84.352-149.312-55.296 58.24-94.528 107.52-117.76 147.2-23.168 39.744-41.088 88.768-53.568 147.072a224.064 224.064 0 1 1-64.96-1.6zM288 832a160 160 0 1 0 0-320 160 160 0 0 0 0 320zm448-64a160 160 0 1 0 0-320 160 160 0 0 0 0 320z"
    }, null, -1);
    var _hoisted_344 = [
      _hoisted_245
    ];
    function _sfc_render45(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue45.openBlock)(), (0, import_vue45.createElementBlock)("svg", _hoisted_145, _hoisted_344);
    }
    var cherry_default = export_helper_default(_sfc_main45, [["render", _sfc_render45], ["__file", "cherry.vue"]]);
    var import_vue46 = require_vue();
    var _sfc_main46 = {
      name: "Chicken"
    };
    var _hoisted_146 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_246 = (0, import_vue46.createElementVNode)("path", {
      fill: "currentColor",
      d: "M349.952 716.992 478.72 588.16a106.688 106.688 0 0 1-26.176-19.072 106.688 106.688 0 0 1-19.072-26.176L304.704 671.744c.768 3.072 1.472 6.144 2.048 9.216l2.048 31.936 31.872 1.984c3.136.64 6.208 1.28 9.28 2.112zm57.344 33.152a128 128 0 1 1-216.32 114.432l-1.92-32-32-1.92a128 128 0 1 1 114.432-216.32L416.64 469.248c-2.432-101.44 58.112-239.104 149.056-330.048 107.328-107.328 231.296-85.504 316.8 0 85.44 85.44 107.328 209.408 0 316.8-91.008 90.88-228.672 151.424-330.112 149.056L407.296 750.08zm90.496-226.304c49.536 49.536 233.344-7.04 339.392-113.088 78.208-78.208 63.232-163.072 0-226.304-63.168-63.232-148.032-78.208-226.24 0C504.896 290.496 448.32 474.368 497.792 523.84zM244.864 708.928a64 64 0 1 0-59.84 59.84l56.32-3.52 3.52-56.32zm8.064 127.68a64 64 0 1 0 59.84-59.84l-56.32 3.52-3.52 56.32z"
    }, null, -1);
    var _hoisted_345 = [
      _hoisted_246
    ];
    function _sfc_render46(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue46.openBlock)(), (0, import_vue46.createElementBlock)("svg", _hoisted_146, _hoisted_345);
    }
    var chicken_default = export_helper_default(_sfc_main46, [["render", _sfc_render46], ["__file", "chicken.vue"]]);
    var import_vue47 = require_vue();
    var _sfc_main47 = {
      name: "ChromeFilled"
    };
    var _hoisted_147 = {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      style: { "enable-background": "new 0 0 1024 1024" },
      "xml:space": "preserve"
    };
    var _hoisted_247 = (0, import_vue47.createElementVNode)("path", {
      d: "M938.67 512.01c0-44.59-6.82-87.6-19.54-128H682.67a212.372 212.372 0 0 1 42.67 128c.06 38.71-10.45 76.7-30.42 109.87l-182.91 316.8c235.65-.01 426.66-191.02 426.66-426.67z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_346 = (0, import_vue47.createElementVNode)("path", {
      d: "M576.79 401.63a127.92 127.92 0 0 0-63.56-17.6c-22.36-.22-44.39 5.43-63.89 16.38s-35.79 26.82-47.25 46.02a128.005 128.005 0 0 0-2.16 127.44l1.24 2.13a127.906 127.906 0 0 0 46.36 46.61 127.907 127.907 0 0 0 63.38 17.44c22.29.2 44.24-5.43 63.68-16.33a127.94 127.94 0 0 0 47.16-45.79v-.01l1.11-1.92a127.984 127.984 0 0 0 .29-127.46 127.957 127.957 0 0 0-46.36-46.91z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_414 = (0, import_vue47.createElementVNode)("path", {
      d: "M394.45 333.96A213.336 213.336 0 0 1 512 298.67h369.58A426.503 426.503 0 0 0 512 85.34a425.598 425.598 0 0 0-171.74 35.98 425.644 425.644 0 0 0-142.62 102.22l118.14 204.63a213.397 213.397 0 0 1 78.67-94.21zM512.01 938.68H512zM414.76 701.95a213.284 213.284 0 0 1-89.54-86.81L142.48 298.6c-36.35 62.81-57.13 135.68-57.13 213.42 0 203.81 142.93 374.22 333.95 416.55h.04l118.19-204.71a213.315 213.315 0 0 1-122.77-21.91z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_54 = [
      _hoisted_247,
      _hoisted_346,
      _hoisted_414
    ];
    function _sfc_render47(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue47.openBlock)(), (0, import_vue47.createElementBlock)("svg", _hoisted_147, _hoisted_54);
    }
    var chrome_filled_default = export_helper_default(_sfc_main47, [["render", _sfc_render47], ["__file", "chrome-filled.vue"]]);
    var import_vue48 = require_vue();
    var _sfc_main48 = {
      name: "CircleCheckFilled"
    };
    var _hoisted_148 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_248 = (0, import_vue48.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm-55.808 536.384-99.52-99.584a38.4 38.4 0 1 0-54.336 54.336l126.72 126.72a38.272 38.272 0 0 0 54.336 0l262.4-262.464a38.4 38.4 0 1 0-54.272-54.336L456.192 600.384z"
    }, null, -1);
    var _hoisted_347 = [
      _hoisted_248
    ];
    function _sfc_render48(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue48.openBlock)(), (0, import_vue48.createElementBlock)("svg", _hoisted_148, _hoisted_347);
    }
    var circle_check_filled_default = export_helper_default(_sfc_main48, [["render", _sfc_render48], ["__file", "circle-check-filled.vue"]]);
    var import_vue49 = require_vue();
    var _sfc_main49 = {
      name: "CircleCheck"
    };
    var _hoisted_149 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_249 = (0, import_vue49.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768zm0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"
    }, null, -1);
    var _hoisted_348 = (0, import_vue49.createElementVNode)("path", {
      fill: "currentColor",
      d: "M745.344 361.344a32 32 0 0 1 45.312 45.312l-288 288a32 32 0 0 1-45.312 0l-160-160a32 32 0 1 1 45.312-45.312L480 626.752l265.344-265.408z"
    }, null, -1);
    var _hoisted_415 = [
      _hoisted_249,
      _hoisted_348
    ];
    function _sfc_render49(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue49.openBlock)(), (0, import_vue49.createElementBlock)("svg", _hoisted_149, _hoisted_415);
    }
    var circle_check_default = export_helper_default(_sfc_main49, [["render", _sfc_render49], ["__file", "circle-check.vue"]]);
    var import_vue50 = require_vue();
    var _sfc_main50 = {
      name: "CircleCloseFilled"
    };
    var _hoisted_150 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_250 = (0, import_vue50.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm0 393.664L407.936 353.6a38.4 38.4 0 1 0-54.336 54.336L457.664 512 353.6 616.064a38.4 38.4 0 1 0 54.336 54.336L512 566.336 616.064 670.4a38.4 38.4 0 1 0 54.336-54.336L566.336 512 670.4 407.936a38.4 38.4 0 1 0-54.336-54.336L512 457.664z"
    }, null, -1);
    var _hoisted_349 = [
      _hoisted_250
    ];
    function _sfc_render50(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue50.openBlock)(), (0, import_vue50.createElementBlock)("svg", _hoisted_150, _hoisted_349);
    }
    var circle_close_filled_default = export_helper_default(_sfc_main50, [["render", _sfc_render50], ["__file", "circle-close-filled.vue"]]);
    var import_vue51 = require_vue();
    var _sfc_main51 = {
      name: "CircleClose"
    };
    var _hoisted_151 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_251 = (0, import_vue51.createElementVNode)("path", {
      fill: "currentColor",
      d: "m466.752 512-90.496-90.496a32 32 0 0 1 45.248-45.248L512 466.752l90.496-90.496a32 32 0 1 1 45.248 45.248L557.248 512l90.496 90.496a32 32 0 1 1-45.248 45.248L512 557.248l-90.496 90.496a32 32 0 0 1-45.248-45.248L466.752 512z"
    }, null, -1);
    var _hoisted_350 = (0, import_vue51.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768zm0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"
    }, null, -1);
    var _hoisted_416 = [
      _hoisted_251,
      _hoisted_350
    ];
    function _sfc_render51(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue51.openBlock)(), (0, import_vue51.createElementBlock)("svg", _hoisted_151, _hoisted_416);
    }
    var circle_close_default = export_helper_default(_sfc_main51, [["render", _sfc_render51], ["__file", "circle-close.vue"]]);
    var import_vue52 = require_vue();
    var _sfc_main52 = {
      name: "CirclePlusFilled"
    };
    var _hoisted_152 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_252 = (0, import_vue52.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm-38.4 409.6H326.4a38.4 38.4 0 1 0 0 76.8h147.2v147.2a38.4 38.4 0 0 0 76.8 0V550.4h147.2a38.4 38.4 0 0 0 0-76.8H550.4V326.4a38.4 38.4 0 1 0-76.8 0v147.2z"
    }, null, -1);
    var _hoisted_351 = [
      _hoisted_252
    ];
    function _sfc_render52(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue52.openBlock)(), (0, import_vue52.createElementBlock)("svg", _hoisted_152, _hoisted_351);
    }
    var circle_plus_filled_default = export_helper_default(_sfc_main52, [["render", _sfc_render52], ["__file", "circle-plus-filled.vue"]]);
    var import_vue53 = require_vue();
    var _sfc_main53 = {
      name: "CirclePlus"
    };
    var _hoisted_153 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_253 = (0, import_vue53.createElementVNode)("path", {
      fill: "currentColor",
      d: "M352 480h320a32 32 0 1 1 0 64H352a32 32 0 0 1 0-64z"
    }, null, -1);
    var _hoisted_352 = (0, import_vue53.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 672V352a32 32 0 1 1 64 0v320a32 32 0 0 1-64 0z"
    }, null, -1);
    var _hoisted_417 = (0, import_vue53.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768zm0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"
    }, null, -1);
    var _hoisted_55 = [
      _hoisted_253,
      _hoisted_352,
      _hoisted_417
    ];
    function _sfc_render53(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue53.openBlock)(), (0, import_vue53.createElementBlock)("svg", _hoisted_153, _hoisted_55);
    }
    var circle_plus_default = export_helper_default(_sfc_main53, [["render", _sfc_render53], ["__file", "circle-plus.vue"]]);
    var import_vue54 = require_vue();
    var _sfc_main54 = {
      name: "Clock"
    };
    var _hoisted_154 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_254 = (0, import_vue54.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768zm0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"
    }, null, -1);
    var _hoisted_353 = (0, import_vue54.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 256a32 32 0 0 1 32 32v256a32 32 0 0 1-64 0V288a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_418 = (0, import_vue54.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 512h256q32 0 32 32t-32 32H480q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_56 = [
      _hoisted_254,
      _hoisted_353,
      _hoisted_418
    ];
    function _sfc_render54(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue54.openBlock)(), (0, import_vue54.createElementBlock)("svg", _hoisted_154, _hoisted_56);
    }
    var clock_default = export_helper_default(_sfc_main54, [["render", _sfc_render54], ["__file", "clock.vue"]]);
    var import_vue55 = require_vue();
    var _sfc_main55 = {
      name: "CloseBold"
    };
    var _hoisted_155 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_255 = (0, import_vue55.createElementVNode)("path", {
      fill: "currentColor",
      d: "M195.2 195.2a64 64 0 0 1 90.496 0L512 421.504 738.304 195.2a64 64 0 0 1 90.496 90.496L602.496 512 828.8 738.304a64 64 0 0 1-90.496 90.496L512 602.496 285.696 828.8a64 64 0 0 1-90.496-90.496L421.504 512 195.2 285.696a64 64 0 0 1 0-90.496z"
    }, null, -1);
    var _hoisted_354 = [
      _hoisted_255
    ];
    function _sfc_render55(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue55.openBlock)(), (0, import_vue55.createElementBlock)("svg", _hoisted_155, _hoisted_354);
    }
    var close_bold_default = export_helper_default(_sfc_main55, [["render", _sfc_render55], ["__file", "close-bold.vue"]]);
    var import_vue56 = require_vue();
    var _sfc_main56 = {
      name: "Close"
    };
    var _hoisted_156 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_256 = (0, import_vue56.createElementVNode)("path", {
      fill: "currentColor",
      d: "M764.288 214.592 512 466.88 259.712 214.592a31.936 31.936 0 0 0-45.12 45.12L466.752 512 214.528 764.224a31.936 31.936 0 1 0 45.12 45.184L512 557.184l252.288 252.288a31.936 31.936 0 0 0 45.12-45.12L557.12 512.064l252.288-252.352a31.936 31.936 0 1 0-45.12-45.184z"
    }, null, -1);
    var _hoisted_355 = [
      _hoisted_256
    ];
    function _sfc_render56(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue56.openBlock)(), (0, import_vue56.createElementBlock)("svg", _hoisted_156, _hoisted_355);
    }
    var close_default = export_helper_default(_sfc_main56, [["render", _sfc_render56], ["__file", "close.vue"]]);
    var import_vue57 = require_vue();
    var _sfc_main57 = {
      name: "Cloudy"
    };
    var _hoisted_157 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_257 = (0, import_vue57.createElementVNode)("path", {
      fill: "currentColor",
      d: "M598.4 831.872H328.192a256 256 0 0 1-34.496-510.528A352 352 0 1 1 598.4 831.872zm-271.36-64h272.256a288 288 0 1 0-248.512-417.664L335.04 381.44l-34.816 3.584a192 192 0 0 0 26.88 382.848z"
    }, null, -1);
    var _hoisted_356 = [
      _hoisted_257
    ];
    function _sfc_render57(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue57.openBlock)(), (0, import_vue57.createElementBlock)("svg", _hoisted_157, _hoisted_356);
    }
    var cloudy_default = export_helper_default(_sfc_main57, [["render", _sfc_render57], ["__file", "cloudy.vue"]]);
    var import_vue58 = require_vue();
    var _sfc_main58 = {
      name: "CoffeeCup"
    };
    var _hoisted_158 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_258 = (0, import_vue58.createElementVNode)("path", {
      fill: "currentColor",
      d: "M768 192a192 192 0 1 1-8 383.808A256.128 256.128 0 0 1 512 768H320A256 256 0 0 1 64 512V160a32 32 0 0 1 32-32h640a32 32 0 0 1 32 32v32zm0 64v256a128 128 0 1 0 0-256zM96 832h640a32 32 0 1 1 0 64H96a32 32 0 1 1 0-64zm32-640v320a192 192 0 0 0 192 192h192a192 192 0 0 0 192-192V192H128z"
    }, null, -1);
    var _hoisted_357 = [
      _hoisted_258
    ];
    function _sfc_render58(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue58.openBlock)(), (0, import_vue58.createElementBlock)("svg", _hoisted_158, _hoisted_357);
    }
    var coffee_cup_default = export_helper_default(_sfc_main58, [["render", _sfc_render58], ["__file", "coffee-cup.vue"]]);
    var import_vue59 = require_vue();
    var _sfc_main59 = {
      name: "Coffee"
    };
    var _hoisted_159 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_259 = (0, import_vue59.createElementVNode)("path", {
      fill: "currentColor",
      d: "M822.592 192h14.272a32 32 0 0 1 31.616 26.752l21.312 128A32 32 0 0 1 858.24 384h-49.344l-39.04 546.304A32 32 0 0 1 737.92 960H285.824a32 32 0 0 1-32-29.696L214.912 384H165.76a32 32 0 0 1-31.552-37.248l21.312-128A32 32 0 0 1 187.136 192h14.016l-6.72-93.696A32 32 0 0 1 226.368 64h571.008a32 32 0 0 1 31.936 34.304L822.592 192zm-64.128 0 4.544-64H260.736l4.544 64h493.184zm-548.16 128H820.48l-10.688-64H214.208l-10.688 64h6.784zm68.736 64 36.544 512H708.16l36.544-512H279.04z"
    }, null, -1);
    var _hoisted_358 = [
      _hoisted_259
    ];
    function _sfc_render59(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue59.openBlock)(), (0, import_vue59.createElementBlock)("svg", _hoisted_159, _hoisted_358);
    }
    var coffee_default = export_helper_default(_sfc_main59, [["render", _sfc_render59], ["__file", "coffee.vue"]]);
    var import_vue60 = require_vue();
    var _sfc_main60 = {
      name: "Coin"
    };
    var _hoisted_160 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_260 = (0, import_vue60.createElementVNode)("path", {
      fill: "currentColor",
      d: "m161.92 580.736 29.888 58.88C171.328 659.776 160 681.728 160 704c0 82.304 155.328 160 352 160s352-77.696 352-160c0-22.272-11.392-44.16-31.808-64.32l30.464-58.432C903.936 615.808 928 657.664 928 704c0 129.728-188.544 224-416 224S96 833.728 96 704c0-46.592 24.32-88.576 65.92-123.264z"
    }, null, -1);
    var _hoisted_359 = (0, import_vue60.createElementVNode)("path", {
      fill: "currentColor",
      d: "m161.92 388.736 29.888 58.88C171.328 467.84 160 489.792 160 512c0 82.304 155.328 160 352 160s352-77.696 352-160c0-22.272-11.392-44.16-31.808-64.32l30.464-58.432C903.936 423.808 928 465.664 928 512c0 129.728-188.544 224-416 224S96 641.728 96 512c0-46.592 24.32-88.576 65.92-123.264z"
    }, null, -1);
    var _hoisted_419 = (0, import_vue60.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 544c-227.456 0-416-94.272-416-224S284.544 96 512 96s416 94.272 416 224-188.544 224-416 224zm0-64c196.672 0 352-77.696 352-160S708.672 160 512 160s-352 77.696-352 160 155.328 160 352 160z"
    }, null, -1);
    var _hoisted_57 = [
      _hoisted_260,
      _hoisted_359,
      _hoisted_419
    ];
    function _sfc_render60(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue60.openBlock)(), (0, import_vue60.createElementBlock)("svg", _hoisted_160, _hoisted_57);
    }
    var coin_default = export_helper_default(_sfc_main60, [["render", _sfc_render60], ["__file", "coin.vue"]]);
    var import_vue61 = require_vue();
    var _sfc_main61 = {
      name: "ColdDrink"
    };
    var _hoisted_161 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_261 = (0, import_vue61.createElementVNode)("path", {
      fill: "currentColor",
      d: "M768 64a192 192 0 1 1-69.952 370.88L480 725.376V896h96a32 32 0 1 1 0 64H320a32 32 0 1 1 0-64h96V725.376L76.8 273.536a64 64 0 0 1-12.8-38.4v-10.688a32 32 0 0 1 32-32h71.808l-65.536-83.84a32 32 0 0 1 50.432-39.424l96.256 123.264h337.728A192.064 192.064 0 0 1 768 64zM656.896 192.448H800a32 32 0 0 1 32 32v10.624a64 64 0 0 1-12.8 38.4l-80.448 107.2a128 128 0 1 0-81.92-188.16v-.064zm-357.888 64 129.472 165.76a32 32 0 0 1-50.432 39.36l-160.256-205.12H144l304 404.928 304-404.928H299.008z"
    }, null, -1);
    var _hoisted_360 = [
      _hoisted_261
    ];
    function _sfc_render61(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue61.openBlock)(), (0, import_vue61.createElementBlock)("svg", _hoisted_161, _hoisted_360);
    }
    var cold_drink_default = export_helper_default(_sfc_main61, [["render", _sfc_render61], ["__file", "cold-drink.vue"]]);
    var import_vue62 = require_vue();
    var _sfc_main62 = {
      name: "CollectionTag"
    };
    var _hoisted_162 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_262 = (0, import_vue62.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 128v698.88l196.032-156.864a96 96 0 0 1 119.936 0L768 826.816V128H256zm-32-64h576a32 32 0 0 1 32 32v797.44a32 32 0 0 1-51.968 24.96L531.968 720a32 32 0 0 0-39.936 0L243.968 918.4A32 32 0 0 1 192 893.44V96a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_361 = [
      _hoisted_262
    ];
    function _sfc_render62(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue62.openBlock)(), (0, import_vue62.createElementBlock)("svg", _hoisted_162, _hoisted_361);
    }
    var collection_tag_default = export_helper_default(_sfc_main62, [["render", _sfc_render62], ["__file", "collection-tag.vue"]]);
    var import_vue63 = require_vue();
    var _sfc_main63 = {
      name: "Collection"
    };
    var _hoisted_163 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_263 = (0, import_vue63.createElementVNode)("path", {
      fill: "currentColor",
      d: "M192 736h640V128H256a64 64 0 0 0-64 64v544zm64-672h608a32 32 0 0 1 32 32v672a32 32 0 0 1-32 32H160l-32 57.536V192A128 128 0 0 1 256 64z"
    }, null, -1);
    var _hoisted_362 = (0, import_vue63.createElementVNode)("path", {
      fill: "currentColor",
      d: "M240 800a48 48 0 1 0 0 96h592v-96H240zm0-64h656v160a64 64 0 0 1-64 64H240a112 112 0 0 1 0-224zm144-608v250.88l96-76.8 96 76.8V128H384zm-64-64h320v381.44a32 32 0 0 1-51.968 24.96L480 384l-108.032 86.4A32 32 0 0 1 320 445.44V64z"
    }, null, -1);
    var _hoisted_420 = [
      _hoisted_263,
      _hoisted_362
    ];
    function _sfc_render63(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue63.openBlock)(), (0, import_vue63.createElementBlock)("svg", _hoisted_163, _hoisted_420);
    }
    var collection_default = export_helper_default(_sfc_main63, [["render", _sfc_render63], ["__file", "collection.vue"]]);
    var import_vue64 = require_vue();
    var _sfc_main64 = {
      name: "Comment"
    };
    var _hoisted_164 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_264 = (0, import_vue64.createElementVNode)("path", {
      fill: "currentColor",
      d: "M736 504a56 56 0 1 1 0-112 56 56 0 0 1 0 112zm-224 0a56 56 0 1 1 0-112 56 56 0 0 1 0 112zm-224 0a56 56 0 1 1 0-112 56 56 0 0 1 0 112zM128 128v640h192v160l224-160h352V128H128z"
    }, null, -1);
    var _hoisted_363 = [
      _hoisted_264
    ];
    function _sfc_render64(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue64.openBlock)(), (0, import_vue64.createElementBlock)("svg", _hoisted_164, _hoisted_363);
    }
    var comment_default = export_helper_default(_sfc_main64, [["render", _sfc_render64], ["__file", "comment.vue"]]);
    var import_vue65 = require_vue();
    var _sfc_main65 = {
      name: "Compass"
    };
    var _hoisted_165 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_265 = (0, import_vue65.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768zm0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"
    }, null, -1);
    var _hoisted_364 = (0, import_vue65.createElementVNode)("path", {
      fill: "currentColor",
      d: "M725.888 315.008C676.48 428.672 624 513.28 568.576 568.64c-55.424 55.424-139.968 107.904-253.568 157.312a12.8 12.8 0 0 1-16.896-16.832c49.536-113.728 102.016-198.272 157.312-253.632 55.36-55.296 139.904-107.776 253.632-157.312a12.8 12.8 0 0 1 16.832 16.832z"
    }, null, -1);
    var _hoisted_421 = [
      _hoisted_265,
      _hoisted_364
    ];
    function _sfc_render65(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue65.openBlock)(), (0, import_vue65.createElementBlock)("svg", _hoisted_165, _hoisted_421);
    }
    var compass_default = export_helper_default(_sfc_main65, [["render", _sfc_render65], ["__file", "compass.vue"]]);
    var import_vue66 = require_vue();
    var _sfc_main66 = {
      name: "Connection"
    };
    var _hoisted_166 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_266 = (0, import_vue66.createElementVNode)("path", {
      fill: "currentColor",
      d: "M640 384v64H448a128 128 0 0 0-128 128v128a128 128 0 0 0 128 128h320a128 128 0 0 0 128-128V576a128 128 0 0 0-64-110.848V394.88c74.56 26.368 128 97.472 128 181.056v128a192 192 0 0 1-192 192H448a192 192 0 0 1-192-192V576a192 192 0 0 1 192-192h192z"
    }, null, -1);
    var _hoisted_365 = (0, import_vue66.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 640v-64h192a128 128 0 0 0 128-128V320a128 128 0 0 0-128-128H256a128 128 0 0 0-128 128v128a128 128 0 0 0 64 110.848v70.272A192.064 192.064 0 0 1 64 448V320a192 192 0 0 1 192-192h320a192 192 0 0 1 192 192v128a192 192 0 0 1-192 192H384z"
    }, null, -1);
    var _hoisted_422 = [
      _hoisted_266,
      _hoisted_365
    ];
    function _sfc_render66(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue66.openBlock)(), (0, import_vue66.createElementBlock)("svg", _hoisted_166, _hoisted_422);
    }
    var connection_default = export_helper_default(_sfc_main66, [["render", _sfc_render66], ["__file", "connection.vue"]]);
    var import_vue67 = require_vue();
    var _sfc_main67 = {
      name: "Coordinate"
    };
    var _hoisted_167 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_267 = (0, import_vue67.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 512h64v320h-64z"
    }, null, -1);
    var _hoisted_366 = (0, import_vue67.createElementVNode)("path", {
      fill: "currentColor",
      d: "M192 896h640a64 64 0 0 0-64-64H256a64 64 0 0 0-64 64zm64-128h512a128 128 0 0 1 128 128v64H128v-64a128 128 0 0 1 128-128zm256-256a192 192 0 1 0 0-384 192 192 0 0 0 0 384zm0 64a256 256 0 1 1 0-512 256 256 0 0 1 0 512z"
    }, null, -1);
    var _hoisted_423 = [
      _hoisted_267,
      _hoisted_366
    ];
    function _sfc_render67(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue67.openBlock)(), (0, import_vue67.createElementBlock)("svg", _hoisted_167, _hoisted_423);
    }
    var coordinate_default = export_helper_default(_sfc_main67, [["render", _sfc_render67], ["__file", "coordinate.vue"]]);
    var import_vue68 = require_vue();
    var _sfc_main68 = {
      name: "CopyDocument"
    };
    var _hoisted_168 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_268 = (0, import_vue68.createElementVNode)("path", {
      fill: "currentColor",
      d: "M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"
    }, null, -1);
    var _hoisted_367 = (0, import_vue68.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"
    }, null, -1);
    var _hoisted_424 = [
      _hoisted_268,
      _hoisted_367
    ];
    function _sfc_render68(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue68.openBlock)(), (0, import_vue68.createElementBlock)("svg", _hoisted_168, _hoisted_424);
    }
    var copy_document_default = export_helper_default(_sfc_main68, [["render", _sfc_render68], ["__file", "copy-document.vue"]]);
    var import_vue69 = require_vue();
    var _sfc_main69 = {
      name: "Cpu"
    };
    var _hoisted_169 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_269 = (0, import_vue69.createElementVNode)("path", {
      fill: "currentColor",
      d: "M320 256a64 64 0 0 0-64 64v384a64 64 0 0 0 64 64h384a64 64 0 0 0 64-64V320a64 64 0 0 0-64-64H320zm0-64h384a128 128 0 0 1 128 128v384a128 128 0 0 1-128 128H320a128 128 0 0 1-128-128V320a128 128 0 0 1 128-128z"
    }, null, -1);
    var _hoisted_368 = (0, import_vue69.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a32 32 0 0 1 32 32v128h-64V96a32 32 0 0 1 32-32zm160 0a32 32 0 0 1 32 32v128h-64V96a32 32 0 0 1 32-32zm-320 0a32 32 0 0 1 32 32v128h-64V96a32 32 0 0 1 32-32zm160 896a32 32 0 0 1-32-32V800h64v128a32 32 0 0 1-32 32zm160 0a32 32 0 0 1-32-32V800h64v128a32 32 0 0 1-32 32zm-320 0a32 32 0 0 1-32-32V800h64v128a32 32 0 0 1-32 32zM64 512a32 32 0 0 1 32-32h128v64H96a32 32 0 0 1-32-32zm0-160a32 32 0 0 1 32-32h128v64H96a32 32 0 0 1-32-32zm0 320a32 32 0 0 1 32-32h128v64H96a32 32 0 0 1-32-32zm896-160a32 32 0 0 1-32 32H800v-64h128a32 32 0 0 1 32 32zm0-160a32 32 0 0 1-32 32H800v-64h128a32 32 0 0 1 32 32zm0 320a32 32 0 0 1-32 32H800v-64h128a32 32 0 0 1 32 32z"
    }, null, -1);
    var _hoisted_425 = [
      _hoisted_269,
      _hoisted_368
    ];
    function _sfc_render69(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue69.openBlock)(), (0, import_vue69.createElementBlock)("svg", _hoisted_169, _hoisted_425);
    }
    var cpu_default = export_helper_default(_sfc_main69, [["render", _sfc_render69], ["__file", "cpu.vue"]]);
    var import_vue70 = require_vue();
    var _sfc_main70 = {
      name: "CreditCard"
    };
    var _hoisted_170 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_270 = (0, import_vue70.createElementVNode)("path", {
      fill: "currentColor",
      d: "M896 324.096c0-42.368-2.496-55.296-9.536-68.48a52.352 52.352 0 0 0-22.144-22.08c-13.12-7.04-26.048-9.536-68.416-9.536H228.096c-42.368 0-55.296 2.496-68.48 9.536a52.352 52.352 0 0 0-22.08 22.144c-7.04 13.12-9.536 26.048-9.536 68.416v375.808c0 42.368 2.496 55.296 9.536 68.48a52.352 52.352 0 0 0 22.144 22.08c13.12 7.04 26.048 9.536 68.416 9.536h567.808c42.368 0 55.296-2.496 68.48-9.536a52.352 52.352 0 0 0 22.08-22.144c7.04-13.12 9.536-26.048 9.536-68.416V324.096zm64 0v375.808c0 57.088-5.952 77.76-17.088 98.56-11.136 20.928-27.52 37.312-48.384 48.448-20.864 11.136-41.6 17.088-98.56 17.088H228.032c-57.088 0-77.76-5.952-98.56-17.088a116.288 116.288 0 0 1-48.448-48.384c-11.136-20.864-17.088-41.6-17.088-98.56V324.032c0-57.088 5.952-77.76 17.088-98.56 11.136-20.928 27.52-37.312 48.384-48.448 20.864-11.136 41.6-17.088 98.56-17.088H795.84c57.088 0 77.76 5.952 98.56 17.088 20.928 11.136 37.312 27.52 48.448 48.384 11.136 20.864 17.088 41.6 17.088 98.56z"
    }, null, -1);
    var _hoisted_369 = (0, import_vue70.createElementVNode)("path", {
      fill: "currentColor",
      d: "M64 320h896v64H64v-64zm0 128h896v64H64v-64zm128 192h256v64H192z"
    }, null, -1);
    var _hoisted_426 = [
      _hoisted_270,
      _hoisted_369
    ];
    function _sfc_render70(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue70.openBlock)(), (0, import_vue70.createElementBlock)("svg", _hoisted_170, _hoisted_426);
    }
    var credit_card_default = export_helper_default(_sfc_main70, [["render", _sfc_render70], ["__file", "credit-card.vue"]]);
    var import_vue71 = require_vue();
    var _sfc_main71 = {
      name: "Crop"
    };
    var _hoisted_171 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_271 = (0, import_vue71.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 768h672a32 32 0 1 1 0 64H224a32 32 0 0 1-32-32V96a32 32 0 0 1 64 0v672z"
    }, null, -1);
    var _hoisted_370 = (0, import_vue71.createElementVNode)("path", {
      fill: "currentColor",
      d: "M832 224v704a32 32 0 1 1-64 0V256H96a32 32 0 0 1 0-64h704a32 32 0 0 1 32 32z"
    }, null, -1);
    var _hoisted_427 = [
      _hoisted_271,
      _hoisted_370
    ];
    function _sfc_render71(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue71.openBlock)(), (0, import_vue71.createElementBlock)("svg", _hoisted_171, _hoisted_427);
    }
    var crop_default = export_helper_default(_sfc_main71, [["render", _sfc_render71], ["__file", "crop.vue"]]);
    var import_vue72 = require_vue();
    var _sfc_main72 = {
      name: "DArrowLeft"
    };
    var _hoisted_172 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_272 = (0, import_vue72.createElementVNode)("path", {
      fill: "currentColor",
      d: "M529.408 149.376a29.12 29.12 0 0 1 41.728 0 30.592 30.592 0 0 1 0 42.688L259.264 511.936l311.872 319.936a30.592 30.592 0 0 1-.512 43.264 29.12 29.12 0 0 1-41.216-.512L197.76 534.272a32 32 0 0 1 0-44.672l331.648-340.224zm256 0a29.12 29.12 0 0 1 41.728 0 30.592 30.592 0 0 1 0 42.688L515.264 511.936l311.872 319.936a30.592 30.592 0 0 1-.512 43.264 29.12 29.12 0 0 1-41.216-.512L453.76 534.272a32 32 0 0 1 0-44.672l331.648-340.224z"
    }, null, -1);
    var _hoisted_371 = [
      _hoisted_272
    ];
    function _sfc_render72(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue72.openBlock)(), (0, import_vue72.createElementBlock)("svg", _hoisted_172, _hoisted_371);
    }
    var d_arrow_left_default = export_helper_default(_sfc_main72, [["render", _sfc_render72], ["__file", "d-arrow-left.vue"]]);
    var import_vue73 = require_vue();
    var _sfc_main73 = {
      name: "DArrowRight"
    };
    var _hoisted_173 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_273 = (0, import_vue73.createElementVNode)("path", {
      fill: "currentColor",
      d: "M452.864 149.312a29.12 29.12 0 0 1 41.728.064L826.24 489.664a32 32 0 0 1 0 44.672L494.592 874.624a29.12 29.12 0 0 1-41.728 0 30.592 30.592 0 0 1 0-42.752L764.736 512 452.864 192a30.592 30.592 0 0 1 0-42.688zm-256 0a29.12 29.12 0 0 1 41.728.064L570.24 489.664a32 32 0 0 1 0 44.672L238.592 874.624a29.12 29.12 0 0 1-41.728 0 30.592 30.592 0 0 1 0-42.752L508.736 512 196.864 192a30.592 30.592 0 0 1 0-42.688z"
    }, null, -1);
    var _hoisted_372 = [
      _hoisted_273
    ];
    function _sfc_render73(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue73.openBlock)(), (0, import_vue73.createElementBlock)("svg", _hoisted_173, _hoisted_372);
    }
    var d_arrow_right_default = export_helper_default(_sfc_main73, [["render", _sfc_render73], ["__file", "d-arrow-right.vue"]]);
    var import_vue74 = require_vue();
    var _sfc_main74 = {
      name: "DCaret"
    };
    var _hoisted_174 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_274 = (0, import_vue74.createElementVNode)("path", {
      fill: "currentColor",
      d: "m512 128 288 320H224l288-320zM224 576h576L512 896 224 576z"
    }, null, -1);
    var _hoisted_373 = [
      _hoisted_274
    ];
    function _sfc_render74(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue74.openBlock)(), (0, import_vue74.createElementBlock)("svg", _hoisted_174, _hoisted_373);
    }
    var d_caret_default = export_helper_default(_sfc_main74, [["render", _sfc_render74], ["__file", "d-caret.vue"]]);
    var import_vue75 = require_vue();
    var _sfc_main75 = {
      name: "DataAnalysis"
    };
    var _hoisted_175 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_275 = (0, import_vue75.createElementVNode)("path", {
      fill: "currentColor",
      d: "m665.216 768 110.848 192h-73.856L591.36 768H433.024L322.176 960H248.32l110.848-192H160a32 32 0 0 1-32-32V192H64a32 32 0 0 1 0-64h896a32 32 0 1 1 0 64h-64v544a32 32 0 0 1-32 32H665.216zM832 192H192v512h640V192zM352 448a32 32 0 0 1 32 32v64a32 32 0 0 1-64 0v-64a32 32 0 0 1 32-32zm160-64a32 32 0 0 1 32 32v128a32 32 0 0 1-64 0V416a32 32 0 0 1 32-32zm160-64a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V352a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_374 = [
      _hoisted_275
    ];
    function _sfc_render75(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue75.openBlock)(), (0, import_vue75.createElementBlock)("svg", _hoisted_175, _hoisted_374);
    }
    var data_analysis_default = export_helper_default(_sfc_main75, [["render", _sfc_render75], ["__file", "data-analysis.vue"]]);
    var import_vue76 = require_vue();
    var _sfc_main76 = {
      name: "DataBoard"
    };
    var _hoisted_176 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_276 = (0, import_vue76.createElementVNode)("path", {
      fill: "currentColor",
      d: "M32 128h960v64H32z"
    }, null, -1);
    var _hoisted_375 = (0, import_vue76.createElementVNode)("path", {
      fill: "currentColor",
      d: "M192 192v512h640V192H192zm-64-64h768v608a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V128z"
    }, null, -1);
    var _hoisted_428 = (0, import_vue76.createElementVNode)("path", {
      fill: "currentColor",
      d: "M322.176 960H248.32l144.64-250.56 55.424 32L322.176 960zm453.888 0h-73.856L576 741.44l55.424-32L776.064 960z"
    }, null, -1);
    var _hoisted_58 = [
      _hoisted_276,
      _hoisted_375,
      _hoisted_428
    ];
    function _sfc_render76(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue76.openBlock)(), (0, import_vue76.createElementBlock)("svg", _hoisted_176, _hoisted_58);
    }
    var data_board_default = export_helper_default(_sfc_main76, [["render", _sfc_render76], ["__file", "data-board.vue"]]);
    var import_vue77 = require_vue();
    var _sfc_main77 = {
      name: "DataLine"
    };
    var _hoisted_177 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_277 = (0, import_vue77.createElementVNode)("path", {
      fill: "currentColor",
      d: "M359.168 768H160a32 32 0 0 1-32-32V192H64a32 32 0 0 1 0-64h896a32 32 0 1 1 0 64h-64v544a32 32 0 0 1-32 32H665.216l110.848 192h-73.856L591.36 768H433.024L322.176 960H248.32l110.848-192zM832 192H192v512h640V192zM342.656 534.656a32 32 0 1 1-45.312-45.312L444.992 341.76l125.44 94.08L679.04 300.032a32 32 0 1 1 49.92 39.936L581.632 524.224 451.008 426.24 342.656 534.592z"
    }, null, -1);
    var _hoisted_376 = [
      _hoisted_277
    ];
    function _sfc_render77(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue77.openBlock)(), (0, import_vue77.createElementBlock)("svg", _hoisted_177, _hoisted_376);
    }
    var data_line_default = export_helper_default(_sfc_main77, [["render", _sfc_render77], ["__file", "data-line.vue"]]);
    var import_vue78 = require_vue();
    var _sfc_main78 = {
      name: "DeleteFilled"
    };
    var _hoisted_178 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_278 = (0, import_vue78.createElementVNode)("path", {
      fill: "currentColor",
      d: "M352 192V95.936a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32V192h256a32 32 0 1 1 0 64H96a32 32 0 0 1 0-64h256zm64 0h192v-64H416v64zM192 960a32 32 0 0 1-32-32V256h704v672a32 32 0 0 1-32 32H192zm224-192a32 32 0 0 0 32-32V416a32 32 0 0 0-64 0v320a32 32 0 0 0 32 32zm192 0a32 32 0 0 0 32-32V416a32 32 0 0 0-64 0v320a32 32 0 0 0 32 32z"
    }, null, -1);
    var _hoisted_377 = [
      _hoisted_278
    ];
    function _sfc_render78(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue78.openBlock)(), (0, import_vue78.createElementBlock)("svg", _hoisted_178, _hoisted_377);
    }
    var delete_filled_default = export_helper_default(_sfc_main78, [["render", _sfc_render78], ["__file", "delete-filled.vue"]]);
    var import_vue79 = require_vue();
    var _sfc_main79 = {
      name: "DeleteLocation"
    };
    var _hoisted_179 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_279 = (0, import_vue79.createElementVNode)("path", {
      fill: "currentColor",
      d: "M288 896h448q32 0 32 32t-32 32H288q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_378 = (0, import_vue79.createElementVNode)("path", {
      fill: "currentColor",
      d: "M800 416a288 288 0 1 0-576 0c0 118.144 94.528 272.128 288 456.576C705.472 688.128 800 534.144 800 416zM512 960C277.312 746.688 160 565.312 160 416a352 352 0 0 1 704 0c0 149.312-117.312 330.688-352 544z"
    }, null, -1);
    var _hoisted_429 = (0, import_vue79.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 384h256q32 0 32 32t-32 32H384q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_59 = [
      _hoisted_279,
      _hoisted_378,
      _hoisted_429
    ];
    function _sfc_render79(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue79.openBlock)(), (0, import_vue79.createElementBlock)("svg", _hoisted_179, _hoisted_59);
    }
    var delete_location_default = export_helper_default(_sfc_main79, [["render", _sfc_render79], ["__file", "delete-location.vue"]]);
    var import_vue80 = require_vue();
    var _sfc_main80 = {
      name: "Delete"
    };
    var _hoisted_180 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_280 = (0, import_vue80.createElementVNode)("path", {
      fill: "currentColor",
      d: "M160 256H96a32 32 0 0 1 0-64h256V95.936a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32V192h256a32 32 0 1 1 0 64h-64v672a32 32 0 0 1-32 32H192a32 32 0 0 1-32-32V256zm448-64v-64H416v64h192zM224 896h576V256H224v640zm192-128a32 32 0 0 1-32-32V416a32 32 0 0 1 64 0v320a32 32 0 0 1-32 32zm192 0a32 32 0 0 1-32-32V416a32 32 0 0 1 64 0v320a32 32 0 0 1-32 32z"
    }, null, -1);
    var _hoisted_379 = [
      _hoisted_280
    ];
    function _sfc_render80(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue80.openBlock)(), (0, import_vue80.createElementBlock)("svg", _hoisted_180, _hoisted_379);
    }
    var delete_default = export_helper_default(_sfc_main80, [["render", _sfc_render80], ["__file", "delete.vue"]]);
    var import_vue81 = require_vue();
    var _sfc_main81 = {
      name: "Dessert"
    };
    var _hoisted_181 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_281 = (0, import_vue81.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 416v-48a144 144 0 0 1 168.64-141.888 224.128 224.128 0 0 1 430.72 0A144 144 0 0 1 896 368v48a384 384 0 0 1-352 382.72V896h-64v-97.28A384 384 0 0 1 128 416zm287.104-32.064h193.792a143.808 143.808 0 0 1 58.88-132.736 160.064 160.064 0 0 0-311.552 0 143.808 143.808 0 0 1 58.88 132.8zm-72.896 0a72 72 0 1 0-140.48 0h140.48zm339.584 0h140.416a72 72 0 1 0-140.48 0zM512 736a320 320 0 0 0 318.4-288.064H193.6A320 320 0 0 0 512 736zM384 896.064h256a32 32 0 1 1 0 64H384a32 32 0 1 1 0-64z"
    }, null, -1);
    var _hoisted_380 = [
      _hoisted_281
    ];
    function _sfc_render81(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue81.openBlock)(), (0, import_vue81.createElementBlock)("svg", _hoisted_181, _hoisted_380);
    }
    var dessert_default = export_helper_default(_sfc_main81, [["render", _sfc_render81], ["__file", "dessert.vue"]]);
    var import_vue82 = require_vue();
    var _sfc_main82 = {
      name: "Discount"
    };
    var _hoisted_182 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_282 = (0, import_vue82.createElementVNode)("path", {
      fill: "currentColor",
      d: "M224 704h576V318.336L552.512 115.84a64 64 0 0 0-81.024 0L224 318.336V704zm0 64v128h576V768H224zM593.024 66.304l259.2 212.096A32 32 0 0 1 864 303.168V928a32 32 0 0 1-32 32H192a32 32 0 0 1-32-32V303.168a32 32 0 0 1 11.712-24.768l259.2-212.096a128 128 0 0 1 162.112 0z"
    }, null, -1);
    var _hoisted_381 = (0, import_vue82.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 448a64 64 0 1 0 0-128 64 64 0 0 0 0 128zm0 64a128 128 0 1 1 0-256 128 128 0 0 1 0 256z"
    }, null, -1);
    var _hoisted_430 = [
      _hoisted_282,
      _hoisted_381
    ];
    function _sfc_render82(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue82.openBlock)(), (0, import_vue82.createElementBlock)("svg", _hoisted_182, _hoisted_430);
    }
    var discount_default = export_helper_default(_sfc_main82, [["render", _sfc_render82], ["__file", "discount.vue"]]);
    var import_vue83 = require_vue();
    var _sfc_main83 = {
      name: "DishDot"
    };
    var _hoisted_183 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_283 = (0, import_vue83.createElementVNode)("path", {
      fill: "currentColor",
      d: "m384.064 274.56.064-50.688A128 128 0 0 1 512.128 96c70.528 0 127.68 57.152 127.68 127.68v50.752A448.192 448.192 0 0 1 955.392 768H68.544A448.192 448.192 0 0 1 384 274.56zM96 832h832a32 32 0 1 1 0 64H96a32 32 0 1 1 0-64zm32-128h768a384 384 0 1 0-768 0zm447.808-448v-32.32a63.68 63.68 0 0 0-63.68-63.68 64 64 0 0 0-64 63.936V256h127.68z"
    }, null, -1);
    var _hoisted_382 = [
      _hoisted_283
    ];
    function _sfc_render83(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue83.openBlock)(), (0, import_vue83.createElementBlock)("svg", _hoisted_183, _hoisted_382);
    }
    var dish_dot_default = export_helper_default(_sfc_main83, [["render", _sfc_render83], ["__file", "dish-dot.vue"]]);
    var import_vue84 = require_vue();
    var _sfc_main84 = {
      name: "Dish"
    };
    var _hoisted_184 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_284 = (0, import_vue84.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 257.152V192h-96a32 32 0 0 1 0-64h256a32 32 0 1 1 0 64h-96v65.152A448 448 0 0 1 955.52 768H68.48A448 448 0 0 1 480 257.152zM128 704h768a384 384 0 1 0-768 0zM96 832h832a32 32 0 1 1 0 64H96a32 32 0 1 1 0-64z"
    }, null, -1);
    var _hoisted_383 = [
      _hoisted_284
    ];
    function _sfc_render84(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue84.openBlock)(), (0, import_vue84.createElementBlock)("svg", _hoisted_184, _hoisted_383);
    }
    var dish_default = export_helper_default(_sfc_main84, [["render", _sfc_render84], ["__file", "dish.vue"]]);
    var import_vue85 = require_vue();
    var _sfc_main85 = {
      name: "DocumentAdd"
    };
    var _hoisted_185 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_285 = (0, import_vue85.createElementVNode)("path", {
      fill: "currentColor",
      d: "M832 384H576V128H192v768h640V384zm-26.496-64L640 154.496V320h165.504zM160 64h480l256 256v608a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32zm320 512V448h64v128h128v64H544v128h-64V640H352v-64h128z"
    }, null, -1);
    var _hoisted_384 = [
      _hoisted_285
    ];
    function _sfc_render85(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue85.openBlock)(), (0, import_vue85.createElementBlock)("svg", _hoisted_185, _hoisted_384);
    }
    var document_add_default = export_helper_default(_sfc_main85, [["render", _sfc_render85], ["__file", "document-add.vue"]]);
    var import_vue86 = require_vue();
    var _sfc_main86 = {
      name: "DocumentChecked"
    };
    var _hoisted_186 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_286 = (0, import_vue86.createElementVNode)("path", {
      fill: "currentColor",
      d: "M805.504 320 640 154.496V320h165.504zM832 384H576V128H192v768h640V384zM160 64h480l256 256v608a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32zm318.4 582.144 180.992-180.992L704.64 510.4 478.4 736.64 320 578.304l45.248-45.312L478.4 646.144z"
    }, null, -1);
    var _hoisted_385 = [
      _hoisted_286
    ];
    function _sfc_render86(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue86.openBlock)(), (0, import_vue86.createElementBlock)("svg", _hoisted_186, _hoisted_385);
    }
    var document_checked_default = export_helper_default(_sfc_main86, [["render", _sfc_render86], ["__file", "document-checked.vue"]]);
    var import_vue87 = require_vue();
    var _sfc_main87 = {
      name: "DocumentCopy"
    };
    var _hoisted_187 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_287 = (0, import_vue87.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 320v576h576V320H128zm-32-64h640a32 32 0 0 1 32 32v640a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V288a32 32 0 0 1 32-32zM960 96v704a32 32 0 0 1-32 32h-96v-64h64V128H384v64h-64V96a32 32 0 0 1 32-32h576a32 32 0 0 1 32 32zM256 672h320v64H256v-64zm0-192h320v64H256v-64z"
    }, null, -1);
    var _hoisted_386 = [
      _hoisted_287
    ];
    function _sfc_render87(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue87.openBlock)(), (0, import_vue87.createElementBlock)("svg", _hoisted_187, _hoisted_386);
    }
    var document_copy_default = export_helper_default(_sfc_main87, [["render", _sfc_render87], ["__file", "document-copy.vue"]]);
    var import_vue88 = require_vue();
    var _sfc_main88 = {
      name: "DocumentDelete"
    };
    var _hoisted_188 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_288 = (0, import_vue88.createElementVNode)("path", {
      fill: "currentColor",
      d: "M805.504 320 640 154.496V320h165.504zM832 384H576V128H192v768h640V384zM160 64h480l256 256v608a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32zm308.992 546.304-90.496-90.624 45.248-45.248 90.56 90.496 90.496-90.432 45.248 45.248-90.496 90.56 90.496 90.496-45.248 45.248-90.496-90.496-90.56 90.496-45.248-45.248 90.496-90.496z"
    }, null, -1);
    var _hoisted_387 = [
      _hoisted_288
    ];
    function _sfc_render88(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue88.openBlock)(), (0, import_vue88.createElementBlock)("svg", _hoisted_188, _hoisted_387);
    }
    var document_delete_default = export_helper_default(_sfc_main88, [["render", _sfc_render88], ["__file", "document-delete.vue"]]);
    var import_vue89 = require_vue();
    var _sfc_main89 = {
      name: "DocumentRemove"
    };
    var _hoisted_189 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_289 = (0, import_vue89.createElementVNode)("path", {
      fill: "currentColor",
      d: "M805.504 320 640 154.496V320h165.504zM832 384H576V128H192v768h640V384zM160 64h480l256 256v608a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32zm192 512h320v64H352v-64z"
    }, null, -1);
    var _hoisted_388 = [
      _hoisted_289
    ];
    function _sfc_render89(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue89.openBlock)(), (0, import_vue89.createElementBlock)("svg", _hoisted_189, _hoisted_388);
    }
    var document_remove_default = export_helper_default(_sfc_main89, [["render", _sfc_render89], ["__file", "document-remove.vue"]]);
    var import_vue90 = require_vue();
    var _sfc_main90 = {
      name: "Document"
    };
    var _hoisted_190 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_290 = (0, import_vue90.createElementVNode)("path", {
      fill: "currentColor",
      d: "M832 384H576V128H192v768h640V384zm-26.496-64L640 154.496V320h165.504zM160 64h480l256 256v608a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32zm160 448h384v64H320v-64zm0-192h160v64H320v-64zm0 384h384v64H320v-64z"
    }, null, -1);
    var _hoisted_389 = [
      _hoisted_290
    ];
    function _sfc_render90(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue90.openBlock)(), (0, import_vue90.createElementBlock)("svg", _hoisted_190, _hoisted_389);
    }
    var document_default = export_helper_default(_sfc_main90, [["render", _sfc_render90], ["__file", "document.vue"]]);
    var import_vue91 = require_vue();
    var _sfc_main91 = {
      name: "Download"
    };
    var _hoisted_191 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_291 = (0, import_vue91.createElementVNode)("path", {
      fill: "currentColor",
      d: "M160 832h704a32 32 0 1 1 0 64H160a32 32 0 1 1 0-64zm384-253.696 236.288-236.352 45.248 45.248L508.8 704 192 387.2l45.248-45.248L480 584.704V128h64v450.304z"
    }, null, -1);
    var _hoisted_390 = [
      _hoisted_291
    ];
    function _sfc_render91(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue91.openBlock)(), (0, import_vue91.createElementBlock)("svg", _hoisted_191, _hoisted_390);
    }
    var download_default = export_helper_default(_sfc_main91, [["render", _sfc_render91], ["__file", "download.vue"]]);
    var import_vue92 = require_vue();
    var _sfc_main92 = {
      name: "Drizzling"
    };
    var _hoisted_192 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_292 = (0, import_vue92.createElementVNode)("path", {
      fill: "currentColor",
      d: "m739.328 291.328-35.2-6.592-12.8-33.408a192.064 192.064 0 0 0-365.952 23.232l-9.92 40.896-41.472 7.04a176.32 176.32 0 0 0-146.24 173.568c0 97.28 78.72 175.936 175.808 175.936h400a192 192 0 0 0 35.776-380.672zM959.552 480a256 256 0 0 1-256 256h-400A239.808 239.808 0 0 1 63.744 496.192a240.32 240.32 0 0 1 199.488-236.8 256.128 256.128 0 0 1 487.872-30.976A256.064 256.064 0 0 1 959.552 480zM288 800h64v64h-64v-64zm192 0h64v64h-64v-64zm-96 96h64v64h-64v-64zm192 0h64v64h-64v-64zm96-96h64v64h-64v-64z"
    }, null, -1);
    var _hoisted_391 = [
      _hoisted_292
    ];
    function _sfc_render92(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue92.openBlock)(), (0, import_vue92.createElementBlock)("svg", _hoisted_192, _hoisted_391);
    }
    var drizzling_default = export_helper_default(_sfc_main92, [["render", _sfc_render92], ["__file", "drizzling.vue"]]);
    var import_vue93 = require_vue();
    var _sfc_main93 = {
      name: "EditPen"
    };
    var _hoisted_193 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_293 = (0, import_vue93.createElementVNode)("path", {
      d: "m199.04 672.64 193.984 112 224-387.968-193.92-112-224 388.032zm-23.872 60.16 32.896 148.288 144.896-45.696L175.168 732.8zM455.04 229.248l193.92 112 56.704-98.112-193.984-112-56.64 98.112zM104.32 708.8l384-665.024 304.768 175.936L409.152 884.8h.064l-248.448 78.336L104.32 708.8zm384 254.272v-64h448v64h-448z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_392 = [
      _hoisted_293
    ];
    function _sfc_render93(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue93.openBlock)(), (0, import_vue93.createElementBlock)("svg", _hoisted_193, _hoisted_392);
    }
    var edit_pen_default = export_helper_default(_sfc_main93, [["render", _sfc_render93], ["__file", "edit-pen.vue"]]);
    var import_vue94 = require_vue();
    var _sfc_main94 = {
      name: "Edit"
    };
    var _hoisted_194 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_294 = (0, import_vue94.createElementVNode)("path", {
      fill: "currentColor",
      d: "M832 512a32 32 0 1 1 64 0v352a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32h352a32 32 0 0 1 0 64H192v640h640V512z"
    }, null, -1);
    var _hoisted_393 = (0, import_vue94.createElementVNode)("path", {
      fill: "currentColor",
      d: "m469.952 554.24 52.8-7.552L847.104 222.4a32 32 0 1 0-45.248-45.248L477.44 501.44l-7.552 52.8zm422.4-422.4a96 96 0 0 1 0 135.808l-331.84 331.84a32 32 0 0 1-18.112 9.088L436.8 623.68a32 32 0 0 1-36.224-36.224l15.104-105.6a32 32 0 0 1 9.024-18.112l331.904-331.84a96 96 0 0 1 135.744 0z"
    }, null, -1);
    var _hoisted_431 = [
      _hoisted_294,
      _hoisted_393
    ];
    function _sfc_render94(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue94.openBlock)(), (0, import_vue94.createElementBlock)("svg", _hoisted_194, _hoisted_431);
    }
    var edit_default = export_helper_default(_sfc_main94, [["render", _sfc_render94], ["__file", "edit.vue"]]);
    var import_vue95 = require_vue();
    var _sfc_main95 = {
      name: "ElemeFilled"
    };
    var _hoisted_195 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_295 = (0, import_vue95.createElementVNode)("path", {
      fill: "currentColor",
      d: "M176 64h672c61.824 0 112 50.176 112 112v672a112 112 0 0 1-112 112H176A112 112 0 0 1 64 848V176c0-61.824 50.176-112 112-112zm150.528 173.568c-152.896 99.968-196.544 304.064-97.408 456.96a330.688 330.688 0 0 0 456.96 96.64c9.216-5.888 17.6-11.776 25.152-18.56a18.24 18.24 0 0 0 4.224-24.32L700.352 724.8a47.552 47.552 0 0 0-65.536-14.272A234.56 234.56 0 0 1 310.592 641.6C240 533.248 271.104 387.968 379.456 316.48a234.304 234.304 0 0 1 276.352 15.168c1.664.832 2.56 2.56 3.392 4.224 5.888 8.384 3.328 19.328-5.12 25.216L456.832 489.6a47.552 47.552 0 0 0-14.336 65.472l16 24.384c5.888 8.384 16.768 10.88 25.216 5.056l308.224-199.936a19.584 19.584 0 0 0 6.72-23.488v-.896c-4.992-9.216-10.048-17.6-15.104-26.88-99.968-151.168-304.064-194.88-456.96-95.744zM786.88 504.704l-62.208 40.32c-8.32 5.888-10.88 16.768-4.992 25.216L760 632.32c5.888 8.448 16.768 11.008 25.152 5.12l31.104-20.16a55.36 55.36 0 0 0 16-76.48l-20.224-31.04a19.52 19.52 0 0 0-25.152-5.12z"
    }, null, -1);
    var _hoisted_394 = [
      _hoisted_295
    ];
    function _sfc_render95(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue95.openBlock)(), (0, import_vue95.createElementBlock)("svg", _hoisted_195, _hoisted_394);
    }
    var eleme_filled_default = export_helper_default(_sfc_main95, [["render", _sfc_render95], ["__file", "eleme-filled.vue"]]);
    var import_vue96 = require_vue();
    var _sfc_main96 = {
      name: "Eleme"
    };
    var _hoisted_196 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_296 = (0, import_vue96.createElementVNode)("path", {
      fill: "currentColor",
      d: "M300.032 188.8c174.72-113.28 408-63.36 522.24 109.44 5.76 10.56 11.52 20.16 17.28 30.72v.96a22.4 22.4 0 0 1-7.68 26.88l-352.32 228.48c-9.6 6.72-22.08 3.84-28.8-5.76l-18.24-27.84a54.336 54.336 0 0 1 16.32-74.88l225.6-146.88c9.6-6.72 12.48-19.2 5.76-28.8-.96-1.92-1.92-3.84-3.84-4.8a267.84 267.84 0 0 0-315.84-17.28c-123.84 81.6-159.36 247.68-78.72 371.52a268.096 268.096 0 0 0 370.56 78.72 54.336 54.336 0 0 1 74.88 16.32l17.28 26.88c5.76 9.6 3.84 21.12-4.8 27.84-8.64 7.68-18.24 14.4-28.8 21.12a377.92 377.92 0 0 1-522.24-110.4c-113.28-174.72-63.36-408 111.36-522.24zm526.08 305.28a22.336 22.336 0 0 1 28.8 5.76l23.04 35.52a63.232 63.232 0 0 1-18.24 87.36l-35.52 23.04c-9.6 6.72-22.08 3.84-28.8-5.76l-46.08-71.04c-6.72-9.6-3.84-22.08 5.76-28.8l71.04-46.08z"
    }, null, -1);
    var _hoisted_395 = [
      _hoisted_296
    ];
    function _sfc_render96(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue96.openBlock)(), (0, import_vue96.createElementBlock)("svg", _hoisted_196, _hoisted_395);
    }
    var eleme_default = export_helper_default(_sfc_main96, [["render", _sfc_render96], ["__file", "eleme.vue"]]);
    var import_vue97 = require_vue();
    var _sfc_main97 = {
      name: "ElementPlus"
    };
    var _hoisted_197 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_297 = (0, import_vue97.createElementVNode)("path", {
      d: "M839.7 734.7c0 33.3-17.9 41-17.9 41S519.7 949.8 499.2 960c-10.2 5.1-20.5 5.1-30.7 0 0 0-314.9-184.3-325.1-192-5.1-5.1-10.2-12.8-12.8-20.5V368.6c0-17.9 20.5-28.2 20.5-28.2L466 158.6c12.8-5.1 25.6-5.1 38.4 0 0 0 279 161.3 309.8 179.2 17.9 7.7 28.2 25.6 25.6 46.1-.1-5-.1 317.5-.1 350.8zM714.2 371.2c-64-35.8-217.6-125.4-217.6-125.4-7.7-5.1-20.5-5.1-30.7 0L217.6 389.1s-17.9 10.2-17.9 23v297c0 5.1 5.1 12.8 7.7 17.9 7.7 5.1 256 148.5 256 148.5 7.7 5.1 17.9 5.1 25.6 0 15.4-7.7 250.9-145.9 250.9-145.9s12.8-5.1 12.8-30.7v-74.2l-276.5 169v-64c0-17.9 7.7-30.7 20.5-46.1L745 535c5.1-7.7 10.2-20.5 10.2-30.7v-66.6l-279 169v-69.1c0-15.4 5.1-30.7 17.9-38.4l220.1-128zM919 135.7c0-5.1-5.1-7.7-7.7-7.7h-58.9V66.6c0-5.1-5.1-5.1-10.2-5.1l-30.7 5.1c-5.1 0-5.1 2.6-5.1 5.1V128h-56.3c-5.1 0-5.1 5.1-7.7 5.1v38.4h69.1v64c0 5.1 5.1 5.1 10.2 5.1l30.7-5.1c5.1 0 5.1-2.6 5.1-5.1v-56.3h64l-2.5-38.4z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_396 = [
      _hoisted_297
    ];
    function _sfc_render97(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue97.openBlock)(), (0, import_vue97.createElementBlock)("svg", _hoisted_197, _hoisted_396);
    }
    var element_plus_default = export_helper_default(_sfc_main97, [["render", _sfc_render97], ["__file", "element-plus.vue"]]);
    var import_vue98 = require_vue();
    var _sfc_main98 = {
      name: "Expand"
    };
    var _hoisted_198 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_298 = (0, import_vue98.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 192h768v128H128V192zm0 256h512v128H128V448zm0 256h768v128H128V704zm576-352 192 160-192 128V352z"
    }, null, -1);
    var _hoisted_397 = [
      _hoisted_298
    ];
    function _sfc_render98(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue98.openBlock)(), (0, import_vue98.createElementBlock)("svg", _hoisted_198, _hoisted_397);
    }
    var expand_default = export_helper_default(_sfc_main98, [["render", _sfc_render98], ["__file", "expand.vue"]]);
    var import_vue99 = require_vue();
    var _sfc_main99 = {
      name: "Failed"
    };
    var _hoisted_199 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_299 = (0, import_vue99.createElementVNode)("path", {
      fill: "currentColor",
      d: "m557.248 608 135.744-135.744-45.248-45.248-135.68 135.744-135.808-135.68-45.248 45.184L466.752 608l-135.68 135.68 45.184 45.312L512 653.248l135.744 135.744 45.248-45.248L557.312 608zM704 192h160v736H160V192h160v64h384v-64zm-320 0V96h256v96H384z"
    }, null, -1);
    var _hoisted_398 = [
      _hoisted_299
    ];
    function _sfc_render99(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue99.openBlock)(), (0, import_vue99.createElementBlock)("svg", _hoisted_199, _hoisted_398);
    }
    var failed_default = export_helper_default(_sfc_main99, [["render", _sfc_render99], ["__file", "failed.vue"]]);
    var import_vue100 = require_vue();
    var _sfc_main100 = {
      name: "Female"
    };
    var _hoisted_1100 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2100 = (0, import_vue100.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 640a256 256 0 1 0 0-512 256 256 0 0 0 0 512zm0 64a320 320 0 1 1 0-640 320 320 0 0 1 0 640z"
    }, null, -1);
    var _hoisted_399 = (0, import_vue100.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 640q32 0 32 32v256q0 32-32 32t-32-32V672q0-32 32-32z"
    }, null, -1);
    var _hoisted_432 = (0, import_vue100.createElementVNode)("path", {
      fill: "currentColor",
      d: "M352 800h320q32 0 32 32t-32 32H352q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_510 = [
      _hoisted_2100,
      _hoisted_399,
      _hoisted_432
    ];
    function _sfc_render100(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue100.openBlock)(), (0, import_vue100.createElementBlock)("svg", _hoisted_1100, _hoisted_510);
    }
    var female_default = export_helper_default(_sfc_main100, [["render", _sfc_render100], ["__file", "female.vue"]]);
    var import_vue101 = require_vue();
    var _sfc_main101 = {
      name: "Files"
    };
    var _hoisted_1101 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2101 = (0, import_vue101.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 384v448h768V384H128zm-32-64h832a32 32 0 0 1 32 32v512a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V352a32 32 0 0 1 32-32zm64-128h704v64H160zm96-128h512v64H256z"
    }, null, -1);
    var _hoisted_3100 = [
      _hoisted_2101
    ];
    function _sfc_render101(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue101.openBlock)(), (0, import_vue101.createElementBlock)("svg", _hoisted_1101, _hoisted_3100);
    }
    var files_default = export_helper_default(_sfc_main101, [["render", _sfc_render101], ["__file", "files.vue"]]);
    var import_vue102 = require_vue();
    var _sfc_main102 = {
      name: "Film"
    };
    var _hoisted_1102 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2102 = (0, import_vue102.createElementVNode)("path", {
      fill: "currentColor",
      d: "M160 160v704h704V160H160zm-32-64h768a32 32 0 0 1 32 32v768a32 32 0 0 1-32 32H128a32 32 0 0 1-32-32V128a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_3101 = (0, import_vue102.createElementVNode)("path", {
      fill: "currentColor",
      d: "M320 288V128h64v352h256V128h64v160h160v64H704v128h160v64H704v128h160v64H704v160h-64V544H384v352h-64V736H128v-64h192V544H128v-64h192V352H128v-64h192z"
    }, null, -1);
    var _hoisted_433 = [
      _hoisted_2102,
      _hoisted_3101
    ];
    function _sfc_render102(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue102.openBlock)(), (0, import_vue102.createElementBlock)("svg", _hoisted_1102, _hoisted_433);
    }
    var film_default = export_helper_default(_sfc_main102, [["render", _sfc_render102], ["__file", "film.vue"]]);
    var import_vue103 = require_vue();
    var _sfc_main103 = {
      name: "Filter"
    };
    var _hoisted_1103 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2103 = (0, import_vue103.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 523.392V928a32 32 0 0 0 46.336 28.608l192-96A32 32 0 0 0 640 832V523.392l280.768-343.104a32 32 0 1 0-49.536-40.576l-288 352A32 32 0 0 0 576 512v300.224l-128 64V512a32 32 0 0 0-7.232-20.288L195.52 192H704a32 32 0 1 0 0-64H128a32 32 0 0 0-24.768 52.288L384 523.392z"
    }, null, -1);
    var _hoisted_3102 = [
      _hoisted_2103
    ];
    function _sfc_render103(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue103.openBlock)(), (0, import_vue103.createElementBlock)("svg", _hoisted_1103, _hoisted_3102);
    }
    var filter_default = export_helper_default(_sfc_main103, [["render", _sfc_render103], ["__file", "filter.vue"]]);
    var import_vue104 = require_vue();
    var _sfc_main104 = {
      name: "Finished"
    };
    var _hoisted_1104 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2104 = (0, import_vue104.createElementVNode)("path", {
      fill: "currentColor",
      d: "M280.768 753.728 691.456 167.04a32 32 0 1 1 52.416 36.672L314.24 817.472a32 32 0 0 1-45.44 7.296l-230.4-172.8a32 32 0 0 1 38.4-51.2l203.968 152.96zM736 448a32 32 0 1 1 0-64h192a32 32 0 1 1 0 64H736zM608 640a32 32 0 0 1 0-64h319.936a32 32 0 1 1 0 64H608zM480 832a32 32 0 1 1 0-64h447.936a32 32 0 1 1 0 64H480z"
    }, null, -1);
    var _hoisted_3103 = [
      _hoisted_2104
    ];
    function _sfc_render104(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue104.openBlock)(), (0, import_vue104.createElementBlock)("svg", _hoisted_1104, _hoisted_3103);
    }
    var finished_default = export_helper_default(_sfc_main104, [["render", _sfc_render104], ["__file", "finished.vue"]]);
    var import_vue105 = require_vue();
    var _sfc_main105 = {
      name: "FirstAidKit"
    };
    var _hoisted_1105 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2105 = (0, import_vue105.createElementVNode)("path", {
      fill: "currentColor",
      d: "M192 256a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h640a64 64 0 0 0 64-64V320a64 64 0 0 0-64-64H192zm0-64h640a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H192A128 128 0 0 1 64 768V320a128 128 0 0 1 128-128z"
    }, null, -1);
    var _hoisted_3104 = (0, import_vue105.createElementVNode)("path", {
      fill: "currentColor",
      d: "M544 512h96a32 32 0 0 1 0 64h-96v96a32 32 0 0 1-64 0v-96h-96a32 32 0 0 1 0-64h96v-96a32 32 0 0 1 64 0v96zM352 128v64h320v-64H352zm-32-64h384a32 32 0 0 1 32 32v128a32 32 0 0 1-32 32H320a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_434 = [
      _hoisted_2105,
      _hoisted_3104
    ];
    function _sfc_render105(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue105.openBlock)(), (0, import_vue105.createElementBlock)("svg", _hoisted_1105, _hoisted_434);
    }
    var first_aid_kit_default = export_helper_default(_sfc_main105, [["render", _sfc_render105], ["__file", "first-aid-kit.vue"]]);
    var import_vue106 = require_vue();
    var _sfc_main106 = {
      name: "Flag"
    };
    var _hoisted_1106 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2106 = (0, import_vue106.createElementVNode)("path", {
      fill: "currentColor",
      d: "M288 128h608L736 384l160 256H288v320h-96V64h96v64z"
    }, null, -1);
    var _hoisted_3105 = [
      _hoisted_2106
    ];
    function _sfc_render106(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue106.openBlock)(), (0, import_vue106.createElementBlock)("svg", _hoisted_1106, _hoisted_3105);
    }
    var flag_default = export_helper_default(_sfc_main106, [["render", _sfc_render106], ["__file", "flag.vue"]]);
    var import_vue107 = require_vue();
    var _sfc_main107 = {
      name: "Fold"
    };
    var _hoisted_1107 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2107 = (0, import_vue107.createElementVNode)("path", {
      fill: "currentColor",
      d: "M896 192H128v128h768V192zm0 256H384v128h512V448zm0 256H128v128h768V704zM320 384 128 512l192 128V384z"
    }, null, -1);
    var _hoisted_3106 = [
      _hoisted_2107
    ];
    function _sfc_render107(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue107.openBlock)(), (0, import_vue107.createElementBlock)("svg", _hoisted_1107, _hoisted_3106);
    }
    var fold_default = export_helper_default(_sfc_main107, [["render", _sfc_render107], ["__file", "fold.vue"]]);
    var import_vue108 = require_vue();
    var _sfc_main108 = {
      name: "FolderAdd"
    };
    var _hoisted_1108 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2108 = (0, import_vue108.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32zm384 416V416h64v128h128v64H544v128h-64V608H352v-64h128z"
    }, null, -1);
    var _hoisted_3107 = [
      _hoisted_2108
    ];
    function _sfc_render108(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue108.openBlock)(), (0, import_vue108.createElementBlock)("svg", _hoisted_1108, _hoisted_3107);
    }
    var folder_add_default = export_helper_default(_sfc_main108, [["render", _sfc_render108], ["__file", "folder-add.vue"]]);
    var import_vue109 = require_vue();
    var _sfc_main109 = {
      name: "FolderChecked"
    };
    var _hoisted_1109 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2109 = (0, import_vue109.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32zm414.08 502.144 180.992-180.992L736.32 494.4 510.08 720.64l-158.4-158.336 45.248-45.312L510.08 630.144z"
    }, null, -1);
    var _hoisted_3108 = [
      _hoisted_2109
    ];
    function _sfc_render109(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue109.openBlock)(), (0, import_vue109.createElementBlock)("svg", _hoisted_1109, _hoisted_3108);
    }
    var folder_checked_default = export_helper_default(_sfc_main109, [["render", _sfc_render109], ["__file", "folder-checked.vue"]]);
    var import_vue110 = require_vue();
    var _sfc_main110 = {
      name: "FolderDelete"
    };
    var _hoisted_1110 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2110 = (0, import_vue110.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32zm370.752 448-90.496-90.496 45.248-45.248L512 530.752l90.496-90.496 45.248 45.248L557.248 576l90.496 90.496-45.248 45.248L512 621.248l-90.496 90.496-45.248-45.248L466.752 576z"
    }, null, -1);
    var _hoisted_3109 = [
      _hoisted_2110
    ];
    function _sfc_render110(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue110.openBlock)(), (0, import_vue110.createElementBlock)("svg", _hoisted_1110, _hoisted_3109);
    }
    var folder_delete_default = export_helper_default(_sfc_main110, [["render", _sfc_render110], ["__file", "folder-delete.vue"]]);
    var import_vue111 = require_vue();
    var _sfc_main111 = {
      name: "FolderOpened"
    };
    var _hoisted_1111 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2111 = (0, import_vue111.createElementVNode)("path", {
      fill: "currentColor",
      d: "M878.08 448H241.92l-96 384h636.16l96-384zM832 384v-64H485.76L357.504 192H128v448l57.92-231.744A32 32 0 0 1 216.96 384H832zm-24.96 512H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32h287.872l128.384 128H864a32 32 0 0 1 32 32v96h23.04a32 32 0 0 1 31.04 39.744l-112 448A32 32 0 0 1 807.04 896z"
    }, null, -1);
    var _hoisted_3110 = [
      _hoisted_2111
    ];
    function _sfc_render111(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue111.openBlock)(), (0, import_vue111.createElementBlock)("svg", _hoisted_1111, _hoisted_3110);
    }
    var folder_opened_default = export_helper_default(_sfc_main111, [["render", _sfc_render111], ["__file", "folder-opened.vue"]]);
    var import_vue112 = require_vue();
    var _sfc_main112 = {
      name: "FolderRemove"
    };
    var _hoisted_1112 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2112 = (0, import_vue112.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32zm256 416h320v64H352v-64z"
    }, null, -1);
    var _hoisted_3111 = [
      _hoisted_2112
    ];
    function _sfc_render112(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue112.openBlock)(), (0, import_vue112.createElementBlock)("svg", _hoisted_1112, _hoisted_3111);
    }
    var folder_remove_default = export_helper_default(_sfc_main112, [["render", _sfc_render112], ["__file", "folder-remove.vue"]]);
    var import_vue113 = require_vue();
    var _sfc_main113 = {
      name: "Folder"
    };
    var _hoisted_1113 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2113 = (0, import_vue113.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_3112 = [
      _hoisted_2113
    ];
    function _sfc_render113(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue113.openBlock)(), (0, import_vue113.createElementBlock)("svg", _hoisted_1113, _hoisted_3112);
    }
    var folder_default = export_helper_default(_sfc_main113, [["render", _sfc_render113], ["__file", "folder.vue"]]);
    var import_vue114 = require_vue();
    var _sfc_main114 = {
      name: "Food"
    };
    var _hoisted_1114 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2114 = (0, import_vue114.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 352.576V352a288 288 0 0 1 491.072-204.224 192 192 0 0 1 274.24 204.48 64 64 0 0 1 57.216 74.24C921.6 600.512 850.048 710.656 736 756.992V800a96 96 0 0 1-96 96H384a96 96 0 0 1-96-96v-43.008c-114.048-46.336-185.6-156.48-214.528-330.496A64 64 0 0 1 128 352.64zm64-.576h64a160 160 0 0 1 320 0h64a224 224 0 0 0-448 0zm128 0h192a96 96 0 0 0-192 0zm439.424 0h68.544A128.256 128.256 0 0 0 704 192c-15.36 0-29.952 2.688-43.52 7.616 11.328 18.176 20.672 37.76 27.84 58.304A64.128 64.128 0 0 1 759.424 352zM672 768H352v32a32 32 0 0 0 32 32h256a32 32 0 0 0 32-32v-32zm-342.528-64h365.056c101.504-32.64 165.76-124.928 192.896-288H136.576c27.136 163.072 91.392 255.36 192.896 288z"
    }, null, -1);
    var _hoisted_3113 = [
      _hoisted_2114
    ];
    function _sfc_render114(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue114.openBlock)(), (0, import_vue114.createElementBlock)("svg", _hoisted_1114, _hoisted_3113);
    }
    var food_default = export_helper_default(_sfc_main114, [["render", _sfc_render114], ["__file", "food.vue"]]);
    var import_vue115 = require_vue();
    var _sfc_main115 = {
      name: "Football"
    };
    var _hoisted_1115 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2115 = (0, import_vue115.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 960a448 448 0 1 1 0-896 448 448 0 0 1 0 896zm0-64a384 384 0 1 0 0-768 384 384 0 0 0 0 768z"
    }, null, -1);
    var _hoisted_3114 = (0, import_vue115.createElementVNode)("path", {
      fill: "currentColor",
      d: "M186.816 268.288c16-16.384 31.616-31.744 46.976-46.08 17.472 30.656 39.808 58.112 65.984 81.28l-32.512 56.448a385.984 385.984 0 0 1-80.448-91.648zm653.696-5.312a385.92 385.92 0 0 1-83.776 96.96l-32.512-56.384a322.923 322.923 0 0 0 68.48-85.76c15.552 14.08 31.488 29.12 47.808 45.184zM465.984 445.248l11.136-63.104a323.584 323.584 0 0 0 69.76 0l11.136 63.104a387.968 387.968 0 0 1-92.032 0zm-62.72-12.8A381.824 381.824 0 0 1 320 396.544l32-55.424a319.885 319.885 0 0 0 62.464 27.712l-11.2 63.488zm300.8-35.84a381.824 381.824 0 0 1-83.328 35.84l-11.2-63.552A319.885 319.885 0 0 0 672 341.184l32 55.424zm-520.768 364.8a385.92 385.92 0 0 1 83.968-97.28l32.512 56.32c-26.88 23.936-49.856 52.352-67.52 84.032-16-13.44-32.32-27.712-48.96-43.072zm657.536.128a1442.759 1442.759 0 0 1-49.024 43.072 321.408 321.408 0 0 0-67.584-84.16l32.512-56.32c33.216 27.456 61.696 60.352 84.096 97.408zM465.92 578.752a387.968 387.968 0 0 1 92.032 0l-11.136 63.104a323.584 323.584 0 0 0-69.76 0l-11.136-63.104zm-62.72 12.8 11.2 63.552a319.885 319.885 0 0 0-62.464 27.712L320 627.392a381.824 381.824 0 0 1 83.264-35.84zm300.8 35.84-32 55.424a318.272 318.272 0 0 0-62.528-27.712l11.2-63.488c29.44 8.64 57.28 20.736 83.264 35.776z"
    }, null, -1);
    var _hoisted_435 = [
      _hoisted_2115,
      _hoisted_3114
    ];
    function _sfc_render115(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue115.openBlock)(), (0, import_vue115.createElementBlock)("svg", _hoisted_1115, _hoisted_435);
    }
    var football_default = export_helper_default(_sfc_main115, [["render", _sfc_render115], ["__file", "football.vue"]]);
    var import_vue116 = require_vue();
    var _sfc_main116 = {
      name: "ForkSpoon"
    };
    var _hoisted_1116 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2116 = (0, import_vue116.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 410.304V96a32 32 0 0 1 64 0v314.304a96 96 0 0 0 64-90.56V96a32 32 0 0 1 64 0v223.744a160 160 0 0 1-128 156.8V928a32 32 0 1 1-64 0V476.544a160 160 0 0 1-128-156.8V96a32 32 0 0 1 64 0v223.744a96 96 0 0 0 64 90.56zM672 572.48C581.184 552.128 512 446.848 512 320c0-141.44 85.952-256 192-256s192 114.56 192 256c0 126.848-69.184 232.128-160 252.48V928a32 32 0 1 1-64 0V572.48zM704 512c66.048 0 128-82.56 128-192s-61.952-192-128-192-128 82.56-128 192 61.952 192 128 192z"
    }, null, -1);
    var _hoisted_3115 = [
      _hoisted_2116
    ];
    function _sfc_render116(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue116.openBlock)(), (0, import_vue116.createElementBlock)("svg", _hoisted_1116, _hoisted_3115);
    }
    var fork_spoon_default = export_helper_default(_sfc_main116, [["render", _sfc_render116], ["__file", "fork-spoon.vue"]]);
    var import_vue117 = require_vue();
    var _sfc_main117 = {
      name: "Fries"
    };
    var _hoisted_1117 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2117 = (0, import_vue117.createElementVNode)("path", {
      fill: "currentColor",
      d: "M608 224v-64a32 32 0 0 0-64 0v336h26.88A64 64 0 0 0 608 484.096V224zm101.12 160A64 64 0 0 0 672 395.904V384h64V224a32 32 0 1 0-64 0v160h37.12zm74.88 0a92.928 92.928 0 0 1 91.328 110.08l-60.672 323.584A96 96 0 0 1 720.32 896H303.68a96 96 0 0 1-94.336-78.336L148.672 494.08A92.928 92.928 0 0 1 240 384h-16V224a96 96 0 0 1 188.608-25.28A95.744 95.744 0 0 1 480 197.44V160a96 96 0 0 1 188.608-25.28A96 96 0 0 1 800 224v160h-16zM670.784 512a128 128 0 0 1-99.904 48H453.12a128 128 0 0 1-99.84-48H352v-1.536a128.128 128.128 0 0 1-9.984-14.976L314.88 448H240a28.928 28.928 0 0 0-28.48 34.304L241.088 640h541.824l29.568-157.696A28.928 28.928 0 0 0 784 448h-74.88l-27.136 47.488A132.405 132.405 0 0 1 672 510.464V512h-1.216zM480 288a32 32 0 0 0-64 0v196.096A64 64 0 0 0 453.12 496H480V288zm-128 96V224a32 32 0 0 0-64 0v160h64-37.12A64 64 0 0 1 352 395.904zm-98.88 320 19.072 101.888A32 32 0 0 0 303.68 832h416.64a32 32 0 0 0 31.488-26.112L770.88 704H253.12z"
    }, null, -1);
    var _hoisted_3116 = [
      _hoisted_2117
    ];
    function _sfc_render117(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue117.openBlock)(), (0, import_vue117.createElementBlock)("svg", _hoisted_1117, _hoisted_3116);
    }
    var fries_default = export_helper_default(_sfc_main117, [["render", _sfc_render117], ["__file", "fries.vue"]]);
    var import_vue118 = require_vue();
    var _sfc_main118 = {
      name: "FullScreen"
    };
    var _hoisted_1118 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2118 = (0, import_vue118.createElementVNode)("path", {
      fill: "currentColor",
      d: "m160 96.064 192 .192a32 32 0 0 1 0 64l-192-.192V352a32 32 0 0 1-64 0V96h64v.064zm0 831.872V928H96V672a32 32 0 1 1 64 0v191.936l192-.192a32 32 0 1 1 0 64l-192 .192zM864 96.064V96h64v256a32 32 0 1 1-64 0V160.064l-192 .192a32 32 0 1 1 0-64l192-.192zm0 831.872-192-.192a32 32 0 0 1 0-64l192 .192V672a32 32 0 1 1 64 0v256h-64v-.064z"
    }, null, -1);
    var _hoisted_3117 = [
      _hoisted_2118
    ];
    function _sfc_render118(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue118.openBlock)(), (0, import_vue118.createElementBlock)("svg", _hoisted_1118, _hoisted_3117);
    }
    var full_screen_default = export_helper_default(_sfc_main118, [["render", _sfc_render118], ["__file", "full-screen.vue"]]);
    var import_vue119 = require_vue();
    var _sfc_main119 = {
      name: "GobletFull"
    };
    var _hoisted_1119 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2119 = (0, import_vue119.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 320h512c0-78.592-12.608-142.4-36.928-192h-434.24C269.504 192.384 256 256.256 256 320zm503.936 64H264.064a256.128 256.128 0 0 0 495.872 0zM544 638.4V896h96a32 32 0 1 1 0 64H384a32 32 0 1 1 0-64h96V638.4A320 320 0 0 1 192 320c0-85.632 21.312-170.944 64-256h512c42.688 64.32 64 149.632 64 256a320 320 0 0 1-288 318.4z"
    }, null, -1);
    var _hoisted_3118 = [
      _hoisted_2119
    ];
    function _sfc_render119(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue119.openBlock)(), (0, import_vue119.createElementBlock)("svg", _hoisted_1119, _hoisted_3118);
    }
    var goblet_full_default = export_helper_default(_sfc_main119, [["render", _sfc_render119], ["__file", "goblet-full.vue"]]);
    var import_vue120 = require_vue();
    var _sfc_main120 = {
      name: "GobletSquareFull"
    };
    var _hoisted_1120 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2120 = (0, import_vue120.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 270.912c10.048 6.72 22.464 14.912 28.992 18.624a220.16 220.16 0 0 0 114.752 30.72c30.592 0 49.408-9.472 91.072-41.152l.64-.448c52.928-40.32 82.368-55.04 132.288-54.656 55.552.448 99.584 20.8 142.72 57.408l1.536 1.28V128H256v142.912zm.96 76.288C266.368 482.176 346.88 575.872 512 576c157.44.064 237.952-85.056 253.248-209.984a952.32 952.32 0 0 1-40.192-35.712c-32.704-27.776-63.36-41.92-101.888-42.24-31.552-.256-50.624 9.28-93.12 41.6l-.576.448c-52.096 39.616-81.024 54.208-129.792 54.208-54.784 0-100.48-13.376-142.784-37.056zM480 638.848C250.624 623.424 192 442.496 192 319.68V96a32 32 0 0 1 32-32h576a32 32 0 0 1 32 32v224c0 122.816-58.624 303.68-288 318.912V896h96a32 32 0 1 1 0 64H384a32 32 0 1 1 0-64h96V638.848z"
    }, null, -1);
    var _hoisted_3119 = [
      _hoisted_2120
    ];
    function _sfc_render120(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue120.openBlock)(), (0, import_vue120.createElementBlock)("svg", _hoisted_1120, _hoisted_3119);
    }
    var goblet_square_full_default = export_helper_default(_sfc_main120, [["render", _sfc_render120], ["__file", "goblet-square-full.vue"]]);
    var import_vue121 = require_vue();
    var _sfc_main121 = {
      name: "GobletSquare"
    };
    var _hoisted_1121 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2121 = (0, import_vue121.createElementVNode)("path", {
      fill: "currentColor",
      d: "M544 638.912V896h96a32 32 0 1 1 0 64H384a32 32 0 1 1 0-64h96V638.848C250.624 623.424 192 442.496 192 319.68V96a32 32 0 0 1 32-32h576a32 32 0 0 1 32 32v224c0 122.816-58.624 303.68-288 318.912zM256 319.68c0 149.568 80 256.192 256 256.256C688.128 576 768 469.568 768 320V128H256v191.68z"
    }, null, -1);
    var _hoisted_3120 = [
      _hoisted_2121
    ];
    function _sfc_render121(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue121.openBlock)(), (0, import_vue121.createElementBlock)("svg", _hoisted_1121, _hoisted_3120);
    }
    var goblet_square_default = export_helper_default(_sfc_main121, [["render", _sfc_render121], ["__file", "goblet-square.vue"]]);
    var import_vue122 = require_vue();
    var _sfc_main122 = {
      name: "Goblet"
    };
    var _hoisted_1122 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2122 = (0, import_vue122.createElementVNode)("path", {
      fill: "currentColor",
      d: "M544 638.4V896h96a32 32 0 1 1 0 64H384a32 32 0 1 1 0-64h96V638.4A320 320 0 0 1 192 320c0-85.632 21.312-170.944 64-256h512c42.688 64.32 64 149.632 64 256a320 320 0 0 1-288 318.4zM256 320a256 256 0 1 0 512 0c0-78.592-12.608-142.4-36.928-192h-434.24C269.504 192.384 256 256.256 256 320z"
    }, null, -1);
    var _hoisted_3121 = [
      _hoisted_2122
    ];
    function _sfc_render122(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue122.openBlock)(), (0, import_vue122.createElementBlock)("svg", _hoisted_1122, _hoisted_3121);
    }
    var goblet_default = export_helper_default(_sfc_main122, [["render", _sfc_render122], ["__file", "goblet.vue"]]);
    var import_vue123 = require_vue();
    var _sfc_main123 = {
      name: "GoldMedal"
    };
    var _hoisted_1123 = {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      style: { "enable-background": "new 0 0 1024 1024" },
      "xml:space": "preserve"
    };
    var _hoisted_2123 = (0, import_vue123.createElementVNode)("path", {
      d: "m772.13 452.84 53.86-351.81c1.32-10.01-1.17-18.68-7.49-26.02S804.35 64 795.01 64H228.99v-.01h-.06c-9.33 0-17.15 3.67-23.49 11.01s-8.83 16.01-7.49 26.02l53.87 351.89C213.54 505.73 193.59 568.09 192 640c2 90.67 33.17 166.17 93.5 226.5S421.33 957.99 512 960c90.67-2 166.17-33.17 226.5-93.5 60.33-60.34 91.49-135.83 93.5-226.5-1.59-71.94-21.56-134.32-59.87-187.16zM640.01 128h117.02l-39.01 254.02c-20.75-10.64-40.74-19.73-59.94-27.28-5.92-3-11.95-5.8-18.08-8.41V128h.01zM576 128v198.76c-13.18-2.58-26.74-4.43-40.67-5.55-8.07-.8-15.85-1.2-23.33-1.2-10.54 0-21.09.66-31.64 1.96a359.844 359.844 0 0 0-32.36 4.79V128h128zm-192 0h.04v218.3c-6.22 2.66-12.34 5.5-18.36 8.56-19.13 7.54-39.02 16.6-59.66 27.16L267.01 128H384zm308.99 692.99c-48 48-108.33 73-180.99 75.01-72.66-2.01-132.99-27.01-180.99-75.01S258.01 712.66 256 640c2.01-72.66 27.01-132.99 75.01-180.99 19.67-19.67 41.41-35.47 65.22-47.41 38.33-15.04 71.15-23.92 98.44-26.65 5.07-.41 10.2-.7 15.39-.88.63-.01 1.28-.03 1.91-.03.66 0 1.35.03 2.02.04 5.11.17 10.15.46 15.13.86 27.4 2.71 60.37 11.65 98.91 26.79 23.71 11.93 45.36 27.69 64.96 47.29 48 48 73 108.33 75.01 180.99-2.01 72.65-27.01 132.98-75.01 180.98z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_3122 = (0, import_vue123.createElementVNode)("path", {
      d: "M544 480H416v64h64v192h-64v64h192v-64h-64z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_436 = [
      _hoisted_2123,
      _hoisted_3122
    ];
    function _sfc_render123(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue123.openBlock)(), (0, import_vue123.createElementBlock)("svg", _hoisted_1123, _hoisted_436);
    }
    var gold_medal_default = export_helper_default(_sfc_main123, [["render", _sfc_render123], ["__file", "gold-medal.vue"]]);
    var import_vue124 = require_vue();
    var _sfc_main124 = {
      name: "GoodsFilled"
    };
    var _hoisted_1124 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2124 = (0, import_vue124.createElementVNode)("path", {
      fill: "currentColor",
      d: "M192 352h640l64 544H128l64-544zm128 224h64V448h-64v128zm320 0h64V448h-64v128zM384 288h-64a192 192 0 1 1 384 0h-64a128 128 0 1 0-256 0z"
    }, null, -1);
    var _hoisted_3123 = [
      _hoisted_2124
    ];
    function _sfc_render124(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue124.openBlock)(), (0, import_vue124.createElementBlock)("svg", _hoisted_1124, _hoisted_3123);
    }
    var goods_filled_default = export_helper_default(_sfc_main124, [["render", _sfc_render124], ["__file", "goods-filled.vue"]]);
    var import_vue125 = require_vue();
    var _sfc_main125 = {
      name: "Goods"
    };
    var _hoisted_1125 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2125 = (0, import_vue125.createElementVNode)("path", {
      fill: "currentColor",
      d: "M320 288v-22.336C320 154.688 405.504 64 512 64s192 90.688 192 201.664v22.4h131.072a32 32 0 0 1 31.808 28.8l57.6 576a32 32 0 0 1-31.808 35.2H131.328a32 32 0 0 1-31.808-35.2l57.6-576a32 32 0 0 1 31.808-28.8H320zm64 0h256v-22.336C640 189.248 582.272 128 512 128c-70.272 0-128 61.248-128 137.664v22.4zm-64 64H217.92l-51.2 512h690.56l-51.264-512H704v96a32 32 0 1 1-64 0v-96H384v96a32 32 0 0 1-64 0v-96z"
    }, null, -1);
    var _hoisted_3124 = [
      _hoisted_2125
    ];
    function _sfc_render125(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue125.openBlock)(), (0, import_vue125.createElementBlock)("svg", _hoisted_1125, _hoisted_3124);
    }
    var goods_default = export_helper_default(_sfc_main125, [["render", _sfc_render125], ["__file", "goods.vue"]]);
    var import_vue126 = require_vue();
    var _sfc_main126 = {
      name: "Grape"
    };
    var _hoisted_1126 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2126 = (0, import_vue126.createElementVNode)("path", {
      fill: "currentColor",
      d: "M544 195.2a160 160 0 0 1 96 60.8 160 160 0 1 1 146.24 254.976 160 160 0 0 1-128 224 160 160 0 1 1-292.48 0 160 160 0 0 1-128-224A160 160 0 1 1 384 256a160 160 0 0 1 96-60.8V128h-64a32 32 0 0 1 0-64h192a32 32 0 0 1 0 64h-64v67.2zM512 448a96 96 0 1 0 0-192 96 96 0 0 0 0 192zm-256 0a96 96 0 1 0 0-192 96 96 0 0 0 0 192zm128 224a96 96 0 1 0 0-192 96 96 0 0 0 0 192zm128 224a96 96 0 1 0 0-192 96 96 0 0 0 0 192zm128-224a96 96 0 1 0 0-192 96 96 0 0 0 0 192zm128-224a96 96 0 1 0 0-192 96 96 0 0 0 0 192z"
    }, null, -1);
    var _hoisted_3125 = [
      _hoisted_2126
    ];
    function _sfc_render126(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue126.openBlock)(), (0, import_vue126.createElementBlock)("svg", _hoisted_1126, _hoisted_3125);
    }
    var grape_default = export_helper_default(_sfc_main126, [["render", _sfc_render126], ["__file", "grape.vue"]]);
    var import_vue127 = require_vue();
    var _sfc_main127 = {
      name: "Grid"
    };
    var _hoisted_1127 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2127 = (0, import_vue127.createElementVNode)("path", {
      fill: "currentColor",
      d: "M640 384v256H384V384h256zm64 0h192v256H704V384zm-64 512H384V704h256v192zm64 0V704h192v192H704zm-64-768v192H384V128h256zm64 0h192v192H704V128zM320 384v256H128V384h192zm0 512H128V704h192v192zm0-768v192H128V128h192z"
    }, null, -1);
    var _hoisted_3126 = [
      _hoisted_2127
    ];
    function _sfc_render127(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue127.openBlock)(), (0, import_vue127.createElementBlock)("svg", _hoisted_1127, _hoisted_3126);
    }
    var grid_default = export_helper_default(_sfc_main127, [["render", _sfc_render127], ["__file", "grid.vue"]]);
    var import_vue128 = require_vue();
    var _sfc_main128 = {
      name: "Guide"
    };
    var _hoisted_1128 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2128 = (0, import_vue128.createElementVNode)("path", {
      fill: "currentColor",
      d: "M640 608h-64V416h64v192zm0 160v160a32 32 0 0 1-32 32H416a32 32 0 0 1-32-32V768h64v128h128V768h64zM384 608V416h64v192h-64zm256-352h-64V128H448v128h-64V96a32 32 0 0 1 32-32h192a32 32 0 0 1 32 32v160z"
    }, null, -1);
    var _hoisted_3127 = (0, import_vue128.createElementVNode)("path", {
      fill: "currentColor",
      d: "m220.8 256-71.232 80 71.168 80H768V256H220.8zm-14.4-64H800a32 32 0 0 1 32 32v224a32 32 0 0 1-32 32H206.4a32 32 0 0 1-23.936-10.752l-99.584-112a32 32 0 0 1 0-42.496l99.584-112A32 32 0 0 1 206.4 192zm678.784 496-71.104 80H266.816V608h547.2l71.168 80zm-56.768-144H234.88a32 32 0 0 0-32 32v224a32 32 0 0 0 32 32h593.6a32 32 0 0 0 23.936-10.752l99.584-112a32 32 0 0 0 0-42.496l-99.584-112A32 32 0 0 0 828.48 544z"
    }, null, -1);
    var _hoisted_437 = [
      _hoisted_2128,
      _hoisted_3127
    ];
    function _sfc_render128(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue128.openBlock)(), (0, import_vue128.createElementBlock)("svg", _hoisted_1128, _hoisted_437);
    }
    var guide_default = export_helper_default(_sfc_main128, [["render", _sfc_render128], ["__file", "guide.vue"]]);
    var import_vue129 = require_vue();
    var _sfc_main129 = {
      name: "Handbag"
    };
    var _hoisted_1129 = {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      style: { "enable-background": "new 0 0 1024 1024" },
      "xml:space": "preserve"
    };
    var _hoisted_2129 = (0, import_vue129.createElementVNode)("path", {
      d: "M887.01 264.99c-6-5.99-13.67-8.99-23.01-8.99H704c-1.34-54.68-20.01-100.01-56-136s-81.32-54.66-136-56c-54.68 1.34-100.01 20.01-136 56s-54.66 81.32-56 136H160c-9.35 0-17.02 3-23.01 8.99-5.99 6-8.99 13.67-8.99 23.01v640c0 9.35 2.99 17.02 8.99 23.01S150.66 960 160 960h704c9.35 0 17.02-2.99 23.01-8.99S896 937.34 896 928V288c0-9.35-2.99-17.02-8.99-23.01zM421.5 165.5c24.32-24.34 54.49-36.84 90.5-37.5 35.99.68 66.16 13.18 90.5 37.5s36.84 54.49 37.5 90.5H384c.68-35.99 13.18-66.16 37.5-90.5zM832 896H192V320h128v128h64V320h256v128h64V320h128v576z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_3128 = [
      _hoisted_2129
    ];
    function _sfc_render129(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue129.openBlock)(), (0, import_vue129.createElementBlock)("svg", _hoisted_1129, _hoisted_3128);
    }
    var handbag_default = export_helper_default(_sfc_main129, [["render", _sfc_render129], ["__file", "handbag.vue"]]);
    var import_vue130 = require_vue();
    var _sfc_main130 = {
      name: "Headset"
    };
    var _hoisted_1130 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2130 = (0, import_vue130.createElementVNode)("path", {
      fill: "currentColor",
      d: "M896 529.152V512a384 384 0 1 0-768 0v17.152A128 128 0 0 1 320 640v128a128 128 0 1 1-256 0V512a448 448 0 1 1 896 0v256a128 128 0 1 1-256 0V640a128 128 0 0 1 192-110.848zM896 640a64 64 0 0 0-128 0v128a64 64 0 0 0 128 0V640zm-768 0v128a64 64 0 0 0 128 0V640a64 64 0 1 0-128 0z"
    }, null, -1);
    var _hoisted_3129 = [
      _hoisted_2130
    ];
    function _sfc_render130(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue130.openBlock)(), (0, import_vue130.createElementBlock)("svg", _hoisted_1130, _hoisted_3129);
    }
    var headset_default = export_helper_default(_sfc_main130, [["render", _sfc_render130], ["__file", "headset.vue"]]);
    var import_vue131 = require_vue();
    var _sfc_main131 = {
      name: "HelpFilled"
    };
    var _hoisted_1131 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2131 = (0, import_vue131.createElementVNode)("path", {
      fill: "currentColor",
      d: "M926.784 480H701.312A192.512 192.512 0 0 0 544 322.688V97.216A416.064 416.064 0 0 1 926.784 480zm0 64A416.064 416.064 0 0 1 544 926.784V701.312A192.512 192.512 0 0 0 701.312 544h225.472zM97.28 544h225.472A192.512 192.512 0 0 0 480 701.312v225.472A416.064 416.064 0 0 1 97.216 544zm0-64A416.064 416.064 0 0 1 480 97.216v225.472A192.512 192.512 0 0 0 322.688 480H97.216z"
    }, null, -1);
    var _hoisted_3130 = [
      _hoisted_2131
    ];
    function _sfc_render131(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue131.openBlock)(), (0, import_vue131.createElementBlock)("svg", _hoisted_1131, _hoisted_3130);
    }
    var help_filled_default = export_helper_default(_sfc_main131, [["render", _sfc_render131], ["__file", "help-filled.vue"]]);
    var import_vue132 = require_vue();
    var _sfc_main132 = {
      name: "Help"
    };
    var _hoisted_1132 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2132 = (0, import_vue132.createElementVNode)("path", {
      fill: "currentColor",
      d: "m759.936 805.248-90.944-91.008A254.912 254.912 0 0 1 512 768a254.912 254.912 0 0 1-156.992-53.76l-90.944 91.008A382.464 382.464 0 0 0 512 896c94.528 0 181.12-34.176 247.936-90.752zm45.312-45.312A382.464 382.464 0 0 0 896 512c0-94.528-34.176-181.12-90.752-247.936l-91.008 90.944C747.904 398.4 768 452.864 768 512c0 59.136-20.096 113.6-53.76 156.992l91.008 90.944zm-45.312-541.184A382.464 382.464 0 0 0 512 128c-94.528 0-181.12 34.176-247.936 90.752l90.944 91.008A254.912 254.912 0 0 1 512 256c59.136 0 113.6 20.096 156.992 53.76l90.944-91.008zm-541.184 45.312A382.464 382.464 0 0 0 128 512c0 94.528 34.176 181.12 90.752 247.936l91.008-90.944A254.912 254.912 0 0 1 256 512c0-59.136 20.096-113.6 53.76-156.992l-91.008-90.944zm417.28 394.496a194.56 194.56 0 0 0 22.528-22.528C686.912 602.56 704 559.232 704 512a191.232 191.232 0 0 0-67.968-146.56A191.296 191.296 0 0 0 512 320a191.232 191.232 0 0 0-146.56 67.968C337.088 421.44 320 464.768 320 512a191.232 191.232 0 0 0 67.968 146.56C421.44 686.912 464.768 704 512 704c47.296 0 90.56-17.088 124.032-45.44zM512 960a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"
    }, null, -1);
    var _hoisted_3131 = [
      _hoisted_2132
    ];
    function _sfc_render132(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue132.openBlock)(), (0, import_vue132.createElementBlock)("svg", _hoisted_1132, _hoisted_3131);
    }
    var help_default = export_helper_default(_sfc_main132, [["render", _sfc_render132], ["__file", "help.vue"]]);
    var import_vue133 = require_vue();
    var _sfc_main133 = {
      name: "Hide"
    };
    var _hoisted_1133 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2133 = (0, import_vue133.createElementVNode)("path", {
      d: "M876.8 156.8c0-9.6-3.2-16-9.6-22.4-6.4-6.4-12.8-9.6-22.4-9.6-9.6 0-16 3.2-22.4 9.6L736 220.8c-64-32-137.6-51.2-224-60.8-160 16-288 73.6-377.6 176C44.8 438.4 0 496 0 512s48 73.6 134.4 176c22.4 25.6 44.8 48 73.6 67.2l-86.4 89.6c-6.4 6.4-9.6 12.8-9.6 22.4 0 9.6 3.2 16 9.6 22.4 6.4 6.4 12.8 9.6 22.4 9.6 9.6 0 16-3.2 22.4-9.6l704-710.4c3.2-6.4 6.4-12.8 6.4-22.4Zm-646.4 528c-76.8-70.4-128-128-153.6-172.8 28.8-48 80-105.6 153.6-172.8C304 272 400 230.4 512 224c64 3.2 124.8 19.2 176 44.8l-54.4 54.4C598.4 300.8 560 288 512 288c-64 0-115.2 22.4-160 64s-64 96-64 160c0 48 12.8 89.6 35.2 124.8L256 707.2c-9.6-6.4-19.2-16-25.6-22.4Zm140.8-96c-12.8-22.4-19.2-48-19.2-76.8 0-44.8 16-83.2 48-112 32-28.8 67.2-48 112-48 28.8 0 54.4 6.4 73.6 19.2L371.2 588.8ZM889.599 336c-12.8-16-28.8-28.8-41.6-41.6l-48 48c73.6 67.2 124.8 124.8 150.4 169.6-28.8 48-80 105.6-153.6 172.8-73.6 67.2-172.8 108.8-284.8 115.2-51.2-3.2-99.2-12.8-140.8-28.8l-48 48c57.6 22.4 118.4 38.4 188.8 44.8 160-16 288-73.6 377.6-176C979.199 585.6 1024 528 1024 512s-48.001-73.6-134.401-176Z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_3132 = (0, import_vue133.createElementVNode)("path", {
      d: "M511.998 672c-12.8 0-25.6-3.2-38.4-6.4l-51.2 51.2c28.8 12.8 57.6 19.2 89.6 19.2 64 0 115.2-22.4 160-64 41.6-41.6 64-96 64-160 0-32-6.4-64-19.2-89.6l-51.2 51.2c3.2 12.8 6.4 25.6 6.4 38.4 0 44.8-16 83.2-48 112-32 28.8-67.2 48-112 48Z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_438 = [
      _hoisted_2133,
      _hoisted_3132
    ];
    function _sfc_render133(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue133.openBlock)(), (0, import_vue133.createElementBlock)("svg", _hoisted_1133, _hoisted_438);
    }
    var hide_default = export_helper_default(_sfc_main133, [["render", _sfc_render133], ["__file", "hide.vue"]]);
    var import_vue134 = require_vue();
    var _sfc_main134 = {
      name: "Histogram"
    };
    var _hoisted_1134 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2134 = (0, import_vue134.createElementVNode)("path", {
      fill: "currentColor",
      d: "M416 896V128h192v768H416zm-288 0V448h192v448H128zm576 0V320h192v576H704z"
    }, null, -1);
    var _hoisted_3133 = [
      _hoisted_2134
    ];
    function _sfc_render134(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue134.openBlock)(), (0, import_vue134.createElementBlock)("svg", _hoisted_1134, _hoisted_3133);
    }
    var histogram_default = export_helper_default(_sfc_main134, [["render", _sfc_render134], ["__file", "histogram.vue"]]);
    var import_vue135 = require_vue();
    var _sfc_main135 = {
      name: "HomeFilled"
    };
    var _hoisted_1135 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2135 = (0, import_vue135.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 128 128 447.936V896h255.936V640H640v256h255.936V447.936z"
    }, null, -1);
    var _hoisted_3134 = [
      _hoisted_2135
    ];
    function _sfc_render135(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue135.openBlock)(), (0, import_vue135.createElementBlock)("svg", _hoisted_1135, _hoisted_3134);
    }
    var home_filled_default = export_helper_default(_sfc_main135, [["render", _sfc_render135], ["__file", "home-filled.vue"]]);
    var import_vue136 = require_vue();
    var _sfc_main136 = {
      name: "HotWater"
    };
    var _hoisted_1136 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2136 = (0, import_vue136.createElementVNode)("path", {
      fill: "currentColor",
      d: "M273.067 477.867h477.866V409.6H273.067v68.267zm0 68.266v51.2A187.733 187.733 0 0 0 460.8 785.067h102.4a187.733 187.733 0 0 0 187.733-187.734v-51.2H273.067zm-34.134-204.8h546.134a34.133 34.133 0 0 1 34.133 34.134v221.866a256 256 0 0 1-256 256H460.8a256 256 0 0 1-256-256V375.467a34.133 34.133 0 0 1 34.133-34.134zM512 34.133a34.133 34.133 0 0 1 34.133 34.134v170.666a34.133 34.133 0 0 1-68.266 0V68.267A34.133 34.133 0 0 1 512 34.133zM375.467 102.4a34.133 34.133 0 0 1 34.133 34.133v102.4a34.133 34.133 0 0 1-68.267 0v-102.4a34.133 34.133 0 0 1 34.134-34.133zm273.066 0a34.133 34.133 0 0 1 34.134 34.133v102.4a34.133 34.133 0 1 1-68.267 0v-102.4a34.133 34.133 0 0 1 34.133-34.133zM170.667 921.668h682.666a34.133 34.133 0 1 1 0 68.267H170.667a34.133 34.133 0 1 1 0-68.267z"
    }, null, -1);
    var _hoisted_3135 = [
      _hoisted_2136
    ];
    function _sfc_render136(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue136.openBlock)(), (0, import_vue136.createElementBlock)("svg", _hoisted_1136, _hoisted_3135);
    }
    var hot_water_default = export_helper_default(_sfc_main136, [["render", _sfc_render136], ["__file", "hot-water.vue"]]);
    var import_vue137 = require_vue();
    var _sfc_main137 = {
      name: "House"
    };
    var _hoisted_1137 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2137 = (0, import_vue137.createElementVNode)("path", {
      fill: "currentColor",
      d: "M192 413.952V896h640V413.952L512 147.328 192 413.952zM139.52 374.4l352-293.312a32 32 0 0 1 40.96 0l352 293.312A32 32 0 0 1 896 398.976V928a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V398.976a32 32 0 0 1 11.52-24.576z"
    }, null, -1);
    var _hoisted_3136 = [
      _hoisted_2137
    ];
    function _sfc_render137(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue137.openBlock)(), (0, import_vue137.createElementBlock)("svg", _hoisted_1137, _hoisted_3136);
    }
    var house_default = export_helper_default(_sfc_main137, [["render", _sfc_render137], ["__file", "house.vue"]]);
    var import_vue138 = require_vue();
    var _sfc_main138 = {
      name: "IceCreamRound"
    };
    var _hoisted_1138 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2138 = (0, import_vue138.createElementVNode)("path", {
      fill: "currentColor",
      d: "m308.352 489.344 226.304 226.304a32 32 0 0 0 45.248 0L783.552 512A192 192 0 1 0 512 240.448L308.352 444.16a32 32 0 0 0 0 45.248zm135.744 226.304L308.352 851.392a96 96 0 0 1-135.744-135.744l135.744-135.744-45.248-45.248a96 96 0 0 1 0-135.808L466.752 195.2A256 256 0 0 1 828.8 557.248L625.152 760.96a96 96 0 0 1-135.808 0l-45.248-45.248zM398.848 670.4 353.6 625.152 217.856 760.896a32 32 0 0 0 45.248 45.248L398.848 670.4zm248.96-384.64a32 32 0 0 1 0 45.248L466.624 512a32 32 0 1 1-45.184-45.248l180.992-181.056a32 32 0 0 1 45.248 0zm90.496 90.496a32 32 0 0 1 0 45.248L557.248 602.496A32 32 0 1 1 512 557.248l180.992-180.992a32 32 0 0 1 45.312 0z"
    }, null, -1);
    var _hoisted_3137 = [
      _hoisted_2138
    ];
    function _sfc_render138(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue138.openBlock)(), (0, import_vue138.createElementBlock)("svg", _hoisted_1138, _hoisted_3137);
    }
    var ice_cream_round_default = export_helper_default(_sfc_main138, [["render", _sfc_render138], ["__file", "ice-cream-round.vue"]]);
    var import_vue139 = require_vue();
    var _sfc_main139 = {
      name: "IceCreamSquare"
    };
    var _hoisted_1139 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2139 = (0, import_vue139.createElementVNode)("path", {
      fill: "currentColor",
      d: "M416 640h256a32 32 0 0 0 32-32V160a32 32 0 0 0-32-32H352a32 32 0 0 0-32 32v448a32 32 0 0 0 32 32h64zm192 64v160a96 96 0 0 1-192 0V704h-64a96 96 0 0 1-96-96V160a96 96 0 0 1 96-96h320a96 96 0 0 1 96 96v448a96 96 0 0 1-96 96h-64zm-64 0h-64v160a32 32 0 1 0 64 0V704z"
    }, null, -1);
    var _hoisted_3138 = [
      _hoisted_2139
    ];
    function _sfc_render139(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue139.openBlock)(), (0, import_vue139.createElementBlock)("svg", _hoisted_1139, _hoisted_3138);
    }
    var ice_cream_square_default = export_helper_default(_sfc_main139, [["render", _sfc_render139], ["__file", "ice-cream-square.vue"]]);
    var import_vue140 = require_vue();
    var _sfc_main140 = {
      name: "IceCream"
    };
    var _hoisted_1140 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2140 = (0, import_vue140.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128.64 448a208 208 0 0 1 193.536-191.552 224 224 0 0 1 445.248 15.488A208.128 208.128 0 0 1 894.784 448H896L548.8 983.68a32 32 0 0 1-53.248.704L128 448h.64zm64.256 0h286.208a144 144 0 0 0-286.208 0zm351.36 0h286.272a144 144 0 0 0-286.272 0zm-294.848 64 271.808 396.608L778.24 512H249.408zM511.68 352.64a207.872 207.872 0 0 1 189.184-96.192 160 160 0 0 0-314.752 5.632c52.608 12.992 97.28 46.08 125.568 90.56z"
    }, null, -1);
    var _hoisted_3139 = [
      _hoisted_2140
    ];
    function _sfc_render140(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue140.openBlock)(), (0, import_vue140.createElementBlock)("svg", _hoisted_1140, _hoisted_3139);
    }
    var ice_cream_default = export_helper_default(_sfc_main140, [["render", _sfc_render140], ["__file", "ice-cream.vue"]]);
    var import_vue141 = require_vue();
    var _sfc_main141 = {
      name: "IceDrink"
    };
    var _hoisted_1141 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2141 = (0, import_vue141.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 448v128h239.68l16.064-128H512zm-64 0H256.256l16.064 128H448V448zm64-255.36V384h247.744A256.128 256.128 0 0 0 512 192.64zm-64 8.064A256.448 256.448 0 0 0 264.256 384H448V200.704zm64-72.064A320.128 320.128 0 0 1 825.472 384H896a32 32 0 1 1 0 64h-64v1.92l-56.96 454.016A64 64 0 0 1 711.552 960H312.448a64 64 0 0 1-63.488-56.064L192 449.92V448h-64a32 32 0 0 1 0-64h70.528A320.384 320.384 0 0 1 448 135.04V96a96 96 0 0 1 96-96h128a32 32 0 1 1 0 64H544a32 32 0 0 0-32 32v32.64zM743.68 640H280.32l32.128 256h399.104l32.128-256z"
    }, null, -1);
    var _hoisted_3140 = [
      _hoisted_2141
    ];
    function _sfc_render141(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue141.openBlock)(), (0, import_vue141.createElementBlock)("svg", _hoisted_1141, _hoisted_3140);
    }
    var ice_drink_default = export_helper_default(_sfc_main141, [["render", _sfc_render141], ["__file", "ice-drink.vue"]]);
    var import_vue142 = require_vue();
    var _sfc_main142 = {
      name: "IceTea"
    };
    var _hoisted_1142 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2142 = (0, import_vue142.createElementVNode)("path", {
      fill: "currentColor",
      d: "M197.696 259.648a320.128 320.128 0 0 1 628.608 0A96 96 0 0 1 896 352v64a96 96 0 0 1-71.616 92.864l-49.408 395.072A64 64 0 0 1 711.488 960H312.512a64 64 0 0 1-63.488-56.064l-49.408-395.072A96 96 0 0 1 128 416v-64a96 96 0 0 1 69.696-92.352zM264.064 256h495.872a256.128 256.128 0 0 0-495.872 0zm495.424 256H264.512l48 384h398.976l48-384zM224 448h576a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32H224a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32zm160 192h64v64h-64v-64zm192 64h64v64h-64v-64zm-128 64h64v64h-64v-64zm64-192h64v64h-64v-64z"
    }, null, -1);
    var _hoisted_3141 = [
      _hoisted_2142
    ];
    function _sfc_render142(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue142.openBlock)(), (0, import_vue142.createElementBlock)("svg", _hoisted_1142, _hoisted_3141);
    }
    var ice_tea_default = export_helper_default(_sfc_main142, [["render", _sfc_render142], ["__file", "ice-tea.vue"]]);
    var import_vue143 = require_vue();
    var _sfc_main143 = {
      name: "InfoFilled"
    };
    var _hoisted_1143 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2143 = (0, import_vue143.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a448 448 0 1 1 0 896.064A448 448 0 0 1 512 64zm67.2 275.072c33.28 0 60.288-23.104 60.288-57.344s-27.072-57.344-60.288-57.344c-33.28 0-60.16 23.104-60.16 57.344s26.88 57.344 60.16 57.344zM590.912 699.2c0-6.848 2.368-24.64 1.024-34.752l-52.608 60.544c-10.88 11.456-24.512 19.392-30.912 17.28a12.992 12.992 0 0 1-8.256-14.72l87.68-276.992c7.168-35.136-12.544-67.2-54.336-71.296-44.096 0-108.992 44.736-148.48 101.504 0 6.784-1.28 23.68.064 33.792l52.544-60.608c10.88-11.328 23.552-19.328 29.952-17.152a12.8 12.8 0 0 1 7.808 16.128L388.48 728.576c-10.048 32.256 8.96 63.872 55.04 71.04 67.84 0 107.904-43.648 147.456-100.416z"
    }, null, -1);
    var _hoisted_3142 = [
      _hoisted_2143
    ];
    function _sfc_render143(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue143.openBlock)(), (0, import_vue143.createElementBlock)("svg", _hoisted_1143, _hoisted_3142);
    }
    var info_filled_default = export_helper_default(_sfc_main143, [["render", _sfc_render143], ["__file", "info-filled.vue"]]);
    var import_vue144 = require_vue();
    var _sfc_main144 = {
      name: "Iphone"
    };
    var _hoisted_1144 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2144 = (0, import_vue144.createElementVNode)("path", {
      fill: "currentColor",
      d: "M224 768v96.064a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V768H224zm0-64h576V160a64 64 0 0 0-64-64H288a64 64 0 0 0-64 64v544zm32 288a96 96 0 0 1-96-96V128a96 96 0 0 1 96-96h512a96 96 0 0 1 96 96v768a96 96 0 0 1-96 96H256zm304-144a48 48 0 1 1-96 0 48 48 0 0 1 96 0z"
    }, null, -1);
    var _hoisted_3143 = [
      _hoisted_2144
    ];
    function _sfc_render144(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue144.openBlock)(), (0, import_vue144.createElementBlock)("svg", _hoisted_1144, _hoisted_3143);
    }
    var iphone_default = export_helper_default(_sfc_main144, [["render", _sfc_render144], ["__file", "iphone.vue"]]);
    var import_vue145 = require_vue();
    var _sfc_main145 = {
      name: "Key"
    };
    var _hoisted_1145 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2145 = (0, import_vue145.createElementVNode)("path", {
      fill: "currentColor",
      d: "M448 456.064V96a32 32 0 0 1 32-32.064L672 64a32 32 0 0 1 0 64H512v128h160a32 32 0 0 1 0 64H512v128a256 256 0 1 1-64 8.064zM512 896a192 192 0 1 0 0-384 192 192 0 0 0 0 384z"
    }, null, -1);
    var _hoisted_3144 = [
      _hoisted_2145
    ];
    function _sfc_render145(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue145.openBlock)(), (0, import_vue145.createElementBlock)("svg", _hoisted_1145, _hoisted_3144);
    }
    var key_default = export_helper_default(_sfc_main145, [["render", _sfc_render145], ["__file", "key.vue"]]);
    var import_vue146 = require_vue();
    var _sfc_main146 = {
      name: "KnifeFork"
    };
    var _hoisted_1146 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2146 = (0, import_vue146.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 410.56V96a32 32 0 0 1 64 0v314.56A96 96 0 0 0 384 320V96a32 32 0 0 1 64 0v224a160 160 0 0 1-128 156.8V928a32 32 0 1 1-64 0V476.8A160 160 0 0 1 128 320V96a32 32 0 0 1 64 0v224a96 96 0 0 0 64 90.56zm384-250.24V544h126.72c-3.328-78.72-12.928-147.968-28.608-207.744-14.336-54.528-46.848-113.344-98.112-175.872zM640 608v320a32 32 0 1 1-64 0V64h64c85.312 89.472 138.688 174.848 160 256 21.312 81.152 32 177.152 32 288H640z"
    }, null, -1);
    var _hoisted_3145 = [
      _hoisted_2146
    ];
    function _sfc_render146(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue146.openBlock)(), (0, import_vue146.createElementBlock)("svg", _hoisted_1146, _hoisted_3145);
    }
    var knife_fork_default = export_helper_default(_sfc_main146, [["render", _sfc_render146], ["__file", "knife-fork.vue"]]);
    var import_vue147 = require_vue();
    var _sfc_main147 = {
      name: "Lightning"
    };
    var _hoisted_1147 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2147 = (0, import_vue147.createElementVNode)("path", {
      fill: "currentColor",
      d: "M288 671.36v64.128A239.808 239.808 0 0 1 63.744 496.192a240.32 240.32 0 0 1 199.488-236.8 256.128 256.128 0 0 1 487.872-30.976A256.064 256.064 0 0 1 736 734.016v-64.768a192 192 0 0 0 3.328-377.92l-35.2-6.592-12.8-33.408a192.064 192.064 0 0 0-365.952 23.232l-9.92 40.896-41.472 7.04a176.32 176.32 0 0 0-146.24 173.568c0 91.968 70.464 167.36 160.256 175.232z"
    }, null, -1);
    var _hoisted_3146 = (0, import_vue147.createElementVNode)("path", {
      fill: "currentColor",
      d: "M416 736a32 32 0 0 1-27.776-47.872l128-224a32 32 0 1 1 55.552 31.744L471.168 672H608a32 32 0 0 1 27.776 47.872l-128 224a32 32 0 1 1-55.68-31.744L552.96 736H416z"
    }, null, -1);
    var _hoisted_439 = [
      _hoisted_2147,
      _hoisted_3146
    ];
    function _sfc_render147(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue147.openBlock)(), (0, import_vue147.createElementBlock)("svg", _hoisted_1147, _hoisted_439);
    }
    var lightning_default = export_helper_default(_sfc_main147, [["render", _sfc_render147], ["__file", "lightning.vue"]]);
    var import_vue148 = require_vue();
    var _sfc_main148 = {
      name: "Link"
    };
    var _hoisted_1148 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2148 = (0, import_vue148.createElementVNode)("path", {
      fill: "currentColor",
      d: "M715.648 625.152 670.4 579.904l90.496-90.56c75.008-74.944 85.12-186.368 22.656-248.896-62.528-62.464-173.952-52.352-248.96 22.656L444.16 353.6l-45.248-45.248 90.496-90.496c100.032-99.968 251.968-110.08 339.456-22.656 87.488 87.488 77.312 239.424-22.656 339.456l-90.496 90.496zm-90.496 90.496-90.496 90.496C434.624 906.112 282.688 916.224 195.2 828.8c-87.488-87.488-77.312-239.424 22.656-339.456l90.496-90.496 45.248 45.248-90.496 90.56c-75.008 74.944-85.12 186.368-22.656 248.896 62.528 62.464 173.952 52.352 248.96-22.656l90.496-90.496 45.248 45.248zm0-362.048 45.248 45.248L398.848 670.4 353.6 625.152 625.152 353.6z"
    }, null, -1);
    var _hoisted_3147 = [
      _hoisted_2148
    ];
    function _sfc_render148(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue148.openBlock)(), (0, import_vue148.createElementBlock)("svg", _hoisted_1148, _hoisted_3147);
    }
    var link_default = export_helper_default(_sfc_main148, [["render", _sfc_render148], ["__file", "link.vue"]]);
    var import_vue149 = require_vue();
    var _sfc_main149 = {
      name: "List"
    };
    var _hoisted_1149 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2149 = (0, import_vue149.createElementVNode)("path", {
      fill: "currentColor",
      d: "M704 192h160v736H160V192h160v64h384v-64zM288 512h448v-64H288v64zm0 256h448v-64H288v64zm96-576V96h256v96H384z"
    }, null, -1);
    var _hoisted_3148 = [
      _hoisted_2149
    ];
    function _sfc_render149(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue149.openBlock)(), (0, import_vue149.createElementBlock)("svg", _hoisted_1149, _hoisted_3148);
    }
    var list_default = export_helper_default(_sfc_main149, [["render", _sfc_render149], ["__file", "list.vue"]]);
    var import_vue150 = require_vue();
    var _sfc_main150 = {
      name: "Loading"
    };
    var _hoisted_1150 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2150 = (0, import_vue150.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"
    }, null, -1);
    var _hoisted_3149 = [
      _hoisted_2150
    ];
    function _sfc_render150(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue150.openBlock)(), (0, import_vue150.createElementBlock)("svg", _hoisted_1150, _hoisted_3149);
    }
    var loading_default = export_helper_default(_sfc_main150, [["render", _sfc_render150], ["__file", "loading.vue"]]);
    var import_vue151 = require_vue();
    var _sfc_main151 = {
      name: "LocationFilled"
    };
    var _hoisted_1151 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2151 = (0, import_vue151.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 928c23.936 0 117.504-68.352 192.064-153.152C803.456 661.888 864 535.808 864 416c0-189.632-155.84-320-352-320S160 226.368 160 416c0 120.32 60.544 246.4 159.936 359.232C394.432 859.84 488 928 512 928zm0-435.2a64 64 0 1 0 0-128 64 64 0 0 0 0 128zm0 140.8a204.8 204.8 0 1 1 0-409.6 204.8 204.8 0 0 1 0 409.6z"
    }, null, -1);
    var _hoisted_3150 = [
      _hoisted_2151
    ];
    function _sfc_render151(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue151.openBlock)(), (0, import_vue151.createElementBlock)("svg", _hoisted_1151, _hoisted_3150);
    }
    var location_filled_default = export_helper_default(_sfc_main151, [["render", _sfc_render151], ["__file", "location-filled.vue"]]);
    var import_vue152 = require_vue();
    var _sfc_main152 = {
      name: "LocationInformation"
    };
    var _hoisted_1152 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2152 = (0, import_vue152.createElementVNode)("path", {
      fill: "currentColor",
      d: "M288 896h448q32 0 32 32t-32 32H288q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_3151 = (0, import_vue152.createElementVNode)("path", {
      fill: "currentColor",
      d: "M800 416a288 288 0 1 0-576 0c0 118.144 94.528 272.128 288 456.576C705.472 688.128 800 534.144 800 416zM512 960C277.312 746.688 160 565.312 160 416a352 352 0 0 1 704 0c0 149.312-117.312 330.688-352 544z"
    }, null, -1);
    var _hoisted_440 = (0, import_vue152.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 512a96 96 0 1 0 0-192 96 96 0 0 0 0 192zm0 64a160 160 0 1 1 0-320 160 160 0 0 1 0 320z"
    }, null, -1);
    var _hoisted_511 = [
      _hoisted_2152,
      _hoisted_3151,
      _hoisted_440
    ];
    function _sfc_render152(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue152.openBlock)(), (0, import_vue152.createElementBlock)("svg", _hoisted_1152, _hoisted_511);
    }
    var location_information_default = export_helper_default(_sfc_main152, [["render", _sfc_render152], ["__file", "location-information.vue"]]);
    var import_vue153 = require_vue();
    var _sfc_main153 = {
      name: "Location"
    };
    var _hoisted_1153 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2153 = (0, import_vue153.createElementVNode)("path", {
      fill: "currentColor",
      d: "M800 416a288 288 0 1 0-576 0c0 118.144 94.528 272.128 288 456.576C705.472 688.128 800 534.144 800 416zM512 960C277.312 746.688 160 565.312 160 416a352 352 0 0 1 704 0c0 149.312-117.312 330.688-352 544z"
    }, null, -1);
    var _hoisted_3152 = (0, import_vue153.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 512a96 96 0 1 0 0-192 96 96 0 0 0 0 192zm0 64a160 160 0 1 1 0-320 160 160 0 0 1 0 320z"
    }, null, -1);
    var _hoisted_441 = [
      _hoisted_2153,
      _hoisted_3152
    ];
    function _sfc_render153(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue153.openBlock)(), (0, import_vue153.createElementBlock)("svg", _hoisted_1153, _hoisted_441);
    }
    var location_default = export_helper_default(_sfc_main153, [["render", _sfc_render153], ["__file", "location.vue"]]);
    var import_vue154 = require_vue();
    var _sfc_main154 = {
      name: "Lock"
    };
    var _hoisted_1154 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2154 = (0, import_vue154.createElementVNode)("path", {
      fill: "currentColor",
      d: "M224 448a32 32 0 0 0-32 32v384a32 32 0 0 0 32 32h576a32 32 0 0 0 32-32V480a32 32 0 0 0-32-32H224zm0-64h576a96 96 0 0 1 96 96v384a96 96 0 0 1-96 96H224a96 96 0 0 1-96-96V480a96 96 0 0 1 96-96z"
    }, null, -1);
    var _hoisted_3153 = (0, import_vue154.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 544a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V576a32 32 0 0 1 32-32zm192-160v-64a192 192 0 1 0-384 0v64h384zM512 64a256 256 0 0 1 256 256v128H256V320A256 256 0 0 1 512 64z"
    }, null, -1);
    var _hoisted_442 = [
      _hoisted_2154,
      _hoisted_3153
    ];
    function _sfc_render154(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue154.openBlock)(), (0, import_vue154.createElementBlock)("svg", _hoisted_1154, _hoisted_442);
    }
    var lock_default = export_helper_default(_sfc_main154, [["render", _sfc_render154], ["__file", "lock.vue"]]);
    var import_vue155 = require_vue();
    var _sfc_main155 = {
      name: "Lollipop"
    };
    var _hoisted_1155 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2155 = (0, import_vue155.createElementVNode)("path", {
      fill: "currentColor",
      d: "M513.28 448a64 64 0 1 1 76.544 49.728A96 96 0 0 0 768 448h64a160 160 0 0 1-320 0h1.28zm-126.976-29.696a256 256 0 1 0 43.52-180.48A256 256 0 0 1 832 448h-64a192 192 0 0 0-381.696-29.696zm105.664 249.472L285.696 874.048a96 96 0 0 1-135.68-135.744l206.208-206.272a320 320 0 1 1 135.744 135.744zm-54.464-36.032a321.92 321.92 0 0 1-45.248-45.248L195.2 783.552a32 32 0 1 0 45.248 45.248l197.056-197.12z"
    }, null, -1);
    var _hoisted_3154 = [
      _hoisted_2155
    ];
    function _sfc_render155(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue155.openBlock)(), (0, import_vue155.createElementBlock)("svg", _hoisted_1155, _hoisted_3154);
    }
    var lollipop_default = export_helper_default(_sfc_main155, [["render", _sfc_render155], ["__file", "lollipop.vue"]]);
    var import_vue156 = require_vue();
    var _sfc_main156 = {
      name: "MagicStick"
    };
    var _hoisted_1156 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2156 = (0, import_vue156.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64h64v192h-64V64zm0 576h64v192h-64V640zM160 480v-64h192v64H160zm576 0v-64h192v64H736zM249.856 199.04l45.248-45.184L430.848 289.6 385.6 334.848 249.856 199.104zM657.152 606.4l45.248-45.248 135.744 135.744-45.248 45.248L657.152 606.4zM114.048 923.2 68.8 877.952l316.8-316.8 45.248 45.248-316.8 316.8zM702.4 334.848 657.152 289.6l135.744-135.744 45.248 45.248L702.4 334.848z"
    }, null, -1);
    var _hoisted_3155 = [
      _hoisted_2156
    ];
    function _sfc_render156(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue156.openBlock)(), (0, import_vue156.createElementBlock)("svg", _hoisted_1156, _hoisted_3155);
    }
    var magic_stick_default = export_helper_default(_sfc_main156, [["render", _sfc_render156], ["__file", "magic-stick.vue"]]);
    var import_vue157 = require_vue();
    var _sfc_main157 = {
      name: "Magnet"
    };
    var _hoisted_1157 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2157 = (0, import_vue157.createElementVNode)("path", {
      fill: "currentColor",
      d: "M832 320V192H704v320a192 192 0 1 1-384 0V192H192v128h128v64H192v128a320 320 0 0 0 640 0V384H704v-64h128zM640 512V128h256v384a384 384 0 1 1-768 0V128h256v384a128 128 0 1 0 256 0z"
    }, null, -1);
    var _hoisted_3156 = [
      _hoisted_2157
    ];
    function _sfc_render157(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue157.openBlock)(), (0, import_vue157.createElementBlock)("svg", _hoisted_1157, _hoisted_3156);
    }
    var magnet_default = export_helper_default(_sfc_main157, [["render", _sfc_render157], ["__file", "magnet.vue"]]);
    var import_vue158 = require_vue();
    var _sfc_main158 = {
      name: "Male"
    };
    var _hoisted_1158 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2158 = (0, import_vue158.createElementVNode)("path", {
      fill: "currentColor",
      d: "M399.5 849.5a225 225 0 1 0 0-450 225 225 0 0 0 0 450zm0 56.25a281.25 281.25 0 1 1 0-562.5 281.25 281.25 0 0 1 0 562.5zm253.125-787.5h225q28.125 0 28.125 28.125T877.625 174.5h-225q-28.125 0-28.125-28.125t28.125-28.125z"
    }, null, -1);
    var _hoisted_3157 = (0, import_vue158.createElementVNode)("path", {
      fill: "currentColor",
      d: "M877.625 118.25q28.125 0 28.125 28.125v225q0 28.125-28.125 28.125T849.5 371.375v-225q0-28.125 28.125-28.125z"
    }, null, -1);
    var _hoisted_443 = (0, import_vue158.createElementVNode)("path", {
      fill: "currentColor",
      d: "M604.813 458.9 565.1 419.131l292.613-292.668 39.825 39.824z"
    }, null, -1);
    var _hoisted_512 = [
      _hoisted_2158,
      _hoisted_3157,
      _hoisted_443
    ];
    function _sfc_render158(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue158.openBlock)(), (0, import_vue158.createElementBlock)("svg", _hoisted_1158, _hoisted_512);
    }
    var male_default = export_helper_default(_sfc_main158, [["render", _sfc_render158], ["__file", "male.vue"]]);
    var import_vue159 = require_vue();
    var _sfc_main159 = {
      name: "Management"
    };
    var _hoisted_1159 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2159 = (0, import_vue159.createElementVNode)("path", {
      fill: "currentColor",
      d: "M576 128v288l96-96 96 96V128h128v768H320V128h256zm-448 0h128v768H128V128z"
    }, null, -1);
    var _hoisted_3158 = [
      _hoisted_2159
    ];
    function _sfc_render159(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue159.openBlock)(), (0, import_vue159.createElementBlock)("svg", _hoisted_1159, _hoisted_3158);
    }
    var management_default = export_helper_default(_sfc_main159, [["render", _sfc_render159], ["__file", "management.vue"]]);
    var import_vue160 = require_vue();
    var _sfc_main160 = {
      name: "MapLocation"
    };
    var _hoisted_1160 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2160 = (0, import_vue160.createElementVNode)("path", {
      fill: "currentColor",
      d: "M800 416a288 288 0 1 0-576 0c0 118.144 94.528 272.128 288 456.576C705.472 688.128 800 534.144 800 416zM512 960C277.312 746.688 160 565.312 160 416a352 352 0 0 1 704 0c0 149.312-117.312 330.688-352 544z"
    }, null, -1);
    var _hoisted_3159 = (0, import_vue160.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 448a64 64 0 1 0 0-128 64 64 0 0 0 0 128zm0 64a128 128 0 1 1 0-256 128 128 0 0 1 0 256zm345.6 192L960 960H672v-64H352v64H64l102.4-256h691.2zm-68.928 0H235.328l-76.8 192h706.944l-76.8-192z"
    }, null, -1);
    var _hoisted_444 = [
      _hoisted_2160,
      _hoisted_3159
    ];
    function _sfc_render160(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue160.openBlock)(), (0, import_vue160.createElementBlock)("svg", _hoisted_1160, _hoisted_444);
    }
    var map_location_default = export_helper_default(_sfc_main160, [["render", _sfc_render160], ["__file", "map-location.vue"]]);
    var import_vue161 = require_vue();
    var _sfc_main161 = {
      name: "Medal"
    };
    var _hoisted_1161 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2161 = (0, import_vue161.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 896a256 256 0 1 0 0-512 256 256 0 0 0 0 512zm0 64a320 320 0 1 1 0-640 320 320 0 0 1 0 640z"
    }, null, -1);
    var _hoisted_3160 = (0, import_vue161.createElementVNode)("path", {
      fill: "currentColor",
      d: "M576 128H448v200a286.72 286.72 0 0 1 64-8c19.52 0 40.832 2.688 64 8V128zm64 0v219.648c24.448 9.088 50.56 20.416 78.4 33.92L757.44 128H640zm-256 0H266.624l39.04 253.568c27.84-13.504 53.888-24.832 78.336-33.92V128zM229.312 64h565.376a32 32 0 0 1 31.616 36.864L768 480c-113.792-64-199.104-96-256-96-56.896 0-142.208 32-256 96l-58.304-379.136A32 32 0 0 1 229.312 64z"
    }, null, -1);
    var _hoisted_445 = [
      _hoisted_2161,
      _hoisted_3160
    ];
    function _sfc_render161(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue161.openBlock)(), (0, import_vue161.createElementBlock)("svg", _hoisted_1161, _hoisted_445);
    }
    var medal_default = export_helper_default(_sfc_main161, [["render", _sfc_render161], ["__file", "medal.vue"]]);
    var import_vue162 = require_vue();
    var _sfc_main162 = {
      name: "Memo"
    };
    var _hoisted_1162 = {
      version: "1.1",
      id: "a",
      xmlns: "http://www.w3.org/2000/svg",
      x: "0",
      y: "0",
      viewBox: "0 0 1024 1024",
      style: { "enable-background": "new 0 0 1024 1024" },
      "xml:space": "preserve"
    };
    var _hoisted_2162 = (0, import_vue162.createElementVNode)("path", {
      d: "M480 320h192c21.33 0 32-10.67 32-32s-10.67-32-32-32H480c-21.33 0-32 10.67-32 32s10.67 32 32 32z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_3161 = (0, import_vue162.createElementVNode)("path", {
      d: "M887.01 72.99C881.01 67 873.34 64 864 64H160c-9.35 0-17.02 3-23.01 8.99C131 78.99 128 86.66 128 96v832c0 9.35 2.99 17.02 8.99 23.01S150.66 960 160 960h704c9.35 0 17.02-2.99 23.01-8.99S896 937.34 896 928V96c0-9.35-3-17.02-8.99-23.01zM192 896V128h96v768h-96zm640 0H352V128h480v768z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_446 = (0, import_vue162.createElementVNode)("path", {
      d: "M480 512h192c21.33 0 32-10.67 32-32s-10.67-32-32-32H480c-21.33 0-32 10.67-32 32s10.67 32 32 32zM480 704h192c21.33 0 32-10.67 32-32s-10.67-32-32-32H480c-21.33 0-32 10.67-32 32s10.67 32 32 32z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_513 = [
      _hoisted_2162,
      _hoisted_3161,
      _hoisted_446
    ];
    function _sfc_render162(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue162.openBlock)(), (0, import_vue162.createElementBlock)("svg", _hoisted_1162, _hoisted_513);
    }
    var memo_default = export_helper_default(_sfc_main162, [["render", _sfc_render162], ["__file", "memo.vue"]]);
    var import_vue163 = require_vue();
    var _sfc_main163 = {
      name: "Menu"
    };
    var _hoisted_1163 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2163 = (0, import_vue163.createElementVNode)("path", {
      fill: "currentColor",
      d: "M160 448a32 32 0 0 1-32-32V160.064a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32V416a32 32 0 0 1-32 32H160zm448 0a32 32 0 0 1-32-32V160.064a32 32 0 0 1 32-32h255.936a32 32 0 0 1 32 32V416a32 32 0 0 1-32 32H608zM160 896a32 32 0 0 1-32-32V608a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32v256a32 32 0 0 1-32 32H160zm448 0a32 32 0 0 1-32-32V608a32 32 0 0 1 32-32h255.936a32 32 0 0 1 32 32v256a32 32 0 0 1-32 32H608z"
    }, null, -1);
    var _hoisted_3162 = [
      _hoisted_2163
    ];
    function _sfc_render163(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue163.openBlock)(), (0, import_vue163.createElementBlock)("svg", _hoisted_1163, _hoisted_3162);
    }
    var menu_default = export_helper_default(_sfc_main163, [["render", _sfc_render163], ["__file", "menu.vue"]]);
    var import_vue164 = require_vue();
    var _sfc_main164 = {
      name: "MessageBox"
    };
    var _hoisted_1164 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2164 = (0, import_vue164.createElementVNode)("path", {
      fill: "currentColor",
      d: "M288 384h448v64H288v-64zm96-128h256v64H384v-64zM131.456 512H384v128h256V512h252.544L721.856 192H302.144L131.456 512zM896 576H704v128H320V576H128v256h768V576zM275.776 128h472.448a32 32 0 0 1 28.608 17.664l179.84 359.552A32 32 0 0 1 960 519.552V864a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V519.552a32 32 0 0 1 3.392-14.336l179.776-359.552A32 32 0 0 1 275.776 128z"
    }, null, -1);
    var _hoisted_3163 = [
      _hoisted_2164
    ];
    function _sfc_render164(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue164.openBlock)(), (0, import_vue164.createElementBlock)("svg", _hoisted_1164, _hoisted_3163);
    }
    var message_box_default = export_helper_default(_sfc_main164, [["render", _sfc_render164], ["__file", "message-box.vue"]]);
    var import_vue165 = require_vue();
    var _sfc_main165 = {
      name: "Message"
    };
    var _hoisted_1165 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2165 = (0, import_vue165.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 224v512a64 64 0 0 0 64 64h640a64 64 0 0 0 64-64V224H128zm0-64h768a64 64 0 0 1 64 64v512a128 128 0 0 1-128 128H192A128 128 0 0 1 64 736V224a64 64 0 0 1 64-64z"
    }, null, -1);
    var _hoisted_3164 = (0, import_vue165.createElementVNode)("path", {
      fill: "currentColor",
      d: "M904 224 656.512 506.88a192 192 0 0 1-289.024 0L120 224h784zm-698.944 0 210.56 240.704a128 128 0 0 0 192.704 0L818.944 224H205.056z"
    }, null, -1);
    var _hoisted_447 = [
      _hoisted_2165,
      _hoisted_3164
    ];
    function _sfc_render165(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue165.openBlock)(), (0, import_vue165.createElementBlock)("svg", _hoisted_1165, _hoisted_447);
    }
    var message_default = export_helper_default(_sfc_main165, [["render", _sfc_render165], ["__file", "message.vue"]]);
    var import_vue166 = require_vue();
    var _sfc_main166 = {
      name: "Mic"
    };
    var _hoisted_1166 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2166 = (0, import_vue166.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 704h160a64 64 0 0 0 64-64v-32h-96a32 32 0 0 1 0-64h96v-96h-96a32 32 0 0 1 0-64h96v-96h-96a32 32 0 0 1 0-64h96v-32a64 64 0 0 0-64-64H384a64 64 0 0 0-64 64v32h96a32 32 0 0 1 0 64h-96v96h96a32 32 0 0 1 0 64h-96v96h96a32 32 0 0 1 0 64h-96v32a64 64 0 0 0 64 64h96zm64 64v128h192a32 32 0 1 1 0 64H288a32 32 0 1 1 0-64h192V768h-96a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64h256a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128h-96z"
    }, null, -1);
    var _hoisted_3165 = [
      _hoisted_2166
    ];
    function _sfc_render166(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue166.openBlock)(), (0, import_vue166.createElementBlock)("svg", _hoisted_1166, _hoisted_3165);
    }
    var mic_default = export_helper_default(_sfc_main166, [["render", _sfc_render166], ["__file", "mic.vue"]]);
    var import_vue167 = require_vue();
    var _sfc_main167 = {
      name: "Microphone"
    };
    var _hoisted_1167 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2167 = (0, import_vue167.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 128a128 128 0 0 0-128 128v256a128 128 0 1 0 256 0V256a128 128 0 0 0-128-128zm0-64a192 192 0 0 1 192 192v256a192 192 0 1 1-384 0V256A192 192 0 0 1 512 64zm-32 832v-64a288 288 0 0 1-288-288v-32a32 32 0 0 1 64 0v32a224 224 0 0 0 224 224h64a224 224 0 0 0 224-224v-32a32 32 0 1 1 64 0v32a288 288 0 0 1-288 288v64h64a32 32 0 1 1 0 64H416a32 32 0 1 1 0-64h64z"
    }, null, -1);
    var _hoisted_3166 = [
      _hoisted_2167
    ];
    function _sfc_render167(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue167.openBlock)(), (0, import_vue167.createElementBlock)("svg", _hoisted_1167, _hoisted_3166);
    }
    var microphone_default = export_helper_default(_sfc_main167, [["render", _sfc_render167], ["__file", "microphone.vue"]]);
    var import_vue168 = require_vue();
    var _sfc_main168 = {
      name: "MilkTea"
    };
    var _hoisted_1168 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2168 = (0, import_vue168.createElementVNode)("path", {
      fill: "currentColor",
      d: "M416 128V96a96 96 0 0 1 96-96h128a32 32 0 1 1 0 64H512a32 32 0 0 0-32 32v32h320a96 96 0 0 1 11.712 191.296l-39.68 581.056A64 64 0 0 1 708.224 960H315.776a64 64 0 0 1-63.872-59.648l-39.616-581.056A96 96 0 0 1 224 128h192zM276.48 320l39.296 576h392.448l4.8-70.784a224.064 224.064 0 0 1 30.016-439.808L747.52 320H276.48zM224 256h576a32 32 0 1 0 0-64H224a32 32 0 0 0 0 64zm493.44 503.872 21.12-309.12a160 160 0 0 0-21.12 309.12z"
    }, null, -1);
    var _hoisted_3167 = [
      _hoisted_2168
    ];
    function _sfc_render168(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue168.openBlock)(), (0, import_vue168.createElementBlock)("svg", _hoisted_1168, _hoisted_3167);
    }
    var milk_tea_default = export_helper_default(_sfc_main168, [["render", _sfc_render168], ["__file", "milk-tea.vue"]]);
    var import_vue169 = require_vue();
    var _sfc_main169 = {
      name: "Minus"
    };
    var _hoisted_1169 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2169 = (0, import_vue169.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 544h768a32 32 0 1 0 0-64H128a32 32 0 0 0 0 64z"
    }, null, -1);
    var _hoisted_3168 = [
      _hoisted_2169
    ];
    function _sfc_render169(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue169.openBlock)(), (0, import_vue169.createElementBlock)("svg", _hoisted_1169, _hoisted_3168);
    }
    var minus_default = export_helper_default(_sfc_main169, [["render", _sfc_render169], ["__file", "minus.vue"]]);
    var import_vue170 = require_vue();
    var _sfc_main170 = {
      name: "Money"
    };
    var _hoisted_1170 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2170 = (0, import_vue170.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 640v192h640V384H768v-64h150.976c14.272 0 19.456 1.472 24.64 4.288a29.056 29.056 0 0 1 12.16 12.096c2.752 5.184 4.224 10.368 4.224 24.64v493.952c0 14.272-1.472 19.456-4.288 24.64a29.056 29.056 0 0 1-12.096 12.16c-5.184 2.752-10.368 4.224-24.64 4.224H233.024c-14.272 0-19.456-1.472-24.64-4.288a29.056 29.056 0 0 1-12.16-12.096c-2.688-5.184-4.224-10.368-4.224-24.576V640h64z"
    }, null, -1);
    var _hoisted_3169 = (0, import_vue170.createElementVNode)("path", {
      fill: "currentColor",
      d: "M768 192H128v448h640V192zm64-22.976v493.952c0 14.272-1.472 19.456-4.288 24.64a29.056 29.056 0 0 1-12.096 12.16c-5.184 2.752-10.368 4.224-24.64 4.224H105.024c-14.272 0-19.456-1.472-24.64-4.288a29.056 29.056 0 0 1-12.16-12.096C65.536 682.432 64 677.248 64 663.04V169.024c0-14.272 1.472-19.456 4.288-24.64a29.056 29.056 0 0 1 12.096-12.16C85.568 129.536 90.752 128 104.96 128h685.952c14.272 0 19.456 1.472 24.64 4.288a29.056 29.056 0 0 1 12.16 12.096c2.752 5.184 4.224 10.368 4.224 24.64z"
    }, null, -1);
    var _hoisted_448 = (0, import_vue170.createElementVNode)("path", {
      fill: "currentColor",
      d: "M448 576a160 160 0 1 1 0-320 160 160 0 0 1 0 320zm0-64a96 96 0 1 0 0-192 96 96 0 0 0 0 192z"
    }, null, -1);
    var _hoisted_514 = [
      _hoisted_2170,
      _hoisted_3169,
      _hoisted_448
    ];
    function _sfc_render170(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue170.openBlock)(), (0, import_vue170.createElementBlock)("svg", _hoisted_1170, _hoisted_514);
    }
    var money_default = export_helper_default(_sfc_main170, [["render", _sfc_render170], ["__file", "money.vue"]]);
    var import_vue171 = require_vue();
    var _sfc_main171 = {
      name: "Monitor"
    };
    var _hoisted_1171 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2171 = (0, import_vue171.createElementVNode)("path", {
      fill: "currentColor",
      d: "M544 768v128h192a32 32 0 1 1 0 64H288a32 32 0 1 1 0-64h192V768H192A128 128 0 0 1 64 640V256a128 128 0 0 1 128-128h640a128 128 0 0 1 128 128v384a128 128 0 0 1-128 128H544zM192 192a64 64 0 0 0-64 64v384a64 64 0 0 0 64 64h640a64 64 0 0 0 64-64V256a64 64 0 0 0-64-64H192z"
    }, null, -1);
    var _hoisted_3170 = [
      _hoisted_2171
    ];
    function _sfc_render171(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue171.openBlock)(), (0, import_vue171.createElementBlock)("svg", _hoisted_1171, _hoisted_3170);
    }
    var monitor_default = export_helper_default(_sfc_main171, [["render", _sfc_render171], ["__file", "monitor.vue"]]);
    var import_vue172 = require_vue();
    var _sfc_main172 = {
      name: "MoonNight"
    };
    var _hoisted_1172 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2172 = (0, import_vue172.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 512a448 448 0 0 1 215.872-383.296A384 384 0 0 0 213.76 640h188.8A448.256 448.256 0 0 1 384 512zM171.136 704a448 448 0 0 1 636.992-575.296A384 384 0 0 0 499.328 704h-328.32z"
    }, null, -1);
    var _hoisted_3171 = (0, import_vue172.createElementVNode)("path", {
      fill: "currentColor",
      d: "M32 640h960q32 0 32 32t-32 32H32q-32 0-32-32t32-32zm128 128h384a32 32 0 1 1 0 64H160a32 32 0 1 1 0-64zm160 127.68 224 .256a32 32 0 0 1 32 32V928a32 32 0 0 1-32 32l-224-.384a32 32 0 0 1-32-32v-.064a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_449 = [
      _hoisted_2172,
      _hoisted_3171
    ];
    function _sfc_render172(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue172.openBlock)(), (0, import_vue172.createElementBlock)("svg", _hoisted_1172, _hoisted_449);
    }
    var moon_night_default = export_helper_default(_sfc_main172, [["render", _sfc_render172], ["__file", "moon-night.vue"]]);
    var import_vue173 = require_vue();
    var _sfc_main173 = {
      name: "Moon"
    };
    var _hoisted_1173 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2173 = (0, import_vue173.createElementVNode)("path", {
      fill: "currentColor",
      d: "M240.448 240.448a384 384 0 1 0 559.424 525.696 448 448 0 0 1-542.016-542.08 390.592 390.592 0 0 0-17.408 16.384zm181.056 362.048a384 384 0 0 0 525.632 16.384A448 448 0 1 1 405.056 76.8a384 384 0 0 0 16.448 525.696z"
    }, null, -1);
    var _hoisted_3172 = [
      _hoisted_2173
    ];
    function _sfc_render173(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue173.openBlock)(), (0, import_vue173.createElementBlock)("svg", _hoisted_1173, _hoisted_3172);
    }
    var moon_default = export_helper_default(_sfc_main173, [["render", _sfc_render173], ["__file", "moon.vue"]]);
    var import_vue174 = require_vue();
    var _sfc_main174 = {
      name: "MoreFilled"
    };
    var _hoisted_1174 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2174 = (0, import_vue174.createElementVNode)("path", {
      fill: "currentColor",
      d: "M176 416a112 112 0 1 1 0 224 112 112 0 0 1 0-224zm336 0a112 112 0 1 1 0 224 112 112 0 0 1 0-224zm336 0a112 112 0 1 1 0 224 112 112 0 0 1 0-224z"
    }, null, -1);
    var _hoisted_3173 = [
      _hoisted_2174
    ];
    function _sfc_render174(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue174.openBlock)(), (0, import_vue174.createElementBlock)("svg", _hoisted_1174, _hoisted_3173);
    }
    var more_filled_default = export_helper_default(_sfc_main174, [["render", _sfc_render174], ["__file", "more-filled.vue"]]);
    var import_vue175 = require_vue();
    var _sfc_main175 = {
      name: "More"
    };
    var _hoisted_1175 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2175 = (0, import_vue175.createElementVNode)("path", {
      fill: "currentColor",
      d: "M176 416a112 112 0 1 0 0 224 112 112 0 0 0 0-224m0 64a48 48 0 1 1 0 96 48 48 0 0 1 0-96zm336-64a112 112 0 1 1 0 224 112 112 0 0 1 0-224zm0 64a48 48 0 1 0 0 96 48 48 0 0 0 0-96zm336-64a112 112 0 1 1 0 224 112 112 0 0 1 0-224zm0 64a48 48 0 1 0 0 96 48 48 0 0 0 0-96z"
    }, null, -1);
    var _hoisted_3174 = [
      _hoisted_2175
    ];
    function _sfc_render175(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue175.openBlock)(), (0, import_vue175.createElementBlock)("svg", _hoisted_1175, _hoisted_3174);
    }
    var more_default = export_helper_default(_sfc_main175, [["render", _sfc_render175], ["__file", "more.vue"]]);
    var import_vue176 = require_vue();
    var _sfc_main176 = {
      name: "MostlyCloudy"
    };
    var _hoisted_1176 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2176 = (0, import_vue176.createElementVNode)("path", {
      fill: "currentColor",
      d: "M737.216 357.952 704 349.824l-11.776-32a192.064 192.064 0 0 0-367.424 23.04l-8.96 39.04-39.04 8.96A192.064 192.064 0 0 0 320 768h368a207.808 207.808 0 0 0 207.808-208 208.32 208.32 0 0 0-158.592-202.048zm15.168-62.208A272.32 272.32 0 0 1 959.744 560a271.808 271.808 0 0 1-271.552 272H320a256 256 0 0 1-57.536-505.536 256.128 256.128 0 0 1 489.92-30.72z"
    }, null, -1);
    var _hoisted_3175 = [
      _hoisted_2176
    ];
    function _sfc_render176(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue176.openBlock)(), (0, import_vue176.createElementBlock)("svg", _hoisted_1176, _hoisted_3175);
    }
    var mostly_cloudy_default = export_helper_default(_sfc_main176, [["render", _sfc_render176], ["__file", "mostly-cloudy.vue"]]);
    var import_vue177 = require_vue();
    var _sfc_main177 = {
      name: "Mouse"
    };
    var _hoisted_1177 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2177 = (0, import_vue177.createElementVNode)("path", {
      fill: "currentColor",
      d: "M438.144 256c-68.352 0-92.736 4.672-117.76 18.112-20.096 10.752-35.52 26.176-46.272 46.272C260.672 345.408 256 369.792 256 438.144v275.712c0 68.352 4.672 92.736 18.112 117.76 10.752 20.096 26.176 35.52 46.272 46.272C345.408 891.328 369.792 896 438.144 896h147.712c68.352 0 92.736-4.672 117.76-18.112 20.096-10.752 35.52-26.176 46.272-46.272C763.328 806.592 768 782.208 768 713.856V438.144c0-68.352-4.672-92.736-18.112-117.76a110.464 110.464 0 0 0-46.272-46.272C678.592 260.672 654.208 256 585.856 256H438.144zm0-64h147.712c85.568 0 116.608 8.96 147.904 25.6 31.36 16.768 55.872 41.344 72.576 72.64C823.104 321.536 832 352.576 832 438.08v275.84c0 85.504-8.96 116.544-25.6 147.84a174.464 174.464 0 0 1-72.64 72.576C702.464 951.104 671.424 960 585.92 960H438.08c-85.504 0-116.544-8.96-147.84-25.6a174.464 174.464 0 0 1-72.64-72.704c-16.768-31.296-25.664-62.336-25.664-147.84v-275.84c0-85.504 8.96-116.544 25.6-147.84a174.464 174.464 0 0 1 72.768-72.576c31.232-16.704 62.272-25.6 147.776-25.6z"
    }, null, -1);
    var _hoisted_3176 = (0, import_vue177.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 320q32 0 32 32v128q0 32-32 32t-32-32V352q0-32 32-32zm32-96a32 32 0 0 1-64 0v-64a32 32 0 0 0-32-32h-96a32 32 0 0 1 0-64h96a96 96 0 0 1 96 96v64z"
    }, null, -1);
    var _hoisted_450 = [
      _hoisted_2177,
      _hoisted_3176
    ];
    function _sfc_render177(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue177.openBlock)(), (0, import_vue177.createElementBlock)("svg", _hoisted_1177, _hoisted_450);
    }
    var mouse_default = export_helper_default(_sfc_main177, [["render", _sfc_render177], ["__file", "mouse.vue"]]);
    var import_vue178 = require_vue();
    var _sfc_main178 = {
      name: "Mug"
    };
    var _hoisted_1178 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2178 = (0, import_vue178.createElementVNode)("path", {
      fill: "currentColor",
      d: "M736 800V160H160v640a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64zm64-544h63.552a96 96 0 0 1 96 96v224a96 96 0 0 1-96 96H800v128a128 128 0 0 1-128 128H224A128 128 0 0 1 96 800V128a32 32 0 0 1 32-32h640a32 32 0 0 1 32 32v128zm0 64v288h63.552a32 32 0 0 0 32-32V352a32 32 0 0 0-32-32H800z"
    }, null, -1);
    var _hoisted_3177 = [
      _hoisted_2178
    ];
    function _sfc_render178(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue178.openBlock)(), (0, import_vue178.createElementBlock)("svg", _hoisted_1178, _hoisted_3177);
    }
    var mug_default = export_helper_default(_sfc_main178, [["render", _sfc_render178], ["__file", "mug.vue"]]);
    var import_vue179 = require_vue();
    var _sfc_main179 = {
      name: "MuteNotification"
    };
    var _hoisted_1179 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2179 = (0, import_vue179.createElementVNode)("path", {
      fill: "currentColor",
      d: "m241.216 832 63.616-64H768V448c0-42.368-10.24-82.304-28.48-117.504l46.912-47.232C815.36 331.392 832 387.84 832 448v320h96a32 32 0 1 1 0 64H241.216zm-90.24 0H96a32 32 0 1 1 0-64h96V448a320.128 320.128 0 0 1 256-313.6V128a64 64 0 1 1 128 0v6.4a319.552 319.552 0 0 1 171.648 97.088l-45.184 45.44A256 256 0 0 0 256 448v278.336L151.04 832zM448 896h128a64 64 0 0 1-128 0z"
    }, null, -1);
    var _hoisted_3178 = (0, import_vue179.createElementVNode)("path", {
      fill: "currentColor",
      d: "M150.72 859.072a32 32 0 0 1-45.44-45.056l704-708.544a32 32 0 0 1 45.44 45.056l-704 708.544z"
    }, null, -1);
    var _hoisted_451 = [
      _hoisted_2179,
      _hoisted_3178
    ];
    function _sfc_render179(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue179.openBlock)(), (0, import_vue179.createElementBlock)("svg", _hoisted_1179, _hoisted_451);
    }
    var mute_notification_default = export_helper_default(_sfc_main179, [["render", _sfc_render179], ["__file", "mute-notification.vue"]]);
    var import_vue180 = require_vue();
    var _sfc_main180 = {
      name: "Mute"
    };
    var _hoisted_1180 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2180 = (0, import_vue180.createElementVNode)("path", {
      fill: "currentColor",
      d: "m412.16 592.128-45.44 45.44A191.232 191.232 0 0 1 320 512V256a192 192 0 1 1 384 0v44.352l-64 64V256a128 128 0 1 0-256 0v256c0 30.336 10.56 58.24 28.16 80.128zm51.968 38.592A128 128 0 0 0 640 512v-57.152l64-64V512a192 192 0 0 1-287.68 166.528l47.808-47.808zM314.88 779.968l46.144-46.08A222.976 222.976 0 0 0 480 768h64a224 224 0 0 0 224-224v-32a32 32 0 1 1 64 0v32a288 288 0 0 1-288 288v64h64a32 32 0 1 1 0 64H416a32 32 0 1 1 0-64h64v-64c-61.44 0-118.4-19.2-165.12-52.032zM266.752 737.6A286.976 286.976 0 0 1 192 544v-32a32 32 0 0 1 64 0v32c0 56.832 21.184 108.8 56.064 148.288L266.752 737.6z"
    }, null, -1);
    var _hoisted_3179 = (0, import_vue180.createElementVNode)("path", {
      fill: "currentColor",
      d: "M150.72 859.072a32 32 0 0 1-45.44-45.056l704-708.544a32 32 0 0 1 45.44 45.056l-704 708.544z"
    }, null, -1);
    var _hoisted_452 = [
      _hoisted_2180,
      _hoisted_3179
    ];
    function _sfc_render180(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue180.openBlock)(), (0, import_vue180.createElementBlock)("svg", _hoisted_1180, _hoisted_452);
    }
    var mute_default = export_helper_default(_sfc_main180, [["render", _sfc_render180], ["__file", "mute.vue"]]);
    var import_vue181 = require_vue();
    var _sfc_main181 = {
      name: "NoSmoking"
    };
    var _hoisted_1181 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2181 = (0, import_vue181.createElementVNode)("path", {
      fill: "currentColor",
      d: "M440.256 576H256v128h56.256l-64 64H224a32 32 0 0 1-32-32V544a32 32 0 0 1 32-32h280.256l-64 64zm143.488 128H704V583.744L775.744 512H928a32 32 0 0 1 32 32v192a32 32 0 0 1-32 32H519.744l64-64zM768 576v128h128V576H768zm-29.696-207.552 45.248 45.248-497.856 497.856-45.248-45.248zM256 64h64v320h-64zM128 192h64v192h-64zM64 512h64v256H64z"
    }, null, -1);
    var _hoisted_3180 = [
      _hoisted_2181
    ];
    function _sfc_render181(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue181.openBlock)(), (0, import_vue181.createElementBlock)("svg", _hoisted_1181, _hoisted_3180);
    }
    var no_smoking_default = export_helper_default(_sfc_main181, [["render", _sfc_render181], ["__file", "no-smoking.vue"]]);
    var import_vue182 = require_vue();
    var _sfc_main182 = {
      name: "Notebook"
    };
    var _hoisted_1182 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2182 = (0, import_vue182.createElementVNode)("path", {
      fill: "currentColor",
      d: "M192 128v768h640V128H192zm-32-64h704a32 32 0 0 1 32 32v832a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_3181 = (0, import_vue182.createElementVNode)("path", {
      fill: "currentColor",
      d: "M672 128h64v768h-64zM96 192h128q32 0 32 32t-32 32H96q-32 0-32-32t32-32zm0 192h128q32 0 32 32t-32 32H96q-32 0-32-32t32-32zm0 192h128q32 0 32 32t-32 32H96q-32 0-32-32t32-32zm0 192h128q32 0 32 32t-32 32H96q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_453 = [
      _hoisted_2182,
      _hoisted_3181
    ];
    function _sfc_render182(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue182.openBlock)(), (0, import_vue182.createElementBlock)("svg", _hoisted_1182, _hoisted_453);
    }
    var notebook_default = export_helper_default(_sfc_main182, [["render", _sfc_render182], ["__file", "notebook.vue"]]);
    var import_vue183 = require_vue();
    var _sfc_main183 = {
      name: "Notification"
    };
    var _hoisted_1183 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2183 = (0, import_vue183.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 128v64H256a64 64 0 0 0-64 64v512a64 64 0 0 0 64 64h512a64 64 0 0 0 64-64V512h64v256a128 128 0 0 1-128 128H256a128 128 0 0 1-128-128V256a128 128 0 0 1 128-128h256z"
    }, null, -1);
    var _hoisted_3182 = (0, import_vue183.createElementVNode)("path", {
      fill: "currentColor",
      d: "M768 384a128 128 0 1 0 0-256 128 128 0 0 0 0 256zm0 64a192 192 0 1 1 0-384 192 192 0 0 1 0 384z"
    }, null, -1);
    var _hoisted_454 = [
      _hoisted_2183,
      _hoisted_3182
    ];
    function _sfc_render183(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue183.openBlock)(), (0, import_vue183.createElementBlock)("svg", _hoisted_1183, _hoisted_454);
    }
    var notification_default = export_helper_default(_sfc_main183, [["render", _sfc_render183], ["__file", "notification.vue"]]);
    var import_vue184 = require_vue();
    var _sfc_main184 = {
      name: "Odometer"
    };
    var _hoisted_1184 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2184 = (0, import_vue184.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768zm0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"
    }, null, -1);
    var _hoisted_3183 = (0, import_vue184.createElementVNode)("path", {
      fill: "currentColor",
      d: "M192 512a320 320 0 1 1 640 0 32 32 0 1 1-64 0 256 256 0 1 0-512 0 32 32 0 0 1-64 0z"
    }, null, -1);
    var _hoisted_455 = (0, import_vue184.createElementVNode)("path", {
      fill: "currentColor",
      d: "M570.432 627.84A96 96 0 1 1 509.568 608l60.992-187.776A32 32 0 1 1 631.424 440l-60.992 187.776zM502.08 734.464a32 32 0 1 0 19.84-60.928 32 32 0 0 0-19.84 60.928z"
    }, null, -1);
    var _hoisted_515 = [
      _hoisted_2184,
      _hoisted_3183,
      _hoisted_455
    ];
    function _sfc_render184(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue184.openBlock)(), (0, import_vue184.createElementBlock)("svg", _hoisted_1184, _hoisted_515);
    }
    var odometer_default = export_helper_default(_sfc_main184, [["render", _sfc_render184], ["__file", "odometer.vue"]]);
    var import_vue185 = require_vue();
    var _sfc_main185 = {
      name: "OfficeBuilding"
    };
    var _hoisted_1185 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2185 = (0, import_vue185.createElementVNode)("path", {
      fill: "currentColor",
      d: "M192 128v704h384V128H192zm-32-64h448a32 32 0 0 1 32 32v768a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_3184 = (0, import_vue185.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 256h256v64H256v-64zm0 192h256v64H256v-64zm0 192h256v64H256v-64zm384-128h128v64H640v-64zm0 128h128v64H640v-64zM64 832h896v64H64v-64z"
    }, null, -1);
    var _hoisted_456 = (0, import_vue185.createElementVNode)("path", {
      fill: "currentColor",
      d: "M640 384v448h192V384H640zm-32-64h256a32 32 0 0 1 32 32v512a32 32 0 0 1-32 32H608a32 32 0 0 1-32-32V352a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_516 = [
      _hoisted_2185,
      _hoisted_3184,
      _hoisted_456
    ];
    function _sfc_render185(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue185.openBlock)(), (0, import_vue185.createElementBlock)("svg", _hoisted_1185, _hoisted_516);
    }
    var office_building_default = export_helper_default(_sfc_main185, [["render", _sfc_render185], ["__file", "office-building.vue"]]);
    var import_vue186 = require_vue();
    var _sfc_main186 = {
      name: "Open"
    };
    var _hoisted_1186 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2186 = (0, import_vue186.createElementVNode)("path", {
      fill: "currentColor",
      d: "M329.956 257.138a254.862 254.862 0 0 0 0 509.724h364.088a254.862 254.862 0 0 0 0-509.724H329.956zm0-72.818h364.088a327.68 327.68 0 1 1 0 655.36H329.956a327.68 327.68 0 1 1 0-655.36z"
    }, null, -1);
    var _hoisted_3185 = (0, import_vue186.createElementVNode)("path", {
      fill: "currentColor",
      d: "M694.044 621.227a109.227 109.227 0 1 0 0-218.454 109.227 109.227 0 0 0 0 218.454zm0 72.817a182.044 182.044 0 1 1 0-364.088 182.044 182.044 0 0 1 0 364.088z"
    }, null, -1);
    var _hoisted_457 = [
      _hoisted_2186,
      _hoisted_3185
    ];
    function _sfc_render186(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue186.openBlock)(), (0, import_vue186.createElementBlock)("svg", _hoisted_1186, _hoisted_457);
    }
    var open_default = export_helper_default(_sfc_main186, [["render", _sfc_render186], ["__file", "open.vue"]]);
    var import_vue187 = require_vue();
    var _sfc_main187 = {
      name: "Operation"
    };
    var _hoisted_1187 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2187 = (0, import_vue187.createElementVNode)("path", {
      fill: "currentColor",
      d: "M389.44 768a96.064 96.064 0 0 1 181.12 0H896v64H570.56a96.064 96.064 0 0 1-181.12 0H128v-64h261.44zm192-288a96.064 96.064 0 0 1 181.12 0H896v64H762.56a96.064 96.064 0 0 1-181.12 0H128v-64h453.44zm-320-288a96.064 96.064 0 0 1 181.12 0H896v64H442.56a96.064 96.064 0 0 1-181.12 0H128v-64h133.44z"
    }, null, -1);
    var _hoisted_3186 = [
      _hoisted_2187
    ];
    function _sfc_render187(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue187.openBlock)(), (0, import_vue187.createElementBlock)("svg", _hoisted_1187, _hoisted_3186);
    }
    var operation_default = export_helper_default(_sfc_main187, [["render", _sfc_render187], ["__file", "operation.vue"]]);
    var import_vue188 = require_vue();
    var _sfc_main188 = {
      name: "Opportunity"
    };
    var _hoisted_1188 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2188 = (0, import_vue188.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 960v-64h192.064v64H384zm448-544a350.656 350.656 0 0 1-128.32 271.424C665.344 719.04 640 763.776 640 813.504V832H320v-14.336c0-48-19.392-95.36-57.216-124.992a351.552 351.552 0 0 1-128.448-344.256c25.344-136.448 133.888-248.128 269.76-276.48A352.384 352.384 0 0 1 832 416zm-544 32c0-132.288 75.904-224 192-224v-64c-154.432 0-256 122.752-256 288h64z"
    }, null, -1);
    var _hoisted_3187 = [
      _hoisted_2188
    ];
    function _sfc_render188(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue188.openBlock)(), (0, import_vue188.createElementBlock)("svg", _hoisted_1188, _hoisted_3187);
    }
    var opportunity_default = export_helper_default(_sfc_main188, [["render", _sfc_render188], ["__file", "opportunity.vue"]]);
    var import_vue189 = require_vue();
    var _sfc_main189 = {
      name: "Orange"
    };
    var _hoisted_1189 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2189 = (0, import_vue189.createElementVNode)("path", {
      fill: "currentColor",
      d: "M544 894.72a382.336 382.336 0 0 0 215.936-89.472L577.024 622.272c-10.24 6.016-21.248 10.688-33.024 13.696v258.688zm261.248-134.784A382.336 382.336 0 0 0 894.656 544H635.968c-3.008 11.776-7.68 22.848-13.696 33.024l182.976 182.912zM894.656 480a382.336 382.336 0 0 0-89.408-215.936L622.272 446.976c6.016 10.24 10.688 21.248 13.696 33.024h258.688zm-134.72-261.248A382.336 382.336 0 0 0 544 129.344v258.688c11.776 3.008 22.848 7.68 33.024 13.696l182.912-182.976zM480 129.344a382.336 382.336 0 0 0-215.936 89.408l182.912 182.976c10.24-6.016 21.248-10.688 33.024-13.696V129.344zm-261.248 134.72A382.336 382.336 0 0 0 129.344 480h258.688c3.008-11.776 7.68-22.848 13.696-33.024L218.752 264.064zM129.344 544a382.336 382.336 0 0 0 89.408 215.936l182.976-182.912A127.232 127.232 0 0 1 388.032 544H129.344zm134.72 261.248A382.336 382.336 0 0 0 480 894.656V635.968a127.232 127.232 0 0 1-33.024-13.696L264.064 805.248zM512 960a448 448 0 1 1 0-896 448 448 0 0 1 0 896zm0-384a64 64 0 1 0 0-128 64 64 0 0 0 0 128z"
    }, null, -1);
    var _hoisted_3188 = [
      _hoisted_2189
    ];
    function _sfc_render189(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue189.openBlock)(), (0, import_vue189.createElementBlock)("svg", _hoisted_1189, _hoisted_3188);
    }
    var orange_default = export_helper_default(_sfc_main189, [["render", _sfc_render189], ["__file", "orange.vue"]]);
    var import_vue190 = require_vue();
    var _sfc_main190 = {
      name: "Paperclip"
    };
    var _hoisted_1190 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2190 = (0, import_vue190.createElementVNode)("path", {
      fill: "currentColor",
      d: "M602.496 240.448A192 192 0 1 1 874.048 512l-316.8 316.8A256 256 0 0 1 195.2 466.752L602.496 59.456l45.248 45.248L240.448 512A192 192 0 0 0 512 783.552l316.8-316.8a128 128 0 1 0-181.056-181.056L353.6 579.904a32 32 0 1 0 45.248 45.248l294.144-294.144 45.312 45.248L444.096 670.4a96 96 0 1 1-135.744-135.744l294.144-294.208z"
    }, null, -1);
    var _hoisted_3189 = [
      _hoisted_2190
    ];
    function _sfc_render190(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue190.openBlock)(), (0, import_vue190.createElementBlock)("svg", _hoisted_1190, _hoisted_3189);
    }
    var paperclip_default = export_helper_default(_sfc_main190, [["render", _sfc_render190], ["__file", "paperclip.vue"]]);
    var import_vue191 = require_vue();
    var _sfc_main191 = {
      name: "PartlyCloudy"
    };
    var _hoisted_1191 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2191 = (0, import_vue191.createElementVNode)("path", {
      fill: "currentColor",
      d: "M598.4 895.872H328.192a256 256 0 0 1-34.496-510.528A352 352 0 1 1 598.4 895.872zm-271.36-64h272.256a288 288 0 1 0-248.512-417.664L335.04 445.44l-34.816 3.584a192 192 0 0 0 26.88 382.848z"
    }, null, -1);
    var _hoisted_3190 = (0, import_vue191.createElementVNode)("path", {
      fill: "currentColor",
      d: "M139.84 501.888a256 256 0 1 1 417.856-277.12c-17.728 2.176-38.208 8.448-61.504 18.816A192 192 0 1 0 189.12 460.48a6003.84 6003.84 0 0 0-49.28 41.408z"
    }, null, -1);
    var _hoisted_458 = [
      _hoisted_2191,
      _hoisted_3190
    ];
    function _sfc_render191(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue191.openBlock)(), (0, import_vue191.createElementBlock)("svg", _hoisted_1191, _hoisted_458);
    }
    var partly_cloudy_default = export_helper_default(_sfc_main191, [["render", _sfc_render191], ["__file", "partly-cloudy.vue"]]);
    var import_vue192 = require_vue();
    var _sfc_main192 = {
      name: "Pear"
    };
    var _hoisted_1192 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2192 = (0, import_vue192.createElementVNode)("path", {
      fill: "currentColor",
      d: "M542.336 258.816a443.255 443.255 0 0 0-9.024 25.088 32 32 0 1 1-60.8-20.032l1.088-3.328a162.688 162.688 0 0 0-122.048 131.392l-17.088 102.72-20.736 15.36C256.192 552.704 224 610.88 224 672c0 120.576 126.4 224 288 224s288-103.424 288-224c0-61.12-32.192-119.296-89.728-161.92l-20.736-15.424-17.088-102.72a162.688 162.688 0 0 0-130.112-133.12zm-40.128-66.56c7.936-15.552 16.576-30.08 25.92-43.776 23.296-33.92 49.408-59.776 78.528-77.12a32 32 0 1 1 32.704 55.04c-20.544 12.224-40.064 31.552-58.432 58.304a316.608 316.608 0 0 0-9.792 15.104 226.688 226.688 0 0 1 164.48 181.568l12.8 77.248C819.456 511.36 864 587.392 864 672c0 159.04-157.568 288-352 288S160 831.04 160 672c0-84.608 44.608-160.64 115.584-213.376l12.8-77.248a226.624 226.624 0 0 1 213.76-189.184z"
    }, null, -1);
    var _hoisted_3191 = [
      _hoisted_2192
    ];
    function _sfc_render192(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue192.openBlock)(), (0, import_vue192.createElementBlock)("svg", _hoisted_1192, _hoisted_3191);
    }
    var pear_default = export_helper_default(_sfc_main192, [["render", _sfc_render192], ["__file", "pear.vue"]]);
    var import_vue193 = require_vue();
    var _sfc_main193 = {
      name: "PhoneFilled"
    };
    var _hoisted_1193 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2193 = (0, import_vue193.createElementVNode)("path", {
      fill: "currentColor",
      d: "M199.232 125.568 90.624 379.008a32 32 0 0 0 6.784 35.2l512.384 512.384a32 32 0 0 0 35.2 6.784l253.44-108.608a32 32 0 0 0 10.048-52.032L769.6 633.92a32 32 0 0 0-36.928-5.952l-130.176 65.088-271.488-271.552 65.024-130.176a32 32 0 0 0-5.952-36.928L251.2 115.52a32 32 0 0 0-51.968 10.048z"
    }, null, -1);
    var _hoisted_3192 = [
      _hoisted_2193
    ];
    function _sfc_render193(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue193.openBlock)(), (0, import_vue193.createElementBlock)("svg", _hoisted_1193, _hoisted_3192);
    }
    var phone_filled_default = export_helper_default(_sfc_main193, [["render", _sfc_render193], ["__file", "phone-filled.vue"]]);
    var import_vue194 = require_vue();
    var _sfc_main194 = {
      name: "Phone"
    };
    var _hoisted_1194 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2194 = (0, import_vue194.createElementVNode)("path", {
      fill: "currentColor",
      d: "M79.36 432.256 591.744 944.64a32 32 0 0 0 35.2 6.784l253.44-108.544a32 32 0 0 0 9.984-52.032l-153.856-153.92a32 32 0 0 0-36.928-6.016l-69.888 34.944L358.08 394.24l35.008-69.888a32 32 0 0 0-5.952-36.928L233.152 133.568a32 32 0 0 0-52.032 10.048L72.512 397.056a32 32 0 0 0 6.784 35.2zm60.48-29.952 81.536-190.08L325.568 316.48l-24.64 49.216-20.608 41.216 32.576 32.64 271.552 271.552 32.64 32.64 41.216-20.672 49.28-24.576 104.192 104.128-190.08 81.472L139.84 402.304zM512 320v-64a256 256 0 0 1 256 256h-64a192 192 0 0 0-192-192zm0-192V64a448 448 0 0 1 448 448h-64a384 384 0 0 0-384-384z"
    }, null, -1);
    var _hoisted_3193 = [
      _hoisted_2194
    ];
    function _sfc_render194(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue194.openBlock)(), (0, import_vue194.createElementBlock)("svg", _hoisted_1194, _hoisted_3193);
    }
    var phone_default = export_helper_default(_sfc_main194, [["render", _sfc_render194], ["__file", "phone.vue"]]);
    var import_vue195 = require_vue();
    var _sfc_main195 = {
      name: "PictureFilled"
    };
    var _hoisted_1195 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2195 = (0, import_vue195.createElementVNode)("path", {
      fill: "currentColor",
      d: "M96 896a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32h832a32 32 0 0 1 32 32v704a32 32 0 0 1-32 32H96zm315.52-228.48-68.928-68.928a32 32 0 0 0-45.248 0L128 768.064h778.688l-242.112-290.56a32 32 0 0 0-49.216 0L458.752 665.408a32 32 0 0 1-47.232 2.112zM256 384a96 96 0 1 0 192.064-.064A96 96 0 0 0 256 384z"
    }, null, -1);
    var _hoisted_3194 = [
      _hoisted_2195
    ];
    function _sfc_render195(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue195.openBlock)(), (0, import_vue195.createElementBlock)("svg", _hoisted_1195, _hoisted_3194);
    }
    var picture_filled_default = export_helper_default(_sfc_main195, [["render", _sfc_render195], ["__file", "picture-filled.vue"]]);
    var import_vue196 = require_vue();
    var _sfc_main196 = {
      name: "PictureRounded"
    };
    var _hoisted_1196 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2196 = (0, import_vue196.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 128a384 384 0 1 0 0 768 384 384 0 0 0 0-768zm0-64a448 448 0 1 1 0 896 448 448 0 0 1 0-896z"
    }, null, -1);
    var _hoisted_3195 = (0, import_vue196.createElementVNode)("path", {
      fill: "currentColor",
      d: "M640 288q64 0 64 64t-64 64q-64 0-64-64t64-64zM214.656 790.656l-45.312-45.312 185.664-185.6a96 96 0 0 1 123.712-10.24l138.24 98.688a32 32 0 0 0 39.872-2.176L906.688 422.4l42.624 47.744L699.52 693.696a96 96 0 0 1-119.808 6.592l-138.24-98.752a32 32 0 0 0-41.152 3.456l-185.664 185.6z"
    }, null, -1);
    var _hoisted_459 = [
      _hoisted_2196,
      _hoisted_3195
    ];
    function _sfc_render196(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue196.openBlock)(), (0, import_vue196.createElementBlock)("svg", _hoisted_1196, _hoisted_459);
    }
    var picture_rounded_default = export_helper_default(_sfc_main196, [["render", _sfc_render196], ["__file", "picture-rounded.vue"]]);
    var import_vue197 = require_vue();
    var _sfc_main197 = {
      name: "Picture"
    };
    var _hoisted_1197 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2197 = (0, import_vue197.createElementVNode)("path", {
      fill: "currentColor",
      d: "M160 160v704h704V160H160zm-32-64h768a32 32 0 0 1 32 32v768a32 32 0 0 1-32 32H128a32 32 0 0 1-32-32V128a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_3196 = (0, import_vue197.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 288q64 0 64 64t-64 64q-64 0-64-64t64-64zM185.408 876.992l-50.816-38.912L350.72 556.032a96 96 0 0 1 134.592-17.856l1.856 1.472 122.88 99.136a32 32 0 0 0 44.992-4.864l216-269.888 49.92 39.936-215.808 269.824-.256.32a96 96 0 0 1-135.04 14.464l-122.88-99.072-.64-.512a32 32 0 0 0-44.8 5.952L185.408 876.992z"
    }, null, -1);
    var _hoisted_460 = [
      _hoisted_2197,
      _hoisted_3196
    ];
    function _sfc_render197(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue197.openBlock)(), (0, import_vue197.createElementBlock)("svg", _hoisted_1197, _hoisted_460);
    }
    var picture_default = export_helper_default(_sfc_main197, [["render", _sfc_render197], ["__file", "picture.vue"]]);
    var import_vue198 = require_vue();
    var _sfc_main198 = {
      name: "PieChart"
    };
    var _hoisted_1198 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2198 = (0, import_vue198.createElementVNode)("path", {
      fill: "currentColor",
      d: "M448 68.48v64.832A384.128 384.128 0 0 0 512 896a384.128 384.128 0 0 0 378.688-320h64.768A448.128 448.128 0 0 1 64 512 448.128 448.128 0 0 1 448 68.48z"
    }, null, -1);
    var _hoisted_3197 = (0, import_vue198.createElementVNode)("path", {
      fill: "currentColor",
      d: "M576 97.28V448h350.72A384.064 384.064 0 0 0 576 97.28zM512 64V33.152A448 448 0 0 1 990.848 512H512V64z"
    }, null, -1);
    var _hoisted_461 = [
      _hoisted_2198,
      _hoisted_3197
    ];
    function _sfc_render198(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue198.openBlock)(), (0, import_vue198.createElementBlock)("svg", _hoisted_1198, _hoisted_461);
    }
    var pie_chart_default = export_helper_default(_sfc_main198, [["render", _sfc_render198], ["__file", "pie-chart.vue"]]);
    var import_vue199 = require_vue();
    var _sfc_main199 = {
      name: "Place"
    };
    var _hoisted_1199 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2199 = (0, import_vue199.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 512a192 192 0 1 0 0-384 192 192 0 0 0 0 384zm0 64a256 256 0 1 1 0-512 256 256 0 0 1 0 512z"
    }, null, -1);
    var _hoisted_3198 = (0, import_vue199.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 512a32 32 0 0 1 32 32v256a32 32 0 1 1-64 0V544a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_462 = (0, import_vue199.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 649.088v64.96C269.76 732.352 192 771.904 192 800c0 37.696 139.904 96 320 96s320-58.304 320-96c0-28.16-77.76-67.648-192-85.952v-64.96C789.12 671.04 896 730.368 896 800c0 88.32-171.904 160-384 160s-384-71.68-384-160c0-69.696 106.88-128.96 256-150.912z"
    }, null, -1);
    var _hoisted_517 = [
      _hoisted_2199,
      _hoisted_3198,
      _hoisted_462
    ];
    function _sfc_render199(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue199.openBlock)(), (0, import_vue199.createElementBlock)("svg", _hoisted_1199, _hoisted_517);
    }
    var place_default = export_helper_default(_sfc_main199, [["render", _sfc_render199], ["__file", "place.vue"]]);
    var import_vue200 = require_vue();
    var _sfc_main200 = {
      name: "Platform"
    };
    var _hoisted_1200 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2200 = (0, import_vue200.createElementVNode)("path", {
      fill: "currentColor",
      d: "M448 832v-64h128v64h192v64H256v-64h192zM128 704V128h768v576H128z"
    }, null, -1);
    var _hoisted_3199 = [
      _hoisted_2200
    ];
    function _sfc_render200(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue200.openBlock)(), (0, import_vue200.createElementBlock)("svg", _hoisted_1200, _hoisted_3199);
    }
    var platform_default = export_helper_default(_sfc_main200, [["render", _sfc_render200], ["__file", "platform.vue"]]);
    var import_vue201 = require_vue();
    var _sfc_main201 = {
      name: "Plus"
    };
    var _hoisted_1201 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2201 = (0, import_vue201.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 480V128a32 32 0 0 1 64 0v352h352a32 32 0 1 1 0 64H544v352a32 32 0 1 1-64 0V544H128a32 32 0 0 1 0-64h352z"
    }, null, -1);
    var _hoisted_3200 = [
      _hoisted_2201
    ];
    function _sfc_render201(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue201.openBlock)(), (0, import_vue201.createElementBlock)("svg", _hoisted_1201, _hoisted_3200);
    }
    var plus_default = export_helper_default(_sfc_main201, [["render", _sfc_render201], ["__file", "plus.vue"]]);
    var import_vue202 = require_vue();
    var _sfc_main202 = {
      name: "Pointer"
    };
    var _hoisted_1202 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2202 = (0, import_vue202.createElementVNode)("path", {
      fill: "currentColor",
      d: "M511.552 128c-35.584 0-64.384 28.8-64.384 64.448v516.48L274.048 570.88a94.272 94.272 0 0 0-112.896-3.456 44.416 44.416 0 0 0-8.96 62.208L332.8 870.4A64 64 0 0 0 384 896h512V575.232a64 64 0 0 0-45.632-61.312l-205.952-61.76A96 96 0 0 1 576 360.192V192.448C576 156.8 547.2 128 511.552 128zM359.04 556.8l24.128 19.2V192.448a128.448 128.448 0 1 1 256.832 0v167.744a32 32 0 0 0 22.784 30.656l206.016 61.76A128 128 0 0 1 960 575.232V896a64 64 0 0 1-64 64H384a128 128 0 0 1-102.4-51.2L101.056 668.032A108.416 108.416 0 0 1 128 512.512a158.272 158.272 0 0 1 185.984 8.32L359.04 556.8z"
    }, null, -1);
    var _hoisted_3201 = [
      _hoisted_2202
    ];
    function _sfc_render202(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue202.openBlock)(), (0, import_vue202.createElementBlock)("svg", _hoisted_1202, _hoisted_3201);
    }
    var pointer_default = export_helper_default(_sfc_main202, [["render", _sfc_render202], ["__file", "pointer.vue"]]);
    var import_vue203 = require_vue();
    var _sfc_main203 = {
      name: "Position"
    };
    var _hoisted_1203 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2203 = (0, import_vue203.createElementVNode)("path", {
      fill: "currentColor",
      d: "m249.6 417.088 319.744 43.072 39.168 310.272L845.12 178.88 249.6 417.088zm-129.024 47.168a32 32 0 0 1-7.68-61.44l777.792-311.04a32 32 0 0 1 41.6 41.6l-310.336 775.68a32 32 0 0 1-61.44-7.808L512 516.992l-391.424-52.736z"
    }, null, -1);
    var _hoisted_3202 = [
      _hoisted_2203
    ];
    function _sfc_render203(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue203.openBlock)(), (0, import_vue203.createElementBlock)("svg", _hoisted_1203, _hoisted_3202);
    }
    var position_default = export_helper_default(_sfc_main203, [["render", _sfc_render203], ["__file", "position.vue"]]);
    var import_vue204 = require_vue();
    var _sfc_main204 = {
      name: "Postcard"
    };
    var _hoisted_1204 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2204 = (0, import_vue204.createElementVNode)("path", {
      fill: "currentColor",
      d: "M160 224a32 32 0 0 0-32 32v512a32 32 0 0 0 32 32h704a32 32 0 0 0 32-32V256a32 32 0 0 0-32-32H160zm0-64h704a96 96 0 0 1 96 96v512a96 96 0 0 1-96 96H160a96 96 0 0 1-96-96V256a96 96 0 0 1 96-96z"
    }, null, -1);
    var _hoisted_3203 = (0, import_vue204.createElementVNode)("path", {
      fill: "currentColor",
      d: "M704 320a64 64 0 1 1 0 128 64 64 0 0 1 0-128zM288 448h256q32 0 32 32t-32 32H288q-32 0-32-32t32-32zm0 128h256q32 0 32 32t-32 32H288q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_463 = [
      _hoisted_2204,
      _hoisted_3203
    ];
    function _sfc_render204(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue204.openBlock)(), (0, import_vue204.createElementBlock)("svg", _hoisted_1204, _hoisted_463);
    }
    var postcard_default = export_helper_default(_sfc_main204, [["render", _sfc_render204], ["__file", "postcard.vue"]]);
    var import_vue205 = require_vue();
    var _sfc_main205 = {
      name: "Pouring"
    };
    var _hoisted_1205 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2205 = (0, import_vue205.createElementVNode)("path", {
      fill: "currentColor",
      d: "m739.328 291.328-35.2-6.592-12.8-33.408a192.064 192.064 0 0 0-365.952 23.232l-9.92 40.896-41.472 7.04a176.32 176.32 0 0 0-146.24 173.568c0 97.28 78.72 175.936 175.808 175.936h400a192 192 0 0 0 35.776-380.672zM959.552 480a256 256 0 0 1-256 256h-400A239.808 239.808 0 0 1 63.744 496.192a240.32 240.32 0 0 1 199.488-236.8 256.128 256.128 0 0 1 487.872-30.976A256.064 256.064 0 0 1 959.552 480zM224 800a32 32 0 0 1 32 32v96a32 32 0 1 1-64 0v-96a32 32 0 0 1 32-32zm192 0a32 32 0 0 1 32 32v96a32 32 0 1 1-64 0v-96a32 32 0 0 1 32-32zm192 0a32 32 0 0 1 32 32v96a32 32 0 1 1-64 0v-96a32 32 0 0 1 32-32zm192 0a32 32 0 0 1 32 32v96a32 32 0 1 1-64 0v-96a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_3204 = [
      _hoisted_2205
    ];
    function _sfc_render205(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue205.openBlock)(), (0, import_vue205.createElementBlock)("svg", _hoisted_1205, _hoisted_3204);
    }
    var pouring_default = export_helper_default(_sfc_main205, [["render", _sfc_render205], ["__file", "pouring.vue"]]);
    var import_vue206 = require_vue();
    var _sfc_main206 = {
      name: "Present"
    };
    var _hoisted_1206 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2206 = (0, import_vue206.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 896V640H192v-64h288V320H192v576h288zm64 0h288V320H544v256h288v64H544v256zM128 256h768v672a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V256z"
    }, null, -1);
    var _hoisted_3205 = (0, import_vue206.createElementVNode)("path", {
      fill: "currentColor",
      d: "M96 256h832q32 0 32 32t-32 32H96q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_464 = (0, import_vue206.createElementVNode)("path", {
      fill: "currentColor",
      d: "M416 256a64 64 0 1 0 0-128 64 64 0 0 0 0 128zm0 64a128 128 0 1 1 0-256 128 128 0 0 1 0 256z"
    }, null, -1);
    var _hoisted_518 = (0, import_vue206.createElementVNode)("path", {
      fill: "currentColor",
      d: "M608 256a64 64 0 1 0 0-128 64 64 0 0 0 0 128zm0 64a128 128 0 1 1 0-256 128 128 0 0 1 0 256z"
    }, null, -1);
    var _hoisted_6 = [
      _hoisted_2206,
      _hoisted_3205,
      _hoisted_464,
      _hoisted_518
    ];
    function _sfc_render206(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue206.openBlock)(), (0, import_vue206.createElementBlock)("svg", _hoisted_1206, _hoisted_6);
    }
    var present_default = export_helper_default(_sfc_main206, [["render", _sfc_render206], ["__file", "present.vue"]]);
    var import_vue207 = require_vue();
    var _sfc_main207 = {
      name: "PriceTag"
    };
    var _hoisted_1207 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2207 = (0, import_vue207.createElementVNode)("path", {
      fill: "currentColor",
      d: "M224 318.336V896h576V318.336L552.512 115.84a64 64 0 0 0-81.024 0L224 318.336zM593.024 66.304l259.2 212.096A32 32 0 0 1 864 303.168V928a32 32 0 0 1-32 32H192a32 32 0 0 1-32-32V303.168a32 32 0 0 1 11.712-24.768l259.2-212.096a128 128 0 0 1 162.112 0z"
    }, null, -1);
    var _hoisted_3206 = (0, import_vue207.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 448a64 64 0 1 0 0-128 64 64 0 0 0 0 128zm0 64a128 128 0 1 1 0-256 128 128 0 0 1 0 256z"
    }, null, -1);
    var _hoisted_465 = [
      _hoisted_2207,
      _hoisted_3206
    ];
    function _sfc_render207(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue207.openBlock)(), (0, import_vue207.createElementBlock)("svg", _hoisted_1207, _hoisted_465);
    }
    var price_tag_default = export_helper_default(_sfc_main207, [["render", _sfc_render207], ["__file", "price-tag.vue"]]);
    var import_vue208 = require_vue();
    var _sfc_main208 = {
      name: "Printer"
    };
    var _hoisted_1208 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2208 = (0, import_vue208.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 768H105.024c-14.272 0-19.456-1.472-24.64-4.288a29.056 29.056 0 0 1-12.16-12.096C65.536 746.432 64 741.248 64 727.04V379.072c0-42.816 4.48-58.304 12.8-73.984 8.384-15.616 20.672-27.904 36.288-36.288 15.68-8.32 31.168-12.8 73.984-12.8H256V64h512v192h68.928c42.816 0 58.304 4.48 73.984 12.8 15.616 8.384 27.904 20.672 36.288 36.288 8.32 15.68 12.8 31.168 12.8 73.984v347.904c0 14.272-1.472 19.456-4.288 24.64a29.056 29.056 0 0 1-12.096 12.16c-5.184 2.752-10.368 4.224-24.64 4.224H768v192H256V768zm64-192v320h384V576H320zm-64 128V512h512v192h128V379.072c0-29.376-1.408-36.48-5.248-43.776a23.296 23.296 0 0 0-10.048-10.048c-7.232-3.84-14.4-5.248-43.776-5.248H187.072c-29.376 0-36.48 1.408-43.776 5.248a23.296 23.296 0 0 0-10.048 10.048c-3.84 7.232-5.248 14.4-5.248 43.776V704h128zm64-448h384V128H320v128zm-64 128h64v64h-64v-64zm128 0h64v64h-64v-64z"
    }, null, -1);
    var _hoisted_3207 = [
      _hoisted_2208
    ];
    function _sfc_render208(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue208.openBlock)(), (0, import_vue208.createElementBlock)("svg", _hoisted_1208, _hoisted_3207);
    }
    var printer_default = export_helper_default(_sfc_main208, [["render", _sfc_render208], ["__file", "printer.vue"]]);
    var import_vue209 = require_vue();
    var _sfc_main209 = {
      name: "Promotion"
    };
    var _hoisted_1209 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2209 = (0, import_vue209.createElementVNode)("path", {
      fill: "currentColor",
      d: "m64 448 832-320-128 704-446.08-243.328L832 192 242.816 545.472 64 448zm256 512V657.024L512 768 320 960z"
    }, null, -1);
    var _hoisted_3208 = [
      _hoisted_2209
    ];
    function _sfc_render209(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue209.openBlock)(), (0, import_vue209.createElementBlock)("svg", _hoisted_1209, _hoisted_3208);
    }
    var promotion_default = export_helper_default(_sfc_main209, [["render", _sfc_render209], ["__file", "promotion.vue"]]);
    var import_vue210 = require_vue();
    var _sfc_main210 = {
      name: "QuartzWatch"
    };
    var _hoisted_1210 = {
      version: "1.1",
      id: "a",
      xmlns: "http://www.w3.org/2000/svg",
      x: "0",
      y: "0",
      viewBox: "0 0 1024 1024",
      style: { "enable-background": "new 0 0 1024 1024" },
      "xml:space": "preserve"
    };
    var _hoisted_2210 = (0, import_vue210.createElementVNode)("path", {
      d: "M422.02 602.01v-.03c-6.68-5.99-14.35-8.83-23.01-8.51-8.67.32-16.17 3.66-22.5 10.02-6.33 6.36-9.5 13.7-9.5 22.02s3 15.82 8.99 22.5c8.68 8.68 19.02 11.35 31.01 8s19.49-10.85 22.5-22.5c3.01-11.65.51-22.15-7.49-31.49v-.01zM384 512c0-9.35-3-17.02-8.99-23.01-6-5.99-13.66-8.99-23.01-8.99-9.35 0-17.02 3-23.01 8.99-5.99 6-8.99 13.66-8.99 23.01s3 17.02 8.99 23.01c6 5.99 13.66 8.99 23.01 8.99 9.35 0 17.02-3 23.01-8.99 5.99-6 8.99-13.67 8.99-23.01zM390.53 429.51c11.65 3.01 22.15.51 31.49-7.49h.04c5.99-6.68 8.83-14.34 8.51-23.01-.32-8.67-3.66-16.16-10.02-22.5-6.36-6.33-13.7-9.5-22.02-9.5s-15.82 3-22.5 8.99c-8.68 8.69-11.35 19.02-8 31.01 3.35 11.99 10.85 19.49 22.5 22.5zM633.47 429.51c11.67-3.03 19.01-10.37 22.02-22.02 3.01-11.65.51-22.15-7.49-31.49h.01c-6.68-5.99-14.18-8.99-22.5-8.99s-15.66 3.16-22.02 9.5c-6.36 6.34-9.7 13.84-10.02 22.5-.32 8.66 2.52 16.33 8.51 23.01 9.32 8.02 19.82 10.52 31.49 7.49zM512 640c-9.35 0-17.02 3-23.01 8.99-5.99 6-8.99 13.66-8.99 23.01s3 17.02 8.99 23.01c6 5.99 13.67 8.99 23.01 8.99 9.35 0 17.02-3 23.01-8.99 5.99-6 8.99-13.66 8.99-23.01s-3-17.02-8.99-23.01c-6-5.99-13.66-8.99-23.01-8.99zM695.01 488.99c-6-5.99-13.66-8.99-23.01-8.99s-17.02 3-23.01 8.99c-5.99 6-8.99 13.66-8.99 23.01s3 17.02 8.99 23.01c6 5.99 13.66 8.99 23.01 8.99s17.02-3 23.01-8.99c5.99-6 8.99-13.67 8.99-23.01 0-9.35-3-17.02-8.99-23.01z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_3209 = (0, import_vue210.createElementVNode)("path", {
      d: "M832 512c-2-90.67-33.17-166.17-93.5-226.5-20.43-20.42-42.6-37.49-66.5-51.23V64H352v170.26c-23.9 13.74-46.07 30.81-66.5 51.24-60.33 60.33-91.49 135.83-93.5 226.5 2 90.67 33.17 166.17 93.5 226.5 20.43 20.43 42.6 37.5 66.5 51.24V960h320V789.74c23.9-13.74 46.07-30.81 66.5-51.24 60.33-60.34 91.49-135.83 93.5-226.5zM416 128h192v78.69c-29.85-9.03-61.85-13.93-96-14.69-34.15.75-66.15 5.65-96 14.68V128zm192 768H416v-78.68c29.85 9.03 61.85 13.93 96 14.68 34.15-.75 66.15-5.65 96-14.68V896zm-96-128c-72.66-2.01-132.99-27.01-180.99-75.01S258.01 584.66 256 512c2.01-72.66 27.01-132.99 75.01-180.99S439.34 258.01 512 256c72.66 2.01 132.99 27.01 180.99 75.01S765.99 439.34 768 512c-2.01 72.66-27.01 132.99-75.01 180.99S584.66 765.99 512 768z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_466 = (0, import_vue210.createElementVNode)("path", {
      d: "M512 320c-9.35 0-17.02 3-23.01 8.99-5.99 6-8.99 13.66-8.99 23.01 0 9.35 3 17.02 8.99 23.01 6 5.99 13.67 8.99 23.01 8.99 9.35 0 17.02-3 23.01-8.99 5.99-6 8.99-13.66 8.99-23.01 0-9.35-3-17.02-8.99-23.01-6-5.99-13.66-8.99-23.01-8.99zM624.99 593.5c-8.66-.32-16.33 2.52-23.01 8.51-7.98 9.32-10.48 19.82-7.49 31.49s10.49 19.17 22.5 22.5 22.35.66 31.01-8v.04c5.99-6.68 8.99-14.18 8.99-22.5s-3.16-15.66-9.5-22.02-13.84-9.7-22.5-10.02z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_519 = [
      _hoisted_2210,
      _hoisted_3209,
      _hoisted_466
    ];
    function _sfc_render210(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue210.openBlock)(), (0, import_vue210.createElementBlock)("svg", _hoisted_1210, _hoisted_519);
    }
    var quartz_watch_default = export_helper_default(_sfc_main210, [["render", _sfc_render210], ["__file", "quartz-watch.vue"]]);
    var import_vue211 = require_vue();
    var _sfc_main211 = {
      name: "QuestionFilled"
    };
    var _hoisted_1211 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2211 = (0, import_vue211.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm23.744 191.488c-52.096 0-92.928 14.784-123.2 44.352-30.976 29.568-45.76 70.4-45.76 122.496h80.256c0-29.568 5.632-52.8 17.6-68.992 13.376-19.712 35.2-28.864 66.176-28.864 23.936 0 42.944 6.336 56.32 19.712 12.672 13.376 19.712 31.68 19.712 54.912 0 17.6-6.336 34.496-19.008 49.984l-8.448 9.856c-45.76 40.832-73.216 70.4-82.368 89.408-9.856 19.008-14.08 42.24-14.08 68.992v9.856h80.96v-9.856c0-16.896 3.52-31.68 10.56-45.76 6.336-12.672 15.488-24.64 28.16-35.2 33.792-29.568 54.208-48.576 60.544-55.616 16.896-22.528 26.048-51.392 26.048-86.592 0-42.944-14.08-76.736-42.24-101.376-28.16-25.344-65.472-37.312-111.232-37.312zm-12.672 406.208a54.272 54.272 0 0 0-38.72 14.784 49.408 49.408 0 0 0-15.488 38.016c0 15.488 4.928 28.16 15.488 38.016A54.848 54.848 0 0 0 523.072 768c15.488 0 28.16-4.928 38.72-14.784a51.52 51.52 0 0 0 16.192-38.72 51.968 51.968 0 0 0-15.488-38.016 55.936 55.936 0 0 0-39.424-14.784z"
    }, null, -1);
    var _hoisted_3210 = [
      _hoisted_2211
    ];
    function _sfc_render211(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue211.openBlock)(), (0, import_vue211.createElementBlock)("svg", _hoisted_1211, _hoisted_3210);
    }
    var question_filled_default = export_helper_default(_sfc_main211, [["render", _sfc_render211], ["__file", "question-filled.vue"]]);
    var import_vue212 = require_vue();
    var _sfc_main212 = {
      name: "Rank"
    };
    var _hoisted_1212 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2212 = (0, import_vue212.createElementVNode)("path", {
      fill: "currentColor",
      d: "m186.496 544 41.408 41.344a32 32 0 1 1-45.248 45.312l-96-96a32 32 0 0 1 0-45.312l96-96a32 32 0 1 1 45.248 45.312L186.496 480h290.816V186.432l-41.472 41.472a32 32 0 1 1-45.248-45.184l96-96.128a32 32 0 0 1 45.312 0l96 96.064a32 32 0 0 1-45.248 45.184l-41.344-41.28V480H832l-41.344-41.344a32 32 0 0 1 45.248-45.312l96 96a32 32 0 0 1 0 45.312l-96 96a32 32 0 0 1-45.248-45.312L832 544H541.312v293.44l41.344-41.28a32 32 0 1 1 45.248 45.248l-96 96a32 32 0 0 1-45.312 0l-96-96a32 32 0 1 1 45.312-45.248l41.408 41.408V544H186.496z"
    }, null, -1);
    var _hoisted_3211 = [
      _hoisted_2212
    ];
    function _sfc_render212(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue212.openBlock)(), (0, import_vue212.createElementBlock)("svg", _hoisted_1212, _hoisted_3211);
    }
    var rank_default = export_helper_default(_sfc_main212, [["render", _sfc_render212], ["__file", "rank.vue"]]);
    var import_vue213 = require_vue();
    var _sfc_main213 = {
      name: "ReadingLamp"
    };
    var _hoisted_1213 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2213 = (0, import_vue213.createElementVNode)("path", {
      fill: "currentColor",
      d: "M352 896h320q32 0 32 32t-32 32H352q-32 0-32-32t32-32zm-44.672-768-99.52 448h608.384l-99.52-448H307.328zm-25.6-64h460.608a32 32 0 0 1 31.232 25.088l113.792 512A32 32 0 0 1 856.128 640H167.872a32 32 0 0 1-31.232-38.912l113.792-512A32 32 0 0 1 281.664 64z"
    }, null, -1);
    var _hoisted_3212 = (0, import_vue213.createElementVNode)("path", {
      fill: "currentColor",
      d: "M672 576q32 0 32 32v128q0 32-32 32t-32-32V608q0-32 32-32zm-192-.064h64V960h-64z"
    }, null, -1);
    var _hoisted_467 = [
      _hoisted_2213,
      _hoisted_3212
    ];
    function _sfc_render213(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue213.openBlock)(), (0, import_vue213.createElementBlock)("svg", _hoisted_1213, _hoisted_467);
    }
    var reading_lamp_default = export_helper_default(_sfc_main213, [["render", _sfc_render213], ["__file", "reading-lamp.vue"]]);
    var import_vue214 = require_vue();
    var _sfc_main214 = {
      name: "Reading"
    };
    var _hoisted_1214 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2214 = (0, import_vue214.createElementVNode)("path", {
      fill: "currentColor",
      d: "m512 863.36 384-54.848v-638.72L525.568 222.72a96 96 0 0 1-27.136 0L128 169.792v638.72l384 54.848zM137.024 106.432l370.432 52.928a32 32 0 0 0 9.088 0l370.432-52.928A64 64 0 0 1 960 169.792v638.72a64 64 0 0 1-54.976 63.36l-388.48 55.488a32 32 0 0 1-9.088 0l-388.48-55.488A64 64 0 0 1 64 808.512v-638.72a64 64 0 0 1 73.024-63.36z"
    }, null, -1);
    var _hoisted_3213 = (0, import_vue214.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 192h64v704h-64z"
    }, null, -1);
    var _hoisted_468 = [
      _hoisted_2214,
      _hoisted_3213
    ];
    function _sfc_render214(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue214.openBlock)(), (0, import_vue214.createElementBlock)("svg", _hoisted_1214, _hoisted_468);
    }
    var reading_default = export_helper_default(_sfc_main214, [["render", _sfc_render214], ["__file", "reading.vue"]]);
    var import_vue215 = require_vue();
    var _sfc_main215 = {
      name: "RefreshLeft"
    };
    var _hoisted_1215 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2215 = (0, import_vue215.createElementVNode)("path", {
      fill: "currentColor",
      d: "M289.088 296.704h92.992a32 32 0 0 1 0 64H232.96a32 32 0 0 1-32-32V179.712a32 32 0 0 1 64 0v50.56a384 384 0 0 1 643.84 282.88 384 384 0 0 1-383.936 384 384 384 0 0 1-384-384h64a320 320 0 1 0 640 0 320 320 0 0 0-555.712-216.448z"
    }, null, -1);
    var _hoisted_3214 = [
      _hoisted_2215
    ];
    function _sfc_render215(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue215.openBlock)(), (0, import_vue215.createElementBlock)("svg", _hoisted_1215, _hoisted_3214);
    }
    var refresh_left_default = export_helper_default(_sfc_main215, [["render", _sfc_render215], ["__file", "refresh-left.vue"]]);
    var import_vue216 = require_vue();
    var _sfc_main216 = {
      name: "RefreshRight"
    };
    var _hoisted_1216 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2216 = (0, import_vue216.createElementVNode)("path", {
      fill: "currentColor",
      d: "M784.512 230.272v-50.56a32 32 0 1 1 64 0v149.056a32 32 0 0 1-32 32H667.52a32 32 0 1 1 0-64h92.992A320 320 0 1 0 524.8 833.152a320 320 0 0 0 320-320h64a384 384 0 0 1-384 384 384 384 0 0 1-384-384 384 384 0 0 1 643.712-282.88z"
    }, null, -1);
    var _hoisted_3215 = [
      _hoisted_2216
    ];
    function _sfc_render216(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue216.openBlock)(), (0, import_vue216.createElementBlock)("svg", _hoisted_1216, _hoisted_3215);
    }
    var refresh_right_default = export_helper_default(_sfc_main216, [["render", _sfc_render216], ["__file", "refresh-right.vue"]]);
    var import_vue217 = require_vue();
    var _sfc_main217 = {
      name: "Refresh"
    };
    var _hoisted_1217 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2217 = (0, import_vue217.createElementVNode)("path", {
      fill: "currentColor",
      d: "M771.776 794.88A384 384 0 0 1 128 512h64a320 320 0 0 0 555.712 216.448H654.72a32 32 0 1 1 0-64h149.056a32 32 0 0 1 32 32v148.928a32 32 0 1 1-64 0v-50.56zM276.288 295.616h92.992a32 32 0 0 1 0 64H220.16a32 32 0 0 1-32-32V178.56a32 32 0 0 1 64 0v50.56A384 384 0 0 1 896.128 512h-64a320 320 0 0 0-555.776-216.384z"
    }, null, -1);
    var _hoisted_3216 = [
      _hoisted_2217
    ];
    function _sfc_render217(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue217.openBlock)(), (0, import_vue217.createElementBlock)("svg", _hoisted_1217, _hoisted_3216);
    }
    var refresh_default = export_helper_default(_sfc_main217, [["render", _sfc_render217], ["__file", "refresh.vue"]]);
    var import_vue218 = require_vue();
    var _sfc_main218 = {
      name: "Refrigerator"
    };
    var _hoisted_1218 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2218 = (0, import_vue218.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 448h512V160a32 32 0 0 0-32-32H288a32 32 0 0 0-32 32v288zm0 64v352a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V512H256zm32-448h448a96 96 0 0 1 96 96v704a96 96 0 0 1-96 96H288a96 96 0 0 1-96-96V160a96 96 0 0 1 96-96zm32 224h64v96h-64v-96zm0 288h64v96h-64v-96z"
    }, null, -1);
    var _hoisted_3217 = [
      _hoisted_2218
    ];
    function _sfc_render218(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue218.openBlock)(), (0, import_vue218.createElementBlock)("svg", _hoisted_1218, _hoisted_3217);
    }
    var refrigerator_default = export_helper_default(_sfc_main218, [["render", _sfc_render218], ["__file", "refrigerator.vue"]]);
    var import_vue219 = require_vue();
    var _sfc_main219 = {
      name: "RemoveFilled"
    };
    var _hoisted_1219 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2219 = (0, import_vue219.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zM288 512a38.4 38.4 0 0 0 38.4 38.4h371.2a38.4 38.4 0 0 0 0-76.8H326.4A38.4 38.4 0 0 0 288 512z"
    }, null, -1);
    var _hoisted_3218 = [
      _hoisted_2219
    ];
    function _sfc_render219(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue219.openBlock)(), (0, import_vue219.createElementBlock)("svg", _hoisted_1219, _hoisted_3218);
    }
    var remove_filled_default = export_helper_default(_sfc_main219, [["render", _sfc_render219], ["__file", "remove-filled.vue"]]);
    var import_vue220 = require_vue();
    var _sfc_main220 = {
      name: "Remove"
    };
    var _hoisted_1220 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2220 = (0, import_vue220.createElementVNode)("path", {
      fill: "currentColor",
      d: "M352 480h320a32 32 0 1 1 0 64H352a32 32 0 0 1 0-64z"
    }, null, -1);
    var _hoisted_3219 = (0, import_vue220.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768zm0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"
    }, null, -1);
    var _hoisted_469 = [
      _hoisted_2220,
      _hoisted_3219
    ];
    function _sfc_render220(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue220.openBlock)(), (0, import_vue220.createElementBlock)("svg", _hoisted_1220, _hoisted_469);
    }
    var remove_default = export_helper_default(_sfc_main220, [["render", _sfc_render220], ["__file", "remove.vue"]]);
    var import_vue221 = require_vue();
    var _sfc_main221 = {
      name: "Right"
    };
    var _hoisted_1221 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2221 = (0, import_vue221.createElementVNode)("path", {
      fill: "currentColor",
      d: "M754.752 480H160a32 32 0 1 0 0 64h594.752L521.344 777.344a32 32 0 0 0 45.312 45.312l288-288a32 32 0 0 0 0-45.312l-288-288a32 32 0 1 0-45.312 45.312L754.752 480z"
    }, null, -1);
    var _hoisted_3220 = [
      _hoisted_2221
    ];
    function _sfc_render221(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue221.openBlock)(), (0, import_vue221.createElementBlock)("svg", _hoisted_1221, _hoisted_3220);
    }
    var right_default = export_helper_default(_sfc_main221, [["render", _sfc_render221], ["__file", "right.vue"]]);
    var import_vue222 = require_vue();
    var _sfc_main222 = {
      name: "ScaleToOriginal"
    };
    var _hoisted_1222 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2222 = (0, import_vue222.createElementVNode)("path", {
      fill: "currentColor",
      d: "M813.176 180.706a60.235 60.235 0 0 1 60.236 60.235v481.883a60.235 60.235 0 0 1-60.236 60.235H210.824a60.235 60.235 0 0 1-60.236-60.235V240.94a60.235 60.235 0 0 1 60.236-60.235h602.352zm0-60.235H210.824A120.47 120.47 0 0 0 90.353 240.94v481.883a120.47 120.47 0 0 0 120.47 120.47h602.353a120.47 120.47 0 0 0 120.471-120.47V240.94a120.47 120.47 0 0 0-120.47-120.47zm-120.47 180.705a30.118 30.118 0 0 0-30.118 30.118v301.177a30.118 30.118 0 0 0 60.236 0V331.294a30.118 30.118 0 0 0-30.118-30.118zm-361.412 0a30.118 30.118 0 0 0-30.118 30.118v301.177a30.118 30.118 0 1 0 60.236 0V331.294a30.118 30.118 0 0 0-30.118-30.118zM512 361.412a30.118 30.118 0 0 0-30.118 30.117v30.118a30.118 30.118 0 0 0 60.236 0V391.53A30.118 30.118 0 0 0 512 361.412zM512 512a30.118 30.118 0 0 0-30.118 30.118v30.117a30.118 30.118 0 0 0 60.236 0v-30.117A30.118 30.118 0 0 0 512 512z"
    }, null, -1);
    var _hoisted_3221 = [
      _hoisted_2222
    ];
    function _sfc_render222(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue222.openBlock)(), (0, import_vue222.createElementBlock)("svg", _hoisted_1222, _hoisted_3221);
    }
    var scale_to_original_default = export_helper_default(_sfc_main222, [["render", _sfc_render222], ["__file", "scale-to-original.vue"]]);
    var import_vue223 = require_vue();
    var _sfc_main223 = {
      name: "School"
    };
    var _hoisted_1223 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2223 = (0, import_vue223.createElementVNode)("path", {
      fill: "currentColor",
      d: "M224 128v704h576V128H224zm-32-64h640a32 32 0 0 1 32 32v768a32 32 0 0 1-32 32H192a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_3222 = (0, import_vue223.createElementVNode)("path", {
      fill: "currentColor",
      d: "M64 832h896v64H64zm256-640h128v96H320z"
    }, null, -1);
    var _hoisted_470 = (0, import_vue223.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 832h256v-64a128 128 0 1 0-256 0v64zm128-256a192 192 0 0 1 192 192v128H320V768a192 192 0 0 1 192-192zM320 384h128v96H320zm256-192h128v96H576zm0 192h128v96H576z"
    }, null, -1);
    var _hoisted_520 = [
      _hoisted_2223,
      _hoisted_3222,
      _hoisted_470
    ];
    function _sfc_render223(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue223.openBlock)(), (0, import_vue223.createElementBlock)("svg", _hoisted_1223, _hoisted_520);
    }
    var school_default = export_helper_default(_sfc_main223, [["render", _sfc_render223], ["__file", "school.vue"]]);
    var import_vue224 = require_vue();
    var _sfc_main224 = {
      name: "Scissor"
    };
    var _hoisted_1224 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2224 = (0, import_vue224.createElementVNode)("path", {
      fill: "currentColor",
      d: "m512.064 578.368-106.88 152.768a160 160 0 1 1-23.36-78.208L472.96 522.56 196.864 128.256a32 32 0 1 1 52.48-36.736l393.024 561.344a160 160 0 1 1-23.36 78.208l-106.88-152.704zm54.4-189.248 208.384-297.6a32 32 0 0 1 52.48 36.736l-221.76 316.672-39.04-55.808zm-376.32 425.856a96 96 0 1 0 110.144-157.248 96 96 0 0 0-110.08 157.248zm643.84 0a96 96 0 1 0-110.08-157.248 96 96 0 0 0 110.08 157.248z"
    }, null, -1);
    var _hoisted_3223 = [
      _hoisted_2224
    ];
    function _sfc_render224(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue224.openBlock)(), (0, import_vue224.createElementBlock)("svg", _hoisted_1224, _hoisted_3223);
    }
    var scissor_default = export_helper_default(_sfc_main224, [["render", _sfc_render224], ["__file", "scissor.vue"]]);
    var import_vue225 = require_vue();
    var _sfc_main225 = {
      name: "Search"
    };
    var _hoisted_1225 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2225 = (0, import_vue225.createElementVNode)("path", {
      fill: "currentColor",
      d: "m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704z"
    }, null, -1);
    var _hoisted_3224 = [
      _hoisted_2225
    ];
    function _sfc_render225(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue225.openBlock)(), (0, import_vue225.createElementBlock)("svg", _hoisted_1225, _hoisted_3224);
    }
    var search_default = export_helper_default(_sfc_main225, [["render", _sfc_render225], ["__file", "search.vue"]]);
    var import_vue226 = require_vue();
    var _sfc_main226 = {
      name: "Select"
    };
    var _hoisted_1226 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2226 = (0, import_vue226.createElementVNode)("path", {
      fill: "currentColor",
      d: "M77.248 415.04a64 64 0 0 1 90.496 0l226.304 226.304L846.528 188.8a64 64 0 1 1 90.56 90.496l-543.04 543.04-316.8-316.8a64 64 0 0 1 0-90.496z"
    }, null, -1);
    var _hoisted_3225 = [
      _hoisted_2226
    ];
    function _sfc_render226(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue226.openBlock)(), (0, import_vue226.createElementBlock)("svg", _hoisted_1226, _hoisted_3225);
    }
    var select_default = export_helper_default(_sfc_main226, [["render", _sfc_render226], ["__file", "select.vue"]]);
    var import_vue227 = require_vue();
    var _sfc_main227 = {
      name: "Sell"
    };
    var _hoisted_1227 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2227 = (0, import_vue227.createElementVNode)("path", {
      fill: "currentColor",
      d: "M704 288h131.072a32 32 0 0 1 31.808 28.8L886.4 512h-64.384l-16-160H704v96a32 32 0 1 1-64 0v-96H384v96a32 32 0 0 1-64 0v-96H217.92l-51.2 512H512v64H131.328a32 32 0 0 1-31.808-35.2l57.6-576a32 32 0 0 1 31.808-28.8H320v-22.336C320 154.688 405.504 64 512 64s192 90.688 192 201.664v22.4zm-64 0v-22.336C640 189.248 582.272 128 512 128c-70.272 0-128 61.248-128 137.664v22.4h256zm201.408 483.84L768 698.496V928a32 32 0 1 1-64 0V698.496l-73.344 73.344a32 32 0 1 1-45.248-45.248l128-128a32 32 0 0 1 45.248 0l128 128a32 32 0 1 1-45.248 45.248z"
    }, null, -1);
    var _hoisted_3226 = [
      _hoisted_2227
    ];
    function _sfc_render227(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue227.openBlock)(), (0, import_vue227.createElementBlock)("svg", _hoisted_1227, _hoisted_3226);
    }
    var sell_default = export_helper_default(_sfc_main227, [["render", _sfc_render227], ["__file", "sell.vue"]]);
    var import_vue228 = require_vue();
    var _sfc_main228 = {
      name: "SemiSelect"
    };
    var _hoisted_1228 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2228 = (0, import_vue228.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 448h768q64 0 64 64t-64 64H128q-64 0-64-64t64-64z"
    }, null, -1);
    var _hoisted_3227 = [
      _hoisted_2228
    ];
    function _sfc_render228(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue228.openBlock)(), (0, import_vue228.createElementBlock)("svg", _hoisted_1228, _hoisted_3227);
    }
    var semi_select_default = export_helper_default(_sfc_main228, [["render", _sfc_render228], ["__file", "semi-select.vue"]]);
    var import_vue229 = require_vue();
    var _sfc_main229 = {
      name: "Service"
    };
    var _hoisted_1229 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2229 = (0, import_vue229.createElementVNode)("path", {
      fill: "currentColor",
      d: "M864 409.6a192 192 0 0 1-37.888 349.44A256.064 256.064 0 0 1 576 960h-96a32 32 0 1 1 0-64h96a192.064 192.064 0 0 0 181.12-128H736a32 32 0 0 1-32-32V416a32 32 0 0 1 32-32h32c10.368 0 20.544.832 30.528 2.432a288 288 0 0 0-573.056 0A193.235 193.235 0 0 1 256 384h32a32 32 0 0 1 32 32v320a32 32 0 0 1-32 32h-32a192 192 0 0 1-96-358.4 352 352 0 0 1 704 0zM256 448a128 128 0 1 0 0 256V448zm640 128a128 128 0 0 0-128-128v256a128 128 0 0 0 128-128z"
    }, null, -1);
    var _hoisted_3228 = [
      _hoisted_2229
    ];
    function _sfc_render229(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue229.openBlock)(), (0, import_vue229.createElementBlock)("svg", _hoisted_1229, _hoisted_3228);
    }
    var service_default = export_helper_default(_sfc_main229, [["render", _sfc_render229], ["__file", "service.vue"]]);
    var import_vue230 = require_vue();
    var _sfc_main230 = {
      name: "SetUp"
    };
    var _hoisted_1230 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2230 = (0, import_vue230.createElementVNode)("path", {
      fill: "currentColor",
      d: "M224 160a64 64 0 0 0-64 64v576a64 64 0 0 0 64 64h576a64 64 0 0 0 64-64V224a64 64 0 0 0-64-64H224zm0-64h576a128 128 0 0 1 128 128v576a128 128 0 0 1-128 128H224A128 128 0 0 1 96 800V224A128 128 0 0 1 224 96z"
    }, null, -1);
    var _hoisted_3229 = (0, import_vue230.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 416a64 64 0 1 0 0-128 64 64 0 0 0 0 128zm0 64a128 128 0 1 1 0-256 128 128 0 0 1 0 256z"
    }, null, -1);
    var _hoisted_471 = (0, import_vue230.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 320h256q32 0 32 32t-32 32H480q-32 0-32-32t32-32zm160 416a64 64 0 1 0 0-128 64 64 0 0 0 0 128zm0 64a128 128 0 1 1 0-256 128 128 0 0 1 0 256z"
    }, null, -1);
    var _hoisted_521 = (0, import_vue230.createElementVNode)("path", {
      fill: "currentColor",
      d: "M288 640h256q32 0 32 32t-32 32H288q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_62 = [
      _hoisted_2230,
      _hoisted_3229,
      _hoisted_471,
      _hoisted_521
    ];
    function _sfc_render230(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue230.openBlock)(), (0, import_vue230.createElementBlock)("svg", _hoisted_1230, _hoisted_62);
    }
    var set_up_default = export_helper_default(_sfc_main230, [["render", _sfc_render230], ["__file", "set-up.vue"]]);
    var import_vue231 = require_vue();
    var _sfc_main231 = {
      name: "Setting"
    };
    var _hoisted_1231 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2231 = (0, import_vue231.createElementVNode)("path", {
      fill: "currentColor",
      d: "M600.704 64a32 32 0 0 1 30.464 22.208l35.2 109.376c14.784 7.232 28.928 15.36 42.432 24.512l112.384-24.192a32 32 0 0 1 34.432 15.36L944.32 364.8a32 32 0 0 1-4.032 37.504l-77.12 85.12a357.12 357.12 0 0 1 0 49.024l77.12 85.248a32 32 0 0 1 4.032 37.504l-88.704 153.6a32 32 0 0 1-34.432 15.296L708.8 803.904c-13.44 9.088-27.648 17.28-42.368 24.512l-35.264 109.376A32 32 0 0 1 600.704 960H423.296a32 32 0 0 1-30.464-22.208L357.696 828.48a351.616 351.616 0 0 1-42.56-24.64l-112.32 24.256a32 32 0 0 1-34.432-15.36L79.68 659.2a32 32 0 0 1 4.032-37.504l77.12-85.248a357.12 357.12 0 0 1 0-48.896l-77.12-85.248A32 32 0 0 1 79.68 364.8l88.704-153.6a32 32 0 0 1 34.432-15.296l112.32 24.256c13.568-9.152 27.776-17.408 42.56-24.64l35.2-109.312A32 32 0 0 1 423.232 64H600.64zm-23.424 64H446.72l-36.352 113.088-24.512 11.968a294.113 294.113 0 0 0-34.816 20.096l-22.656 15.36-116.224-25.088-65.28 113.152 79.68 88.192-1.92 27.136a293.12 293.12 0 0 0 0 40.192l1.92 27.136-79.808 88.192 65.344 113.152 116.224-25.024 22.656 15.296a294.113 294.113 0 0 0 34.816 20.096l24.512 11.968L446.72 896h130.688l36.48-113.152 24.448-11.904a288.282 288.282 0 0 0 34.752-20.096l22.592-15.296 116.288 25.024 65.28-113.152-79.744-88.192 1.92-27.136a293.12 293.12 0 0 0 0-40.256l-1.92-27.136 79.808-88.128-65.344-113.152-116.288 24.96-22.592-15.232a287.616 287.616 0 0 0-34.752-20.096l-24.448-11.904L577.344 128zM512 320a192 192 0 1 1 0 384 192 192 0 0 1 0-384zm0 64a128 128 0 1 0 0 256 128 128 0 0 0 0-256z"
    }, null, -1);
    var _hoisted_3230 = [
      _hoisted_2231
    ];
    function _sfc_render231(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue231.openBlock)(), (0, import_vue231.createElementBlock)("svg", _hoisted_1231, _hoisted_3230);
    }
    var setting_default = export_helper_default(_sfc_main231, [["render", _sfc_render231], ["__file", "setting.vue"]]);
    var import_vue232 = require_vue();
    var _sfc_main232 = {
      name: "Share"
    };
    var _hoisted_1232 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2232 = (0, import_vue232.createElementVNode)("path", {
      fill: "currentColor",
      d: "m679.872 348.8-301.76 188.608a127.808 127.808 0 0 1 5.12 52.16l279.936 104.96a128 128 0 1 1-22.464 59.904l-279.872-104.96a128 128 0 1 1-16.64-166.272l301.696-188.608a128 128 0 1 1 33.92 54.272z"
    }, null, -1);
    var _hoisted_3231 = [
      _hoisted_2232
    ];
    function _sfc_render232(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue232.openBlock)(), (0, import_vue232.createElementBlock)("svg", _hoisted_1232, _hoisted_3231);
    }
    var share_default = export_helper_default(_sfc_main232, [["render", _sfc_render232], ["__file", "share.vue"]]);
    var import_vue233 = require_vue();
    var _sfc_main233 = {
      name: "Ship"
    };
    var _hoisted_1233 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2233 = (0, import_vue233.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 386.88V448h405.568a32 32 0 0 1 30.72 40.768l-76.48 267.968A192 192 0 0 1 687.168 896H336.832a192 192 0 0 1-184.64-139.264L75.648 488.768A32 32 0 0 1 106.368 448H448V117.888a32 32 0 0 1 47.36-28.096l13.888 7.616L512 96v2.88l231.68 126.4a32 32 0 0 1-2.048 57.216L512 386.88zm0-70.272 144.768-65.792L512 171.84v144.768zM512 512H148.864l18.24 64H856.96l18.24-64H512zM185.408 640l28.352 99.2A128 128 0 0 0 336.832 832h350.336a128 128 0 0 0 123.072-92.8l28.352-99.2H185.408z"
    }, null, -1);
    var _hoisted_3232 = [
      _hoisted_2233
    ];
    function _sfc_render233(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue233.openBlock)(), (0, import_vue233.createElementBlock)("svg", _hoisted_1233, _hoisted_3232);
    }
    var ship_default = export_helper_default(_sfc_main233, [["render", _sfc_render233], ["__file", "ship.vue"]]);
    var import_vue234 = require_vue();
    var _sfc_main234 = {
      name: "Shop"
    };
    var _hoisted_1234 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2234 = (0, import_vue234.createElementVNode)("path", {
      fill: "currentColor",
      d: "M704 704h64v192H256V704h64v64h384v-64zm188.544-152.192C894.528 559.616 896 567.616 896 576a96 96 0 1 1-192 0 96 96 0 1 1-192 0 96 96 0 1 1-192 0 96 96 0 1 1-192 0c0-8.384 1.408-16.384 3.392-24.192L192 128h640l60.544 423.808z"
    }, null, -1);
    var _hoisted_3233 = [
      _hoisted_2234
    ];
    function _sfc_render234(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue234.openBlock)(), (0, import_vue234.createElementBlock)("svg", _hoisted_1234, _hoisted_3233);
    }
    var shop_default = export_helper_default(_sfc_main234, [["render", _sfc_render234], ["__file", "shop.vue"]]);
    var import_vue235 = require_vue();
    var _sfc_main235 = {
      name: "ShoppingBag"
    };
    var _hoisted_1235 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2235 = (0, import_vue235.createElementVNode)("path", {
      fill: "currentColor",
      d: "M704 320v96a32 32 0 0 1-32 32h-32V320H384v128h-32a32 32 0 0 1-32-32v-96H192v576h640V320H704zm-384-64a192 192 0 1 1 384 0h160a32 32 0 0 1 32 32v640a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V288a32 32 0 0 1 32-32h160zm64 0h256a128 128 0 1 0-256 0z"
    }, null, -1);
    var _hoisted_3234 = (0, import_vue235.createElementVNode)("path", {
      fill: "currentColor",
      d: "M192 704h640v64H192z"
    }, null, -1);
    var _hoisted_472 = [
      _hoisted_2235,
      _hoisted_3234
    ];
    function _sfc_render235(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue235.openBlock)(), (0, import_vue235.createElementBlock)("svg", _hoisted_1235, _hoisted_472);
    }
    var shopping_bag_default = export_helper_default(_sfc_main235, [["render", _sfc_render235], ["__file", "shopping-bag.vue"]]);
    var import_vue236 = require_vue();
    var _sfc_main236 = {
      name: "ShoppingCartFull"
    };
    var _hoisted_1236 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2236 = (0, import_vue236.createElementVNode)("path", {
      fill: "currentColor",
      d: "M432 928a48 48 0 1 1 0-96 48 48 0 0 1 0 96zm320 0a48 48 0 1 1 0-96 48 48 0 0 1 0 96zM96 128a32 32 0 0 1 0-64h160a32 32 0 0 1 31.36 25.728L320.64 256H928a32 32 0 0 1 31.296 38.72l-96 448A32 32 0 0 1 832 768H384a32 32 0 0 1-31.36-25.728L229.76 128H96zm314.24 576h395.904l82.304-384H333.44l76.8 384z"
    }, null, -1);
    var _hoisted_3235 = (0, import_vue236.createElementVNode)("path", {
      fill: "currentColor",
      d: "M699.648 256 608 145.984 516.352 256h183.296zm-140.8-151.04a64 64 0 0 1 98.304 0L836.352 320H379.648l179.2-215.04z"
    }, null, -1);
    var _hoisted_473 = [
      _hoisted_2236,
      _hoisted_3235
    ];
    function _sfc_render236(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue236.openBlock)(), (0, import_vue236.createElementBlock)("svg", _hoisted_1236, _hoisted_473);
    }
    var shopping_cart_full_default = export_helper_default(_sfc_main236, [["render", _sfc_render236], ["__file", "shopping-cart-full.vue"]]);
    var import_vue237 = require_vue();
    var _sfc_main237 = {
      name: "ShoppingCart"
    };
    var _hoisted_1237 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2237 = (0, import_vue237.createElementVNode)("path", {
      fill: "currentColor",
      d: "M432 928a48 48 0 1 1 0-96 48 48 0 0 1 0 96zm320 0a48 48 0 1 1 0-96 48 48 0 0 1 0 96zM96 128a32 32 0 0 1 0-64h160a32 32 0 0 1 31.36 25.728L320.64 256H928a32 32 0 0 1 31.296 38.72l-96 448A32 32 0 0 1 832 768H384a32 32 0 0 1-31.36-25.728L229.76 128H96zm314.24 576h395.904l82.304-384H333.44l76.8 384z"
    }, null, -1);
    var _hoisted_3236 = [
      _hoisted_2237
    ];
    function _sfc_render237(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue237.openBlock)(), (0, import_vue237.createElementBlock)("svg", _hoisted_1237, _hoisted_3236);
    }
    var shopping_cart_default = export_helper_default(_sfc_main237, [["render", _sfc_render237], ["__file", "shopping-cart.vue"]]);
    var import_vue238 = require_vue();
    var _sfc_main238 = {
      name: "ShoppingTrolley"
    };
    var _hoisted_1238 = {
      version: "1.1",
      xmlns: "http://www.w3.org/2000/svg",
      x: "0",
      y: "0",
      viewBox: "0 0 1024 1024",
      style: { "enable-background": "new 0 0 1024 1024" },
      "xml:space": "preserve"
    };
    var _hoisted_2238 = (0, import_vue238.createElementVNode)("path", {
      d: "M368 833c-13.3 0-24.5 4.5-33.5 13.5S321 866.7 321 880s4.5 24.5 13.5 33.5 20.2 13.8 33.5 14.5c13.3-.7 24.5-5.5 33.5-14.5S415 893.3 415 880s-4.5-24.5-13.5-33.5S381.3 833 368 833zM807 640c7.4 0 13.8-2.2 19.5-6.5S836 623.3 838 616l112-448c2-10-.2-19.2-6.5-27.5S929 128 919 128H96c-9.3 0-17 3-23 9s-9 13.7-9 23 3 17 9 23 13.7 9 23 9h96v576h672c9.3 0 17-3 23-9s9-13.7 9-23-3-17-9-23-13.7-9-23-9H256v-64h551zM256 192h622l-96 384H256V192zM688 833c-13.3 0-24.5 4.5-33.5 13.5S641 866.7 641 880s4.5 24.5 13.5 33.5 20.2 13.8 33.5 14.5c13.3-.7 24.5-5.5 33.5-14.5S735 893.3 735 880s-4.5-24.5-13.5-33.5S701.3 833 688 833z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_3237 = [
      _hoisted_2238
    ];
    function _sfc_render238(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue238.openBlock)(), (0, import_vue238.createElementBlock)("svg", _hoisted_1238, _hoisted_3237);
    }
    var shopping_trolley_default = export_helper_default(_sfc_main238, [["render", _sfc_render238], ["__file", "shopping-trolley.vue"]]);
    var import_vue239 = require_vue();
    var _sfc_main239 = {
      name: "Smoking"
    };
    var _hoisted_1239 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2239 = (0, import_vue239.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 576v128h640V576H256zm-32-64h704a32 32 0 0 1 32 32v192a32 32 0 0 1-32 32H224a32 32 0 0 1-32-32V544a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_3238 = (0, import_vue239.createElementVNode)("path", {
      fill: "currentColor",
      d: "M704 576h64v128h-64zM256 64h64v320h-64zM128 192h64v192h-64zM64 512h64v256H64z"
    }, null, -1);
    var _hoisted_474 = [
      _hoisted_2239,
      _hoisted_3238
    ];
    function _sfc_render239(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue239.openBlock)(), (0, import_vue239.createElementBlock)("svg", _hoisted_1239, _hoisted_474);
    }
    var smoking_default = export_helper_default(_sfc_main239, [["render", _sfc_render239], ["__file", "smoking.vue"]]);
    var import_vue240 = require_vue();
    var _sfc_main240 = {
      name: "Soccer"
    };
    var _hoisted_1240 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2240 = (0, import_vue240.createElementVNode)("path", {
      fill: "currentColor",
      d: "M418.496 871.04 152.256 604.8c-16.512 94.016-2.368 178.624 42.944 224 44.928 44.928 129.344 58.752 223.296 42.24zm72.32-18.176a573.056 573.056 0 0 0 224.832-137.216 573.12 573.12 0 0 0 137.216-224.832L533.888 171.84a578.56 578.56 0 0 0-227.52 138.496A567.68 567.68 0 0 0 170.432 532.48l320.384 320.384zM871.04 418.496c16.512-93.952 2.688-178.368-42.24-223.296-44.544-44.544-128.704-58.048-222.592-41.536L871.04 418.496zM149.952 874.048c-112.96-112.96-88.832-408.96 111.168-608.96C461.056 65.152 760.96 36.928 874.048 149.952c113.024 113.024 86.784 411.008-113.152 610.944-199.936 199.936-497.92 226.112-610.944 113.152zm452.544-497.792 22.656-22.656a32 32 0 0 1 45.248 45.248l-22.656 22.656 45.248 45.248A32 32 0 1 1 647.744 512l-45.248-45.248L557.248 512l45.248 45.248a32 32 0 1 1-45.248 45.248L512 557.248l-45.248 45.248L512 647.744a32 32 0 1 1-45.248 45.248l-45.248-45.248-22.656 22.656a32 32 0 1 1-45.248-45.248l22.656-22.656-45.248-45.248A32 32 0 1 1 376.256 512l45.248 45.248L466.752 512l-45.248-45.248a32 32 0 1 1 45.248-45.248L512 466.752l45.248-45.248L512 376.256a32 32 0 0 1 45.248-45.248l45.248 45.248z"
    }, null, -1);
    var _hoisted_3239 = [
      _hoisted_2240
    ];
    function _sfc_render240(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue240.openBlock)(), (0, import_vue240.createElementBlock)("svg", _hoisted_1240, _hoisted_3239);
    }
    var soccer_default = export_helper_default(_sfc_main240, [["render", _sfc_render240], ["__file", "soccer.vue"]]);
    var import_vue241 = require_vue();
    var _sfc_main241 = {
      name: "SoldOut"
    };
    var _hoisted_1241 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2241 = (0, import_vue241.createElementVNode)("path", {
      fill: "currentColor",
      d: "M704 288h131.072a32 32 0 0 1 31.808 28.8L886.4 512h-64.384l-16-160H704v96a32 32 0 1 1-64 0v-96H384v96a32 32 0 0 1-64 0v-96H217.92l-51.2 512H512v64H131.328a32 32 0 0 1-31.808-35.2l57.6-576a32 32 0 0 1 31.808-28.8H320v-22.336C320 154.688 405.504 64 512 64s192 90.688 192 201.664v22.4zm-64 0v-22.336C640 189.248 582.272 128 512 128c-70.272 0-128 61.248-128 137.664v22.4h256zm201.408 476.16a32 32 0 1 1 45.248 45.184l-128 128a32 32 0 0 1-45.248 0l-128-128a32 32 0 1 1 45.248-45.248L704 837.504V608a32 32 0 1 1 64 0v229.504l73.408-73.408z"
    }, null, -1);
    var _hoisted_3240 = [
      _hoisted_2241
    ];
    function _sfc_render241(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue241.openBlock)(), (0, import_vue241.createElementBlock)("svg", _hoisted_1241, _hoisted_3240);
    }
    var sold_out_default = export_helper_default(_sfc_main241, [["render", _sfc_render241], ["__file", "sold-out.vue"]]);
    var import_vue242 = require_vue();
    var _sfc_main242 = {
      name: "SortDown"
    };
    var _hoisted_1242 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2242 = (0, import_vue242.createElementVNode)("path", {
      fill: "currentColor",
      d: "M576 96v709.568L333.312 562.816A32 32 0 1 0 288 608l297.408 297.344A32 32 0 0 0 640 882.688V96a32 32 0 0 0-64 0z"
    }, null, -1);
    var _hoisted_3241 = [
      _hoisted_2242
    ];
    function _sfc_render242(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue242.openBlock)(), (0, import_vue242.createElementBlock)("svg", _hoisted_1242, _hoisted_3241);
    }
    var sort_down_default = export_helper_default(_sfc_main242, [["render", _sfc_render242], ["__file", "sort-down.vue"]]);
    var import_vue243 = require_vue();
    var _sfc_main243 = {
      name: "SortUp"
    };
    var _hoisted_1243 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2243 = (0, import_vue243.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 141.248V928a32 32 0 1 0 64 0V218.56l242.688 242.688A32 32 0 1 0 736 416L438.592 118.656A32 32 0 0 0 384 141.248z"
    }, null, -1);
    var _hoisted_3242 = [
      _hoisted_2243
    ];
    function _sfc_render243(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue243.openBlock)(), (0, import_vue243.createElementBlock)("svg", _hoisted_1243, _hoisted_3242);
    }
    var sort_up_default = export_helper_default(_sfc_main243, [["render", _sfc_render243], ["__file", "sort-up.vue"]]);
    var import_vue244 = require_vue();
    var _sfc_main244 = {
      name: "Sort"
    };
    var _hoisted_1244 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2244 = (0, import_vue244.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 96a32 32 0 0 1 64 0v786.752a32 32 0 0 1-54.592 22.656L95.936 608a32 32 0 0 1 0-45.312h.128a32 32 0 0 1 45.184 0L384 805.632V96zm192 45.248a32 32 0 0 1 54.592-22.592L928.064 416a32 32 0 0 1 0 45.312h-.128a32 32 0 0 1-45.184 0L640 218.496V928a32 32 0 1 1-64 0V141.248z"
    }, null, -1);
    var _hoisted_3243 = [
      _hoisted_2244
    ];
    function _sfc_render244(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue244.openBlock)(), (0, import_vue244.createElementBlock)("svg", _hoisted_1244, _hoisted_3243);
    }
    var sort_default = export_helper_default(_sfc_main244, [["render", _sfc_render244], ["__file", "sort.vue"]]);
    var import_vue245 = require_vue();
    var _sfc_main245 = {
      name: "Stamp"
    };
    var _hoisted_1245 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2245 = (0, import_vue245.createElementVNode)("path", {
      fill: "currentColor",
      d: "M624 475.968V640h144a128 128 0 0 1 128 128H128a128 128 0 0 1 128-128h144V475.968a192 192 0 1 1 224 0zM128 896v-64h768v64H128z"
    }, null, -1);
    var _hoisted_3244 = [
      _hoisted_2245
    ];
    function _sfc_render245(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue245.openBlock)(), (0, import_vue245.createElementBlock)("svg", _hoisted_1245, _hoisted_3244);
    }
    var stamp_default = export_helper_default(_sfc_main245, [["render", _sfc_render245], ["__file", "stamp.vue"]]);
    var import_vue246 = require_vue();
    var _sfc_main246 = {
      name: "StarFilled"
    };
    var _hoisted_1246 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2246 = (0, import_vue246.createElementVNode)("path", {
      fill: "currentColor",
      d: "M283.84 867.84 512 747.776l228.16 119.936a6.4 6.4 0 0 0 9.28-6.72l-43.52-254.08 184.512-179.904a6.4 6.4 0 0 0-3.52-10.88l-255.104-37.12L517.76 147.904a6.4 6.4 0 0 0-11.52 0L392.192 379.072l-255.104 37.12a6.4 6.4 0 0 0-3.52 10.88L318.08 606.976l-43.584 254.08a6.4 6.4 0 0 0 9.28 6.72z"
    }, null, -1);
    var _hoisted_3245 = [
      _hoisted_2246
    ];
    function _sfc_render246(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue246.openBlock)(), (0, import_vue246.createElementBlock)("svg", _hoisted_1246, _hoisted_3245);
    }
    var star_filled_default = export_helper_default(_sfc_main246, [["render", _sfc_render246], ["__file", "star-filled.vue"]]);
    var import_vue247 = require_vue();
    var _sfc_main247 = {
      name: "Star"
    };
    var _hoisted_1247 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2247 = (0, import_vue247.createElementVNode)("path", {
      fill: "currentColor",
      d: "m512 747.84 228.16 119.936a6.4 6.4 0 0 0 9.28-6.72l-43.52-254.08 184.512-179.904a6.4 6.4 0 0 0-3.52-10.88l-255.104-37.12L517.76 147.904a6.4 6.4 0 0 0-11.52 0L392.192 379.072l-255.104 37.12a6.4 6.4 0 0 0-3.52 10.88L318.08 606.976l-43.584 254.08a6.4 6.4 0 0 0 9.28 6.72L512 747.84zM313.6 924.48a70.4 70.4 0 0 1-102.144-74.24l37.888-220.928L88.96 472.96A70.4 70.4 0 0 1 128 352.896l221.76-32.256 99.2-200.96a70.4 70.4 0 0 1 126.208 0l99.2 200.96 221.824 32.256a70.4 70.4 0 0 1 39.04 120.064L774.72 629.376l37.888 220.928a70.4 70.4 0 0 1-102.144 74.24L512 820.096l-198.4 104.32z"
    }, null, -1);
    var _hoisted_3246 = [
      _hoisted_2247
    ];
    function _sfc_render247(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue247.openBlock)(), (0, import_vue247.createElementBlock)("svg", _hoisted_1247, _hoisted_3246);
    }
    var star_default = export_helper_default(_sfc_main247, [["render", _sfc_render247], ["__file", "star.vue"]]);
    var import_vue248 = require_vue();
    var _sfc_main248 = {
      name: "Stopwatch"
    };
    var _hoisted_1248 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2248 = (0, import_vue248.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768zm0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"
    }, null, -1);
    var _hoisted_3247 = (0, import_vue248.createElementVNode)("path", {
      fill: "currentColor",
      d: "M672 234.88c-39.168 174.464-80 298.624-122.688 372.48-64 110.848-202.624 30.848-138.624-80C453.376 453.44 540.48 355.968 672 234.816z"
    }, null, -1);
    var _hoisted_475 = [
      _hoisted_2248,
      _hoisted_3247
    ];
    function _sfc_render248(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue248.openBlock)(), (0, import_vue248.createElementBlock)("svg", _hoisted_1248, _hoisted_475);
    }
    var stopwatch_default = export_helper_default(_sfc_main248, [["render", _sfc_render248], ["__file", "stopwatch.vue"]]);
    var import_vue249 = require_vue();
    var _sfc_main249 = {
      name: "SuccessFilled"
    };
    var _hoisted_1249 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2249 = (0, import_vue249.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm-55.808 536.384-99.52-99.584a38.4 38.4 0 1 0-54.336 54.336l126.72 126.72a38.272 38.272 0 0 0 54.336 0l262.4-262.464a38.4 38.4 0 1 0-54.272-54.336L456.192 600.384z"
    }, null, -1);
    var _hoisted_3248 = [
      _hoisted_2249
    ];
    function _sfc_render249(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue249.openBlock)(), (0, import_vue249.createElementBlock)("svg", _hoisted_1249, _hoisted_3248);
    }
    var success_filled_default = export_helper_default(_sfc_main249, [["render", _sfc_render249], ["__file", "success-filled.vue"]]);
    var import_vue250 = require_vue();
    var _sfc_main250 = {
      name: "Sugar"
    };
    var _hoisted_1250 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2250 = (0, import_vue250.createElementVNode)("path", {
      fill: "currentColor",
      d: "m801.728 349.184 4.48 4.48a128 128 0 0 1 0 180.992L534.656 806.144a128 128 0 0 1-181.056 0l-4.48-4.48-19.392 109.696a64 64 0 0 1-108.288 34.176L78.464 802.56a64 64 0 0 1 34.176-108.288l109.76-19.328-4.544-4.544a128 128 0 0 1 0-181.056l271.488-271.488a128 128 0 0 1 181.056 0l4.48 4.48 19.392-109.504a64 64 0 0 1 108.352-34.048l142.592 143.04a64 64 0 0 1-34.24 108.16l-109.248 19.2zm-548.8 198.72h447.168v2.24l60.8-60.8a63.808 63.808 0 0 0 18.752-44.416h-426.88l-89.664 89.728a64.064 64.064 0 0 0-10.24 13.248zm0 64c2.752 4.736 6.144 9.152 10.176 13.248l135.744 135.744a64 64 0 0 0 90.496 0L638.4 611.904H252.928zm490.048-230.976L625.152 263.104a64 64 0 0 0-90.496 0L416.768 380.928h326.208zM123.712 757.312l142.976 142.976 24.32-137.6a25.6 25.6 0 0 0-29.696-29.632l-137.6 24.256zm633.6-633.344-24.32 137.472a25.6 25.6 0 0 0 29.632 29.632l137.28-24.064-142.656-143.04z"
    }, null, -1);
    var _hoisted_3249 = [
      _hoisted_2250
    ];
    function _sfc_render250(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue250.openBlock)(), (0, import_vue250.createElementBlock)("svg", _hoisted_1250, _hoisted_3249);
    }
    var sugar_default = export_helper_default(_sfc_main250, [["render", _sfc_render250], ["__file", "sugar.vue"]]);
    var import_vue251 = require_vue();
    var _sfc_main251 = {
      name: "SuitcaseLine"
    };
    var _hoisted_1251 = {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      style: { "enable-background": "new 0 0 1024 1024" },
      "xml:space": "preserve"
    };
    var _hoisted_2251 = (0, import_vue251.createElementVNode)("path", {
      d: "M922.5 229.5c-24.32-24.34-54.49-36.84-90.5-37.5H704v-64c-.68-17.98-7.02-32.98-19.01-44.99S658.01 64.66 640 64H384c-17.98.68-32.98 7.02-44.99 19.01S320.66 110 320 128v64H192c-35.99.68-66.16 13.18-90.5 37.5C77.16 253.82 64.66 283.99 64 320v448c.68 35.99 13.18 66.16 37.5 90.5s54.49 36.84 90.5 37.5h640c35.99-.68 66.16-13.18 90.5-37.5s36.84-54.49 37.5-90.5V320c-.68-35.99-13.18-66.16-37.5-90.5zM384 128h256v64H384v-64zM256 832h-64c-17.98-.68-32.98-7.02-44.99-19.01S128.66 786.01 128 768V448h128v384zm448 0H320V448h384v384zm192-64c-.68 17.98-7.02 32.98-19.01 44.99S850.01 831.34 832 832h-64V448h128v320zm0-384H128v-64c.69-17.98 7.02-32.98 19.01-44.99S173.99 256.66 192 256h640c17.98.69 32.98 7.02 44.99 19.01S895.34 301.99 896 320v64z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_3250 = [
      _hoisted_2251
    ];
    function _sfc_render251(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue251.openBlock)(), (0, import_vue251.createElementBlock)("svg", _hoisted_1251, _hoisted_3250);
    }
    var suitcase_line_default = export_helper_default(_sfc_main251, [["render", _sfc_render251], ["__file", "suitcase-line.vue"]]);
    var import_vue252 = require_vue();
    var _sfc_main252 = {
      name: "Suitcase"
    };
    var _hoisted_1252 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2252 = (0, import_vue252.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 384h768v-64a64 64 0 0 0-64-64H192a64 64 0 0 0-64 64v64zm0 64v320a64 64 0 0 0 64 64h640a64 64 0 0 0 64-64V448H128zm64-256h640a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H192A128 128 0 0 1 64 768V320a128 128 0 0 1 128-128z"
    }, null, -1);
    var _hoisted_3251 = (0, import_vue252.createElementVNode)("path", {
      fill: "currentColor",
      d: "M384 128v64h256v-64H384zm0-64h256a64 64 0 0 1 64 64v64a64 64 0 0 1-64 64H384a64 64 0 0 1-64-64v-64a64 64 0 0 1 64-64z"
    }, null, -1);
    var _hoisted_476 = [
      _hoisted_2252,
      _hoisted_3251
    ];
    function _sfc_render252(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue252.openBlock)(), (0, import_vue252.createElementBlock)("svg", _hoisted_1252, _hoisted_476);
    }
    var suitcase_default = export_helper_default(_sfc_main252, [["render", _sfc_render252], ["__file", "suitcase.vue"]]);
    var import_vue253 = require_vue();
    var _sfc_main253 = {
      name: "Sunny"
    };
    var _hoisted_1253 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2253 = (0, import_vue253.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 704a192 192 0 1 0 0-384 192 192 0 0 0 0 384zm0 64a256 256 0 1 1 0-512 256 256 0 0 1 0 512zm0-704a32 32 0 0 1 32 32v64a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 768a32 32 0 0 1 32 32v64a32 32 0 1 1-64 0v-64a32 32 0 0 1 32-32zM195.2 195.2a32 32 0 0 1 45.248 0l45.248 45.248a32 32 0 1 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm543.104 543.104a32 32 0 0 1 45.248 0l45.248 45.248a32 32 0 0 1-45.248 45.248l-45.248-45.248a32 32 0 0 1 0-45.248zM64 512a32 32 0 0 1 32-32h64a32 32 0 0 1 0 64H96a32 32 0 0 1-32-32zm768 0a32 32 0 0 1 32-32h64a32 32 0 1 1 0 64h-64a32 32 0 0 1-32-32zM195.2 828.8a32 32 0 0 1 0-45.248l45.248-45.248a32 32 0 0 1 45.248 45.248L240.448 828.8a32 32 0 0 1-45.248 0zm543.104-543.104a32 32 0 0 1 0-45.248l45.248-45.248a32 32 0 0 1 45.248 45.248l-45.248 45.248a32 32 0 0 1-45.248 0z"
    }, null, -1);
    var _hoisted_3252 = [
      _hoisted_2253
    ];
    function _sfc_render253(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue253.openBlock)(), (0, import_vue253.createElementBlock)("svg", _hoisted_1253, _hoisted_3252);
    }
    var sunny_default = export_helper_default(_sfc_main253, [["render", _sfc_render253], ["__file", "sunny.vue"]]);
    var import_vue254 = require_vue();
    var _sfc_main254 = {
      name: "Sunrise"
    };
    var _hoisted_1254 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2254 = (0, import_vue254.createElementVNode)("path", {
      fill: "currentColor",
      d: "M32 768h960a32 32 0 1 1 0 64H32a32 32 0 1 1 0-64zm129.408-96a352 352 0 0 1 701.184 0h-64.32a288 288 0 0 0-572.544 0h-64.32zM512 128a32 32 0 0 1 32 32v96a32 32 0 0 1-64 0v-96a32 32 0 0 1 32-32zm407.296 168.704a32 32 0 0 1 0 45.248l-67.84 67.84a32 32 0 1 1-45.248-45.248l67.84-67.84a32 32 0 0 1 45.248 0zm-814.592 0a32 32 0 0 1 45.248 0l67.84 67.84a32 32 0 1 1-45.248 45.248l-67.84-67.84a32 32 0 0 1 0-45.248z"
    }, null, -1);
    var _hoisted_3253 = [
      _hoisted_2254
    ];
    function _sfc_render254(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue254.openBlock)(), (0, import_vue254.createElementBlock)("svg", _hoisted_1254, _hoisted_3253);
    }
    var sunrise_default = export_helper_default(_sfc_main254, [["render", _sfc_render254], ["__file", "sunrise.vue"]]);
    var import_vue255 = require_vue();
    var _sfc_main255 = {
      name: "Sunset"
    };
    var _hoisted_1255 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2255 = (0, import_vue255.createElementVNode)("path", {
      fill: "currentColor",
      d: "M82.56 640a448 448 0 1 1 858.88 0h-67.2a384 384 0 1 0-724.288 0H82.56zM32 704h960q32 0 32 32t-32 32H32q-32 0-32-32t32-32zm256 128h448q32 0 32 32t-32 32H288q-32 0-32-32t32-32z"
    }, null, -1);
    var _hoisted_3254 = [
      _hoisted_2255
    ];
    function _sfc_render255(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue255.openBlock)(), (0, import_vue255.createElementBlock)("svg", _hoisted_1255, _hoisted_3254);
    }
    var sunset_default = export_helper_default(_sfc_main255, [["render", _sfc_render255], ["__file", "sunset.vue"]]);
    var import_vue256 = require_vue();
    var _sfc_main256 = {
      name: "SwitchButton"
    };
    var _hoisted_1256 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2256 = (0, import_vue256.createElementVNode)("path", {
      fill: "currentColor",
      d: "M352 159.872V230.4a352 352 0 1 0 320 0v-70.528A416.128 416.128 0 0 1 512 960a416 416 0 0 1-160-800.128z"
    }, null, -1);
    var _hoisted_3255 = (0, import_vue256.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64q32 0 32 32v320q0 32-32 32t-32-32V96q0-32 32-32z"
    }, null, -1);
    var _hoisted_477 = [
      _hoisted_2256,
      _hoisted_3255
    ];
    function _sfc_render256(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue256.openBlock)(), (0, import_vue256.createElementBlock)("svg", _hoisted_1256, _hoisted_477);
    }
    var switch_button_default = export_helper_default(_sfc_main256, [["render", _sfc_render256], ["__file", "switch-button.vue"]]);
    var import_vue257 = require_vue();
    var _sfc_main257 = {
      name: "SwitchFilled"
    };
    var _hoisted_1257 = {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      style: { "enable-background": "new 0 0 1024 1024" },
      "xml:space": "preserve"
    };
    var _hoisted_2257 = (0, import_vue257.createElementVNode)("path", {
      d: "M247.47 358.4v.04c.07 19.17 7.72 37.53 21.27 51.09s31.92 21.2 51.09 21.27c39.86 0 72.41-32.6 72.41-72.4s-32.6-72.36-72.41-72.36-72.36 32.55-72.36 72.36z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_3256 = (0, import_vue257.createElementVNode)("path", {
      d: "M492.38 128H324.7c-52.16 0-102.19 20.73-139.08 57.61a196.655 196.655 0 0 0-57.61 139.08V698.7c-.01 25.84 5.08 51.42 14.96 75.29s24.36 45.56 42.63 63.83 39.95 32.76 63.82 42.65a196.67 196.67 0 0 0 75.28 14.98h167.68c3.03 0 5.46-2.43 5.46-5.42V133.42c.6-2.99-1.83-5.42-5.46-5.42zm-56.11 705.88H324.7c-17.76.13-35.36-3.33-51.75-10.18s-31.22-16.94-43.61-29.67c-25.3-25.35-39.81-59.1-39.81-95.32V324.69c-.13-17.75 3.33-35.35 10.17-51.74a131.695 131.695 0 0 1 29.64-43.62c25.39-25.3 59.14-39.81 95.36-39.81h111.57v644.36zM838.39 186.21a196.655 196.655 0 0 0-139.08-57.61H580.48c-3.03 0-4.82 2.43-4.82 4.82v757.16c-.6 2.99 1.79 5.42 5.42 5.42h118.23a196.69 196.69 0 0 0 139.08-57.61A196.655 196.655 0 0 0 896 699.31V325.29a196.69 196.69 0 0 0-57.61-139.08zm-111.3 441.92c-42.83 0-77.82-34.99-77.82-77.82s34.98-77.82 77.82-77.82c42.83 0 77.82 34.99 77.82 77.82s-34.99 77.82-77.82 77.82z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_478 = [
      _hoisted_2257,
      _hoisted_3256
    ];
    function _sfc_render257(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue257.openBlock)(), (0, import_vue257.createElementBlock)("svg", _hoisted_1257, _hoisted_478);
    }
    var switch_filled_default = export_helper_default(_sfc_main257, [["render", _sfc_render257], ["__file", "switch-filled.vue"]]);
    var import_vue258 = require_vue();
    var _sfc_main258 = {
      name: "Switch"
    };
    var _hoisted_1258 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2258 = (0, import_vue258.createElementVNode)("path", {
      fill: "currentColor",
      d: "M118.656 438.656a32 32 0 0 1 0-45.248L416 96l4.48-3.776A32 32 0 0 1 461.248 96l3.712 4.48a32.064 32.064 0 0 1-3.712 40.832L218.56 384H928a32 32 0 1 1 0 64H141.248a32 32 0 0 1-22.592-9.344zM64 608a32 32 0 0 1 32-32h786.752a32 32 0 0 1 22.656 54.592L608 928l-4.48 3.776a32.064 32.064 0 0 1-40.832-49.024L805.632 640H96a32 32 0 0 1-32-32z"
    }, null, -1);
    var _hoisted_3257 = [
      _hoisted_2258
    ];
    function _sfc_render258(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue258.openBlock)(), (0, import_vue258.createElementBlock)("svg", _hoisted_1258, _hoisted_3257);
    }
    var switch_default = export_helper_default(_sfc_main258, [["render", _sfc_render258], ["__file", "switch.vue"]]);
    var import_vue259 = require_vue();
    var _sfc_main259 = {
      name: "TakeawayBox"
    };
    var _hoisted_1259 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2259 = (0, import_vue259.createElementVNode)("path", {
      fill: "currentColor",
      d: "M832 384H192v448h640V384zM96 320h832V128H96v192zm800 64v480a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V384H64a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32h896a32 32 0 0 1 32 32v256a32 32 0 0 1-32 32h-64zM416 512h192a32 32 0 0 1 0 64H416a32 32 0 0 1 0-64z"
    }, null, -1);
    var _hoisted_3258 = [
      _hoisted_2259
    ];
    function _sfc_render259(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue259.openBlock)(), (0, import_vue259.createElementBlock)("svg", _hoisted_1259, _hoisted_3258);
    }
    var takeaway_box_default = export_helper_default(_sfc_main259, [["render", _sfc_render259], ["__file", "takeaway-box.vue"]]);
    var import_vue260 = require_vue();
    var _sfc_main260 = {
      name: "Ticket"
    };
    var _hoisted_1260 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2260 = (0, import_vue260.createElementVNode)("path", {
      fill: "currentColor",
      d: "M640 832H64V640a128 128 0 1 0 0-256V192h576v160h64V192h256v192a128 128 0 1 0 0 256v192H704V672h-64v160zm0-416v192h64V416h-64z"
    }, null, -1);
    var _hoisted_3259 = [
      _hoisted_2260
    ];
    function _sfc_render260(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue260.openBlock)(), (0, import_vue260.createElementBlock)("svg", _hoisted_1260, _hoisted_3259);
    }
    var ticket_default = export_helper_default(_sfc_main260, [["render", _sfc_render260], ["__file", "ticket.vue"]]);
    var import_vue261 = require_vue();
    var _sfc_main261 = {
      name: "Tickets"
    };
    var _hoisted_1261 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2261 = (0, import_vue261.createElementVNode)("path", {
      fill: "currentColor",
      d: "M192 128v768h640V128H192zm-32-64h704a32 32 0 0 1 32 32v832a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32zm160 448h384v64H320v-64zm0-192h192v64H320v-64zm0 384h384v64H320v-64z"
    }, null, -1);
    var _hoisted_3260 = [
      _hoisted_2261
    ];
    function _sfc_render261(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue261.openBlock)(), (0, import_vue261.createElementBlock)("svg", _hoisted_1261, _hoisted_3260);
    }
    var tickets_default = export_helper_default(_sfc_main261, [["render", _sfc_render261], ["__file", "tickets.vue"]]);
    var import_vue262 = require_vue();
    var _sfc_main262 = {
      name: "Timer"
    };
    var _hoisted_1262 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2262 = (0, import_vue262.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 896a320 320 0 1 0 0-640 320 320 0 0 0 0 640zm0 64a384 384 0 1 1 0-768 384 384 0 0 1 0 768z"
    }, null, -1);
    var _hoisted_3261 = (0, import_vue262.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 320a32 32 0 0 1 32 32l-.512 224a32 32 0 1 1-64 0L480 352a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_479 = (0, import_vue262.createElementVNode)("path", {
      fill: "currentColor",
      d: "M448 576a64 64 0 1 0 128 0 64 64 0 1 0-128 0zm96-448v128h-64V128h-96a32 32 0 0 1 0-64h256a32 32 0 1 1 0 64h-96z"
    }, null, -1);
    var _hoisted_522 = [
      _hoisted_2262,
      _hoisted_3261,
      _hoisted_479
    ];
    function _sfc_render262(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue262.openBlock)(), (0, import_vue262.createElementBlock)("svg", _hoisted_1262, _hoisted_522);
    }
    var timer_default = export_helper_default(_sfc_main262, [["render", _sfc_render262], ["__file", "timer.vue"]]);
    var import_vue263 = require_vue();
    var _sfc_main263 = {
      name: "ToiletPaper"
    };
    var _hoisted_1263 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2263 = (0, import_vue263.createElementVNode)("path", {
      fill: "currentColor",
      d: "M595.2 128H320a192 192 0 0 0-192 192v576h384V352c0-90.496 32.448-171.2 83.2-224zM736 64c123.712 0 224 128.96 224 288S859.712 640 736 640H576v320H64V320A256 256 0 0 1 320 64h416zM576 352v224h160c84.352 0 160-97.28 160-224s-75.648-224-160-224-160 97.28-160 224z"
    }, null, -1);
    var _hoisted_3262 = (0, import_vue263.createElementVNode)("path", {
      fill: "currentColor",
      d: "M736 448c-35.328 0-64-43.008-64-96s28.672-96 64-96 64 43.008 64 96-28.672 96-64 96z"
    }, null, -1);
    var _hoisted_480 = [
      _hoisted_2263,
      _hoisted_3262
    ];
    function _sfc_render263(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue263.openBlock)(), (0, import_vue263.createElementBlock)("svg", _hoisted_1263, _hoisted_480);
    }
    var toilet_paper_default = export_helper_default(_sfc_main263, [["render", _sfc_render263], ["__file", "toilet-paper.vue"]]);
    var import_vue264 = require_vue();
    var _sfc_main264 = {
      name: "Tools"
    };
    var _hoisted_1264 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2264 = (0, import_vue264.createElementVNode)("path", {
      fill: "currentColor",
      d: "M764.416 254.72a351.68 351.68 0 0 1 86.336 149.184H960v192.064H850.752a351.68 351.68 0 0 1-86.336 149.312l54.72 94.72-166.272 96-54.592-94.72a352.64 352.64 0 0 1-172.48 0L371.136 936l-166.272-96 54.72-94.72a351.68 351.68 0 0 1-86.336-149.312H64v-192h109.248a351.68 351.68 0 0 1 86.336-149.312L204.8 160l166.208-96h.192l54.656 94.592a352.64 352.64 0 0 1 172.48 0L652.8 64h.128L819.2 160l-54.72 94.72zM704 499.968a192 192 0 1 0-384 0 192 192 0 0 0 384 0z"
    }, null, -1);
    var _hoisted_3263 = [
      _hoisted_2264
    ];
    function _sfc_render264(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue264.openBlock)(), (0, import_vue264.createElementBlock)("svg", _hoisted_1264, _hoisted_3263);
    }
    var tools_default = export_helper_default(_sfc_main264, [["render", _sfc_render264], ["__file", "tools.vue"]]);
    var import_vue265 = require_vue();
    var _sfc_main265 = {
      name: "TopLeft"
    };
    var _hoisted_1265 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2265 = (0, import_vue265.createElementVNode)("path", {
      fill: "currentColor",
      d: "M256 256h416a32 32 0 1 0 0-64H224a32 32 0 0 0-32 32v448a32 32 0 0 0 64 0V256z"
    }, null, -1);
    var _hoisted_3264 = (0, import_vue265.createElementVNode)("path", {
      fill: "currentColor",
      d: "M246.656 201.344a32 32 0 0 0-45.312 45.312l544 544a32 32 0 0 0 45.312-45.312l-544-544z"
    }, null, -1);
    var _hoisted_481 = [
      _hoisted_2265,
      _hoisted_3264
    ];
    function _sfc_render265(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue265.openBlock)(), (0, import_vue265.createElementBlock)("svg", _hoisted_1265, _hoisted_481);
    }
    var top_left_default = export_helper_default(_sfc_main265, [["render", _sfc_render265], ["__file", "top-left.vue"]]);
    var import_vue266 = require_vue();
    var _sfc_main266 = {
      name: "TopRight"
    };
    var _hoisted_1266 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2266 = (0, import_vue266.createElementVNode)("path", {
      fill: "currentColor",
      d: "M768 256H353.6a32 32 0 1 1 0-64H800a32 32 0 0 1 32 32v448a32 32 0 0 1-64 0V256z"
    }, null, -1);
    var _hoisted_3265 = (0, import_vue266.createElementVNode)("path", {
      fill: "currentColor",
      d: "M777.344 201.344a32 32 0 0 1 45.312 45.312l-544 544a32 32 0 0 1-45.312-45.312l544-544z"
    }, null, -1);
    var _hoisted_482 = [
      _hoisted_2266,
      _hoisted_3265
    ];
    function _sfc_render266(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue266.openBlock)(), (0, import_vue266.createElementBlock)("svg", _hoisted_1266, _hoisted_482);
    }
    var top_right_default = export_helper_default(_sfc_main266, [["render", _sfc_render266], ["__file", "top-right.vue"]]);
    var import_vue267 = require_vue();
    var _sfc_main267 = {
      name: "Top"
    };
    var _hoisted_1267 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2267 = (0, import_vue267.createElementVNode)("path", {
      fill: "currentColor",
      d: "M572.235 205.282v600.365a30.118 30.118 0 1 1-60.235 0V205.282L292.382 438.633a28.913 28.913 0 0 1-42.646 0 33.43 33.43 0 0 1 0-45.236l271.058-288.045a28.913 28.913 0 0 1 42.647 0L834.5 393.397a33.43 33.43 0 0 1 0 45.176 28.913 28.913 0 0 1-42.647 0l-219.618-233.23z"
    }, null, -1);
    var _hoisted_3266 = [
      _hoisted_2267
    ];
    function _sfc_render267(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue267.openBlock)(), (0, import_vue267.createElementBlock)("svg", _hoisted_1267, _hoisted_3266);
    }
    var top_default = export_helper_default(_sfc_main267, [["render", _sfc_render267], ["__file", "top.vue"]]);
    var import_vue268 = require_vue();
    var _sfc_main268 = {
      name: "TrendCharts"
    };
    var _hoisted_1268 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2268 = (0, import_vue268.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 896V128h768v768H128zm291.712-327.296 128 102.4 180.16-201.792-47.744-42.624-139.84 156.608-128-102.4-180.16 201.792 47.744 42.624 139.84-156.608zM816 352a48 48 0 1 0-96 0 48 48 0 0 0 96 0z"
    }, null, -1);
    var _hoisted_3267 = [
      _hoisted_2268
    ];
    function _sfc_render268(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue268.openBlock)(), (0, import_vue268.createElementBlock)("svg", _hoisted_1268, _hoisted_3267);
    }
    var trend_charts_default = export_helper_default(_sfc_main268, [["render", _sfc_render268], ["__file", "trend-charts.vue"]]);
    var import_vue269 = require_vue();
    var _sfc_main269 = {
      name: "TrophyBase"
    };
    var _hoisted_1269 = {
      version: "1.1",
      id: "\u56FE\u5C42_1",
      xmlns: "http://www.w3.org/2000/svg",
      x: "0",
      y: "0",
      viewBox: "0 0 1024 1024",
      style: { "enable-background": "new 0 0 1024 1024" },
      "xml:space": "preserve"
    };
    var _hoisted_2269 = (0, import_vue269.createElementVNode)("path", {
      d: "M918.4 201.6c-6.4-6.4-12.8-9.6-22.4-9.6H768V96c0-9.6-3.2-16-9.6-22.4C752 67.2 745.6 64 736 64H288c-9.6 0-16 3.2-22.4 9.6C259.2 80 256 86.4 256 96v96H128c-9.6 0-16 3.2-22.4 9.6-6.4 6.4-9.6 16-9.6 22.4 3.2 108.8 25.6 185.6 64 224 34.4 34.4 77.56 55.65 127.65 61.99 10.91 20.44 24.78 39.25 41.95 56.41 40.86 40.86 91 65.47 150.4 71.9V768h-96c-9.6 0-16 3.2-22.4 9.6-6.4 6.4-9.6 12.8-9.6 22.4s3.2 16 9.6 22.4c6.4 6.4 12.8 9.6 22.4 9.6h256c9.6 0 16-3.2 22.4-9.6 6.4-6.4 9.6-12.8 9.6-22.4s-3.2-16-9.6-22.4c-6.4-6.4-12.8-9.6-22.4-9.6h-96V637.26c59.4-7.71 109.54-30.01 150.4-70.86 17.2-17.2 31.51-36.06 42.81-56.55 48.93-6.51 90.02-27.7 126.79-61.85 38.4-38.4 60.8-112 64-224 0-6.4-3.2-16-9.6-22.4zM256 438.4c-19.2-6.4-35.2-19.2-51.2-35.2-22.4-22.4-35.2-70.4-41.6-147.2H256v182.4zm390.4 80C608 553.6 566.4 576 512 576s-99.2-19.2-134.4-57.6C342.4 480 320 438.4 320 384V128h384v256c0 54.4-19.2 99.2-57.6 134.4zm172.8-115.2c-16 16-32 25.6-51.2 35.2V256h92.8c-6.4 76.8-19.2 124.8-41.6 147.2zM768 896H256c-9.6 0-16 3.2-22.4 9.6-6.4 6.4-9.6 12.8-9.6 22.4s3.2 16 9.6 22.4c6.4 6.4 12.8 9.6 22.4 9.6h512c9.6 0 16-3.2 22.4-9.6 6.4-6.4 9.6-12.8 9.6-22.4s-3.2-16-9.6-22.4c-6.4-6.4-12.8-9.6-22.4-9.6z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_3268 = [
      _hoisted_2269
    ];
    function _sfc_render269(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue269.openBlock)(), (0, import_vue269.createElementBlock)("svg", _hoisted_1269, _hoisted_3268);
    }
    var trophy_base_default = export_helper_default(_sfc_main269, [["render", _sfc_render269], ["__file", "trophy-base.vue"]]);
    var import_vue270 = require_vue();
    var _sfc_main270 = {
      name: "Trophy"
    };
    var _hoisted_1270 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2270 = (0, import_vue270.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 896V702.08A256.256 256.256 0 0 1 264.064 512h-32.64a96 96 0 0 1-91.968-68.416L93.632 290.88a76.8 76.8 0 0 1 73.6-98.88H256V96a32 32 0 0 1 32-32h448a32 32 0 0 1 32 32v96h88.768a76.8 76.8 0 0 1 73.6 98.88L884.48 443.52A96 96 0 0 1 792.576 512h-32.64A256.256 256.256 0 0 1 544 702.08V896h128a32 32 0 1 1 0 64H352a32 32 0 1 1 0-64h128zm224-448V128H320v320a192 192 0 1 0 384 0zm64 0h24.576a32 32 0 0 0 30.656-22.784l45.824-152.768A12.8 12.8 0 0 0 856.768 256H768v192zm-512 0V256h-88.768a12.8 12.8 0 0 0-12.288 16.448l45.824 152.768A32 32 0 0 0 231.424 448H256z"
    }, null, -1);
    var _hoisted_3269 = [
      _hoisted_2270
    ];
    function _sfc_render270(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue270.openBlock)(), (0, import_vue270.createElementBlock)("svg", _hoisted_1270, _hoisted_3269);
    }
    var trophy_default = export_helper_default(_sfc_main270, [["render", _sfc_render270], ["__file", "trophy.vue"]]);
    var import_vue271 = require_vue();
    var _sfc_main271 = {
      name: "TurnOff"
    };
    var _hoisted_1271 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2271 = (0, import_vue271.createElementVNode)("path", {
      fill: "currentColor",
      d: "M329.956 257.138a254.862 254.862 0 0 0 0 509.724h364.088a254.862 254.862 0 0 0 0-509.724H329.956zm0-72.818h364.088a327.68 327.68 0 1 1 0 655.36H329.956a327.68 327.68 0 1 1 0-655.36z"
    }, null, -1);
    var _hoisted_3270 = (0, import_vue271.createElementVNode)("path", {
      fill: "currentColor",
      d: "M329.956 621.227a109.227 109.227 0 1 0 0-218.454 109.227 109.227 0 0 0 0 218.454zm0 72.817a182.044 182.044 0 1 1 0-364.088 182.044 182.044 0 0 1 0 364.088z"
    }, null, -1);
    var _hoisted_483 = [
      _hoisted_2271,
      _hoisted_3270
    ];
    function _sfc_render271(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue271.openBlock)(), (0, import_vue271.createElementBlock)("svg", _hoisted_1271, _hoisted_483);
    }
    var turn_off_default = export_helper_default(_sfc_main271, [["render", _sfc_render271], ["__file", "turn-off.vue"]]);
    var import_vue272 = require_vue();
    var _sfc_main272 = {
      name: "Umbrella"
    };
    var _hoisted_1272 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2272 = (0, import_vue272.createElementVNode)("path", {
      fill: "currentColor",
      d: "M320 768a32 32 0 1 1 64 0 64 64 0 0 0 128 0V512H64a448 448 0 1 1 896 0H576v256a128 128 0 1 1-256 0zm570.688-320a384.128 384.128 0 0 0-757.376 0h757.376z"
    }, null, -1);
    var _hoisted_3271 = [
      _hoisted_2272
    ];
    function _sfc_render272(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue272.openBlock)(), (0, import_vue272.createElementBlock)("svg", _hoisted_1272, _hoisted_3271);
    }
    var umbrella_default = export_helper_default(_sfc_main272, [["render", _sfc_render272], ["__file", "umbrella.vue"]]);
    var import_vue273 = require_vue();
    var _sfc_main273 = {
      name: "Unlock"
    };
    var _hoisted_1273 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2273 = (0, import_vue273.createElementVNode)("path", {
      fill: "currentColor",
      d: "M224 448a32 32 0 0 0-32 32v384a32 32 0 0 0 32 32h576a32 32 0 0 0 32-32V480a32 32 0 0 0-32-32H224zm0-64h576a96 96 0 0 1 96 96v384a96 96 0 0 1-96 96H224a96 96 0 0 1-96-96V480a96 96 0 0 1 96-96z"
    }, null, -1);
    var _hoisted_3272 = (0, import_vue273.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 544a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V576a32 32 0 0 1 32-32zm178.304-295.296A192.064 192.064 0 0 0 320 320v64h352l96 38.4V448H256V320a256 256 0 0 1 493.76-95.104l-59.456 23.808z"
    }, null, -1);
    var _hoisted_484 = [
      _hoisted_2273,
      _hoisted_3272
    ];
    function _sfc_render273(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue273.openBlock)(), (0, import_vue273.createElementBlock)("svg", _hoisted_1273, _hoisted_484);
    }
    var unlock_default = export_helper_default(_sfc_main273, [["render", _sfc_render273], ["__file", "unlock.vue"]]);
    var import_vue274 = require_vue();
    var _sfc_main274 = {
      name: "UploadFilled"
    };
    var _hoisted_1274 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2274 = (0, import_vue274.createElementVNode)("path", {
      fill: "currentColor",
      d: "M544 864V672h128L512 480 352 672h128v192H320v-1.6c-5.376.32-10.496 1.6-16 1.6A240 240 0 0 1 64 624c0-123.136 93.12-223.488 212.608-237.248A239.808 239.808 0 0 1 512 192a239.872 239.872 0 0 1 235.456 194.752c119.488 13.76 212.48 114.112 212.48 237.248a240 240 0 0 1-240 240c-5.376 0-10.56-1.28-16-1.6v1.6H544z"
    }, null, -1);
    var _hoisted_3273 = [
      _hoisted_2274
    ];
    function _sfc_render274(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue274.openBlock)(), (0, import_vue274.createElementBlock)("svg", _hoisted_1274, _hoisted_3273);
    }
    var upload_filled_default = export_helper_default(_sfc_main274, [["render", _sfc_render274], ["__file", "upload-filled.vue"]]);
    var import_vue275 = require_vue();
    var _sfc_main275 = {
      name: "Upload"
    };
    var _hoisted_1275 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2275 = (0, import_vue275.createElementVNode)("path", {
      fill: "currentColor",
      d: "M160 832h704a32 32 0 1 1 0 64H160a32 32 0 1 1 0-64zm384-578.304V704h-64V247.296L237.248 490.048 192 444.8 508.8 128l316.8 316.8-45.312 45.248L544 253.696z"
    }, null, -1);
    var _hoisted_3274 = [
      _hoisted_2275
    ];
    function _sfc_render275(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue275.openBlock)(), (0, import_vue275.createElementBlock)("svg", _hoisted_1275, _hoisted_3274);
    }
    var upload_default = export_helper_default(_sfc_main275, [["render", _sfc_render275], ["__file", "upload.vue"]]);
    var import_vue276 = require_vue();
    var _sfc_main276 = {
      name: "UserFilled"
    };
    var _hoisted_1276 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2276 = (0, import_vue276.createElementVNode)("path", {
      fill: "currentColor",
      d: "M288 320a224 224 0 1 0 448 0 224 224 0 1 0-448 0zm544 608H160a32 32 0 0 1-32-32v-96a160 160 0 0 1 160-160h448a160 160 0 0 1 160 160v96a32 32 0 0 1-32 32z"
    }, null, -1);
    var _hoisted_3275 = [
      _hoisted_2276
    ];
    function _sfc_render276(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue276.openBlock)(), (0, import_vue276.createElementBlock)("svg", _hoisted_1276, _hoisted_3275);
    }
    var user_filled_default = export_helper_default(_sfc_main276, [["render", _sfc_render276], ["__file", "user-filled.vue"]]);
    var import_vue277 = require_vue();
    var _sfc_main277 = {
      name: "User"
    };
    var _hoisted_1277 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2277 = (0, import_vue277.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 512a192 192 0 1 0 0-384 192 192 0 0 0 0 384zm0 64a256 256 0 1 1 0-512 256 256 0 0 1 0 512zm320 320v-96a96 96 0 0 0-96-96H288a96 96 0 0 0-96 96v96a32 32 0 1 1-64 0v-96a160 160 0 0 1 160-160h448a160 160 0 0 1 160 160v96a32 32 0 1 1-64 0z"
    }, null, -1);
    var _hoisted_3276 = [
      _hoisted_2277
    ];
    function _sfc_render277(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue277.openBlock)(), (0, import_vue277.createElementBlock)("svg", _hoisted_1277, _hoisted_3276);
    }
    var user_default = export_helper_default(_sfc_main277, [["render", _sfc_render277], ["__file", "user.vue"]]);
    var import_vue278 = require_vue();
    var _sfc_main278 = {
      name: "Van"
    };
    var _hoisted_1278 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2278 = (0, import_vue278.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128.896 736H96a32 32 0 0 1-32-32V224a32 32 0 0 1 32-32h576a32 32 0 0 1 32 32v96h164.544a32 32 0 0 1 31.616 27.136l54.144 352A32 32 0 0 1 922.688 736h-91.52a144 144 0 1 1-286.272 0H415.104a144 144 0 1 1-286.272 0zm23.36-64a143.872 143.872 0 0 1 239.488 0H568.32c17.088-25.6 42.24-45.376 71.744-55.808V256H128v416h24.256zm655.488 0h77.632l-19.648-128H704v64.896A144 144 0 0 1 807.744 672zm48.128-192-14.72-96H704v96h151.872zM688 832a80 80 0 1 0 0-160 80 80 0 0 0 0 160zm-416 0a80 80 0 1 0 0-160 80 80 0 0 0 0 160z"
    }, null, -1);
    var _hoisted_3277 = [
      _hoisted_2278
    ];
    function _sfc_render278(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue278.openBlock)(), (0, import_vue278.createElementBlock)("svg", _hoisted_1278, _hoisted_3277);
    }
    var van_default = export_helper_default(_sfc_main278, [["render", _sfc_render278], ["__file", "van.vue"]]);
    var import_vue279 = require_vue();
    var _sfc_main279 = {
      name: "VideoCameraFilled"
    };
    var _hoisted_1279 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2279 = (0, import_vue279.createElementVNode)("path", {
      fill: "currentColor",
      d: "m768 576 192-64v320l-192-64v96a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V480a32 32 0 0 1 32-32h640a32 32 0 0 1 32 32v96zM192 768v64h384v-64H192zm192-480a160 160 0 0 1 320 0 160 160 0 0 1-320 0zm64 0a96 96 0 1 0 192.064-.064A96 96 0 0 0 448 288zm-320 32a128 128 0 1 1 256.064.064A128 128 0 0 1 128 320zm64 0a64 64 0 1 0 128 0 64 64 0 0 0-128 0z"
    }, null, -1);
    var _hoisted_3278 = [
      _hoisted_2279
    ];
    function _sfc_render279(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue279.openBlock)(), (0, import_vue279.createElementBlock)("svg", _hoisted_1279, _hoisted_3278);
    }
    var video_camera_filled_default = export_helper_default(_sfc_main279, [["render", _sfc_render279], ["__file", "video-camera-filled.vue"]]);
    var import_vue280 = require_vue();
    var _sfc_main280 = {
      name: "VideoCamera"
    };
    var _hoisted_1280 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2280 = (0, import_vue280.createElementVNode)("path", {
      fill: "currentColor",
      d: "M704 768V256H128v512h576zm64-416 192-96v512l-192-96v128a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V224a32 32 0 0 1 32-32h640a32 32 0 0 1 32 32v128zm0 71.552v176.896l128 64V359.552l-128 64zM192 320h192v64H192v-64z"
    }, null, -1);
    var _hoisted_3279 = [
      _hoisted_2280
    ];
    function _sfc_render280(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue280.openBlock)(), (0, import_vue280.createElementBlock)("svg", _hoisted_1280, _hoisted_3279);
    }
    var video_camera_default = export_helper_default(_sfc_main280, [["render", _sfc_render280], ["__file", "video-camera.vue"]]);
    var import_vue281 = require_vue();
    var _sfc_main281 = {
      name: "VideoPause"
    };
    var _hoisted_1281 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2281 = (0, import_vue281.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm0 832a384 384 0 0 0 0-768 384 384 0 0 0 0 768zm-96-544q32 0 32 32v256q0 32-32 32t-32-32V384q0-32 32-32zm192 0q32 0 32 32v256q0 32-32 32t-32-32V384q0-32 32-32z"
    }, null, -1);
    var _hoisted_3280 = [
      _hoisted_2281
    ];
    function _sfc_render281(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue281.openBlock)(), (0, import_vue281.createElementBlock)("svg", _hoisted_1281, _hoisted_3280);
    }
    var video_pause_default = export_helper_default(_sfc_main281, [["render", _sfc_render281], ["__file", "video-pause.vue"]]);
    var import_vue282 = require_vue();
    var _sfc_main282 = {
      name: "VideoPlay"
    };
    var _hoisted_1282 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2282 = (0, import_vue282.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm0 832a384 384 0 0 0 0-768 384 384 0 0 0 0 768zm-48-247.616L668.608 512 464 375.616v272.768zm10.624-342.656 249.472 166.336a48 48 0 0 1 0 79.872L474.624 718.272A48 48 0 0 1 400 678.336V345.6a48 48 0 0 1 74.624-39.936z"
    }, null, -1);
    var _hoisted_3281 = [
      _hoisted_2282
    ];
    function _sfc_render282(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue282.openBlock)(), (0, import_vue282.createElementBlock)("svg", _hoisted_1282, _hoisted_3281);
    }
    var video_play_default = export_helper_default(_sfc_main282, [["render", _sfc_render282], ["__file", "video-play.vue"]]);
    var import_vue283 = require_vue();
    var _sfc_main283 = {
      name: "View"
    };
    var _hoisted_1283 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2283 = (0, import_vue283.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 160c320 0 512 352 512 352S832 864 512 864 0 512 0 512s192-352 512-352zm0 64c-225.28 0-384.128 208.064-436.8 288 52.608 79.872 211.456 288 436.8 288 225.28 0 384.128-208.064 436.8-288-52.608-79.872-211.456-288-436.8-288zm0 64a224 224 0 1 1 0 448 224 224 0 0 1 0-448zm0 64a160.192 160.192 0 0 0-160 160c0 88.192 71.744 160 160 160s160-71.808 160-160-71.744-160-160-160z"
    }, null, -1);
    var _hoisted_3282 = [
      _hoisted_2283
    ];
    function _sfc_render283(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue283.openBlock)(), (0, import_vue283.createElementBlock)("svg", _hoisted_1283, _hoisted_3282);
    }
    var view_default = export_helper_default(_sfc_main283, [["render", _sfc_render283], ["__file", "view.vue"]]);
    var import_vue284 = require_vue();
    var _sfc_main284 = {
      name: "WalletFilled"
    };
    var _hoisted_1284 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2284 = (0, import_vue284.createElementVNode)("path", {
      fill: "currentColor",
      d: "M688 512a112 112 0 1 0 0 224h208v160H128V352h768v160H688zm32 160h-32a48 48 0 0 1 0-96h32a48 48 0 0 1 0 96zm-80-544 128 160H384l256-160z"
    }, null, -1);
    var _hoisted_3283 = [
      _hoisted_2284
    ];
    function _sfc_render284(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue284.openBlock)(), (0, import_vue284.createElementBlock)("svg", _hoisted_1284, _hoisted_3283);
    }
    var wallet_filled_default = export_helper_default(_sfc_main284, [["render", _sfc_render284], ["__file", "wallet-filled.vue"]]);
    var import_vue285 = require_vue();
    var _sfc_main285 = {
      name: "Wallet"
    };
    var _hoisted_1285 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2285 = (0, import_vue285.createElementVNode)("path", {
      fill: "currentColor",
      d: "M640 288h-64V128H128v704h384v32a32 32 0 0 0 32 32H96a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32h512a32 32 0 0 1 32 32v192z"
    }, null, -1);
    var _hoisted_3284 = (0, import_vue285.createElementVNode)("path", {
      fill: "currentColor",
      d: "M128 320v512h768V320H128zm-32-64h832a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V288a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_485 = (0, import_vue285.createElementVNode)("path", {
      fill: "currentColor",
      d: "M704 640a64 64 0 1 1 0-128 64 64 0 0 1 0 128z"
    }, null, -1);
    var _hoisted_523 = [
      _hoisted_2285,
      _hoisted_3284,
      _hoisted_485
    ];
    function _sfc_render285(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue285.openBlock)(), (0, import_vue285.createElementBlock)("svg", _hoisted_1285, _hoisted_523);
    }
    var wallet_default = export_helper_default(_sfc_main285, [["render", _sfc_render285], ["__file", "wallet.vue"]]);
    var import_vue286 = require_vue();
    var _sfc_main286 = {
      name: "WarnTriangleFilled"
    };
    var _hoisted_1286 = {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      style: { "enable-background": "new 0 0 1024 1024" },
      "xml:space": "preserve"
    };
    var _hoisted_2286 = (0, import_vue286.createElementVNode)("path", {
      d: "M928.99 755.83 574.6 203.25c-12.89-20.16-36.76-32.58-62.6-32.58s-49.71 12.43-62.6 32.58L95.01 755.83c-12.91 20.12-12.9 44.91.01 65.03 12.92 20.12 36.78 32.51 62.59 32.49h708.78c25.82.01 49.68-12.37 62.59-32.49 12.91-20.12 12.92-44.91.01-65.03zM554.67 768h-85.33v-85.33h85.33V768zm0-426.67v298.66h-85.33V341.32l85.33.01z",
      fill: "currentColor"
    }, null, -1);
    var _hoisted_3285 = [
      _hoisted_2286
    ];
    function _sfc_render286(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue286.openBlock)(), (0, import_vue286.createElementBlock)("svg", _hoisted_1286, _hoisted_3285);
    }
    var warn_triangle_filled_default = export_helper_default(_sfc_main286, [["render", _sfc_render286], ["__file", "warn-triangle-filled.vue"]]);
    var import_vue287 = require_vue();
    var _sfc_main287 = {
      name: "WarningFilled"
    };
    var _hoisted_1287 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2287 = (0, import_vue287.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm0 192a58.432 58.432 0 0 0-58.24 63.744l23.36 256.384a35.072 35.072 0 0 0 69.76 0l23.296-256.384A58.432 58.432 0 0 0 512 256zm0 512a51.2 51.2 0 1 0 0-102.4 51.2 51.2 0 0 0 0 102.4z"
    }, null, -1);
    var _hoisted_3286 = [
      _hoisted_2287
    ];
    function _sfc_render287(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue287.openBlock)(), (0, import_vue287.createElementBlock)("svg", _hoisted_1287, _hoisted_3286);
    }
    var warning_filled_default = export_helper_default(_sfc_main287, [["render", _sfc_render287], ["__file", "warning-filled.vue"]]);
    var import_vue288 = require_vue();
    var _sfc_main288 = {
      name: "Warning"
    };
    var _hoisted_1288 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2288 = (0, import_vue288.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm0 832a384 384 0 0 0 0-768 384 384 0 0 0 0 768zm48-176a48 48 0 1 1-96 0 48 48 0 0 1 96 0zm-48-464a32 32 0 0 1 32 32v288a32 32 0 0 1-64 0V288a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_3287 = [
      _hoisted_2288
    ];
    function _sfc_render288(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue288.openBlock)(), (0, import_vue288.createElementBlock)("svg", _hoisted_1288, _hoisted_3287);
    }
    var warning_default = export_helper_default(_sfc_main288, [["render", _sfc_render288], ["__file", "warning.vue"]]);
    var import_vue289 = require_vue();
    var _sfc_main289 = {
      name: "Watch"
    };
    var _hoisted_1289 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2289 = (0, import_vue289.createElementVNode)("path", {
      fill: "currentColor",
      d: "M512 768a256 256 0 1 0 0-512 256 256 0 0 0 0 512zm0 64a320 320 0 1 1 0-640 320 320 0 0 1 0 640z"
    }, null, -1);
    var _hoisted_3288 = (0, import_vue289.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 352a32 32 0 0 1 32 32v160a32 32 0 0 1-64 0V384a32 32 0 0 1 32-32z"
    }, null, -1);
    var _hoisted_486 = (0, import_vue289.createElementVNode)("path", {
      fill: "currentColor",
      d: "M480 512h128q32 0 32 32t-32 32H480q-32 0-32-32t32-32zm128-256V128H416v128h-64V64h320v192h-64zM416 768v128h192V768h64v192H352V768h64z"
    }, null, -1);
    var _hoisted_524 = [
      _hoisted_2289,
      _hoisted_3288,
      _hoisted_486
    ];
    function _sfc_render289(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue289.openBlock)(), (0, import_vue289.createElementBlock)("svg", _hoisted_1289, _hoisted_524);
    }
    var watch_default = export_helper_default(_sfc_main289, [["render", _sfc_render289], ["__file", "watch.vue"]]);
    var import_vue290 = require_vue();
    var _sfc_main290 = {
      name: "Watermelon"
    };
    var _hoisted_1290 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2290 = (0, import_vue290.createElementVNode)("path", {
      fill: "currentColor",
      d: "m683.072 600.32-43.648 162.816-61.824-16.512 53.248-198.528L576 493.248l-158.4 158.4-45.248-45.248 158.4-158.4-55.616-55.616-198.528 53.248-16.512-61.824 162.816-43.648L282.752 200A384 384 0 0 0 824 741.248L683.072 600.32zm231.552 141.056a448 448 0 1 1-632-632l632 632z"
    }, null, -1);
    var _hoisted_3289 = [
      _hoisted_2290
    ];
    function _sfc_render290(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue290.openBlock)(), (0, import_vue290.createElementBlock)("svg", _hoisted_1290, _hoisted_3289);
    }
    var watermelon_default = export_helper_default(_sfc_main290, [["render", _sfc_render290], ["__file", "watermelon.vue"]]);
    var import_vue291 = require_vue();
    var _sfc_main291 = {
      name: "WindPower"
    };
    var _hoisted_1291 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2291 = (0, import_vue291.createElementVNode)("path", {
      fill: "currentColor",
      d: "M160 64q32 0 32 32v832q0 32-32 32t-32-32V96q0-32 32-32zm416 354.624 128-11.584V168.96l-128-11.52v261.12zm-64 5.824V151.552L320 134.08V160h-64V64l616.704 56.064A96 96 0 0 1 960 215.68v144.64a96 96 0 0 1-87.296 95.616L256 512V224h64v217.92l192-17.472zm256-23.232 98.88-8.96A32 32 0 0 0 896 360.32V215.68a32 32 0 0 0-29.12-31.872l-98.88-8.96v226.368z"
    }, null, -1);
    var _hoisted_3290 = [
      _hoisted_2291
    ];
    function _sfc_render291(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue291.openBlock)(), (0, import_vue291.createElementBlock)("svg", _hoisted_1291, _hoisted_3290);
    }
    var wind_power_default = export_helper_default(_sfc_main291, [["render", _sfc_render291], ["__file", "wind-power.vue"]]);
    var import_vue292 = require_vue();
    var _sfc_main292 = {
      name: "ZoomIn"
    };
    var _hoisted_1292 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2292 = (0, import_vue292.createElementVNode)("path", {
      fill: "currentColor",
      d: "m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704zm-32-384v-96a32 32 0 0 1 64 0v96h96a32 32 0 0 1 0 64h-96v96a32 32 0 0 1-64 0v-96h-96a32 32 0 0 1 0-64h96z"
    }, null, -1);
    var _hoisted_3291 = [
      _hoisted_2292
    ];
    function _sfc_render292(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue292.openBlock)(), (0, import_vue292.createElementBlock)("svg", _hoisted_1292, _hoisted_3291);
    }
    var zoom_in_default = export_helper_default(_sfc_main292, [["render", _sfc_render292], ["__file", "zoom-in.vue"]]);
    var import_vue293 = require_vue();
    var _sfc_main293 = {
      name: "ZoomOut"
    };
    var _hoisted_1293 = {
      viewBox: "0 0 1024 1024",
      xmlns: "http://www.w3.org/2000/svg"
    };
    var _hoisted_2293 = (0, import_vue293.createElementVNode)("path", {
      fill: "currentColor",
      d: "m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704zM352 448h256a32 32 0 0 1 0 64H352a32 32 0 0 1 0-64z"
    }, null, -1);
    var _hoisted_3292 = [
      _hoisted_2293
    ];
    function _sfc_render293(_ctx, _cache, $props, $setup, $data, $options) {
      return (0, import_vue293.openBlock)(), (0, import_vue293.createElementBlock)("svg", _hoisted_1293, _hoisted_3292);
    }
    var zoom_out_default = export_helper_default(_sfc_main293, [["render", _sfc_render293], ["__file", "zoom-out.vue"]]);
  }
});

// node_modules/element-plus/lib/utils/vue/props/util.js
var require_util = __commonJS({
  "node_modules/element-plus/lib/utils/vue/props/util.js"() {
    "use strict";
  }
});

// node_modules/element-plus/lib/utils/vue/props/types.js
var require_types2 = __commonJS({
  "node_modules/element-plus/lib/utils/vue/props/types.js"() {
    "use strict";
  }
});

// node_modules/element-plus/lib/utils/vue/props/index.js
var require_props = __commonJS({
  "node_modules/element-plus/lib/utils/vue/props/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    require_util();
    require_types2();
    var runtime = require_runtime();
    exports.buildProp = runtime.buildProp;
    exports.buildProps = runtime.buildProps;
    exports.definePropType = runtime.definePropType;
    exports.epPropKey = runtime.epPropKey;
    exports.isEpProp = runtime.isEpProp;
  }
});

// node_modules/element-plus/lib/utils/vue/icon.js
var require_icon = __commonJS({
  "node_modules/element-plus/lib/utils/vue/icon.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var iconsVue = require_dist();
    require_props();
    var runtime = require_runtime();
    var iconPropType = runtime.definePropType([
      String,
      Object,
      Function
    ]);
    var CloseComponents = {
      Close: iconsVue.Close
    };
    var TypeComponents = {
      Close: iconsVue.Close,
      SuccessFilled: iconsVue.SuccessFilled,
      InfoFilled: iconsVue.InfoFilled,
      WarningFilled: iconsVue.WarningFilled,
      CircleCloseFilled: iconsVue.CircleCloseFilled
    };
    var TypeComponentsMap = {
      success: iconsVue.SuccessFilled,
      warning: iconsVue.WarningFilled,
      error: iconsVue.CircleCloseFilled,
      info: iconsVue.InfoFilled
    };
    var ValidateComponentsMap = {
      validating: iconsVue.Loading,
      success: iconsVue.CircleCheck,
      error: iconsVue.CircleClose
    };
    exports.CloseComponents = CloseComponents;
    exports.TypeComponents = TypeComponents;
    exports.TypeComponentsMap = TypeComponentsMap;
    exports.ValidateComponentsMap = ValidateComponentsMap;
    exports.iconPropType = iconPropType;
  }
});

// node_modules/element-plus/lib/utils/vue/install.js
var require_install = __commonJS({
  "node_modules/element-plus/lib/utils/vue/install.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    var withInstall = (main, extra) => {
      ;
      main.install = (app) => {
        for (const comp of [main, ...Object.values(extra != null ? extra : {})]) {
          app.component(comp.name, comp);
        }
      };
      if (extra) {
        for (const [key, comp] of Object.entries(extra)) {
          ;
          main[key] = comp;
        }
      }
      return main;
    };
    var withInstallFunction = (fn, name) => {
      ;
      fn.install = (app) => {
        ;
        fn._context = app._context;
        app.config.globalProperties[name] = fn;
      };
      return fn;
    };
    var withInstallDirective = (directive, name) => {
      ;
      directive.install = (app) => {
        app.directive(name, directive);
      };
      return directive;
    };
    var withNoopInstall = (component) => {
      ;
      component.install = shared.NOOP;
      return component;
    };
    exports.withInstall = withInstall;
    exports.withInstallDirective = withInstallDirective;
    exports.withInstallFunction = withInstallFunction;
    exports.withNoopInstall = withNoopInstall;
  }
});

// node_modules/element-plus/lib/utils/vue/refs.js
var require_refs = __commonJS({
  "node_modules/element-plus/lib/utils/vue/refs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    require_types();
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    var composeRefs = (...refs) => {
      return (el) => {
        refs.forEach((ref) => {
          if (shared.isFunction(ref)) {
            ref(el);
          } else {
            ref.value = el;
          }
        });
      };
    };
    exports.composeRefs = composeRefs;
  }
});

// node_modules/element-plus/lib/utils/vue/size.js
var require_size2 = __commonJS({
  "node_modules/element-plus/lib/utils/vue/size.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    require_constants();
    var size = require_size();
    var getComponentSize = (size$1) => {
      return size.componentSizeMap[size$1 || "default"];
    };
    exports.getComponentSize = getComponentSize;
  }
});

// node_modules/element-plus/lib/utils/vue/typescript.js
var require_typescript = __commonJS({
  "node_modules/element-plus/lib/utils/vue/typescript.js"() {
    "use strict";
  }
});

// node_modules/element-plus/lib/utils/vue/validator.js
var require_validator = __commonJS({
  "node_modules/element-plus/lib/utils/vue/validator.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    require_constants();
    var size = require_size();
    var date = require_date();
    var isValidComponentSize = (val) => ["", ...size.componentSizes].includes(val);
    var isValidDatePickType = (val) => [...date.datePickTypes].includes(val);
    exports.isValidComponentSize = isValidComponentSize;
    exports.isValidDatePickType = isValidDatePickType;
  }
});

// node_modules/element-plus/lib/utils/vue/vnode.js
var require_vnode = __commonJS({
  "node_modules/element-plus/lib/utils/vue/vnode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var vue = require_vue();
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    require_objects();
    var error = require_error();
    var SCOPE = "utils/vue/vnode";
    var PatchFlags = ((PatchFlags2) => {
      PatchFlags2[PatchFlags2["TEXT"] = 1] = "TEXT";
      PatchFlags2[PatchFlags2["CLASS"] = 2] = "CLASS";
      PatchFlags2[PatchFlags2["STYLE"] = 4] = "STYLE";
      PatchFlags2[PatchFlags2["PROPS"] = 8] = "PROPS";
      PatchFlags2[PatchFlags2["FULL_PROPS"] = 16] = "FULL_PROPS";
      PatchFlags2[PatchFlags2["HYDRATE_EVENTS"] = 32] = "HYDRATE_EVENTS";
      PatchFlags2[PatchFlags2["STABLE_FRAGMENT"] = 64] = "STABLE_FRAGMENT";
      PatchFlags2[PatchFlags2["KEYED_FRAGMENT"] = 128] = "KEYED_FRAGMENT";
      PatchFlags2[PatchFlags2["UNKEYED_FRAGMENT"] = 256] = "UNKEYED_FRAGMENT";
      PatchFlags2[PatchFlags2["NEED_PATCH"] = 512] = "NEED_PATCH";
      PatchFlags2[PatchFlags2["DYNAMIC_SLOTS"] = 1024] = "DYNAMIC_SLOTS";
      PatchFlags2[PatchFlags2["HOISTED"] = -1] = "HOISTED";
      PatchFlags2[PatchFlags2["BAIL"] = -2] = "BAIL";
      return PatchFlags2;
    })(PatchFlags || {});
    function isFragment(node) {
      return vue.isVNode(node) && node.type === vue.Fragment;
    }
    function isText2(node) {
      return vue.isVNode(node) && node.type === vue.Text;
    }
    function isComment(node) {
      return vue.isVNode(node) && node.type === vue.Comment;
    }
    var TEMPLATE = "template";
    function isTemplate(node) {
      return vue.isVNode(node) && node.type === TEMPLATE;
    }
    function isValidElementNode(node) {
      return vue.isVNode(node) && !isFragment(node) && !isComment(node);
    }
    function getChildren(node, depth) {
      if (isComment(node))
        return;
      if (isFragment(node) || isTemplate(node)) {
        return depth > 0 ? getFirstValidNode(node.children, depth - 1) : void 0;
      }
      return node;
    }
    var getFirstValidNode = (nodes, maxDepth = 3) => {
      if (Array.isArray(nodes)) {
        return getChildren(nodes[0], maxDepth);
      } else {
        return getChildren(nodes, maxDepth);
      }
    };
    function renderIf(condition, ...args) {
      return condition ? renderBlock(...args) : vue.createCommentVNode("v-if", true);
    }
    function renderBlock(...args) {
      return vue.openBlock(), vue.createBlock(...args);
    }
    var getNormalizedProps = (node) => {
      if (!vue.isVNode(node)) {
        error.debugWarn(SCOPE, "[getNormalizedProps] must be a VNode");
        return {};
      }
      const raw = node.props || {};
      const type = (vue.isVNode(node.type) ? node.type.props : void 0) || {};
      const props = {};
      Object.keys(type).forEach((key) => {
        if (shared.hasOwn(type[key], "default")) {
          props[key] = type[key].default;
        }
      });
      Object.keys(raw).forEach((key) => {
        props[shared.camelize(key)] = raw[key];
      });
      return props;
    };
    var ensureOnlyChild = (children) => {
      if (!shared.isArray(children) || children.length > 1) {
        throw new Error("expect to receive a single Vue element child");
      }
      return children[0];
    };
    var flattedChildren = (children) => {
      const vNodes = shared.isArray(children) ? children : [children];
      const result = [];
      vNodes.forEach((child) => {
        if (shared.isArray(child.children)) {
          result.push(...flattedChildren(child.children));
        } else {
          result.push(child);
        }
      });
      return result;
    };
    exports.PatchFlags = PatchFlags;
    exports.ensureOnlyChild = ensureOnlyChild;
    exports.flattedChildren = flattedChildren;
    exports.getFirstValidNode = getFirstValidNode;
    exports.getNormalizedProps = getNormalizedProps;
    exports.isComment = isComment;
    exports.isFragment = isFragment;
    exports.isTemplate = isTemplate;
    exports.isText = isText2;
    exports.isValidElementNode = isValidElementNode;
    exports.renderBlock = renderBlock;
    exports.renderIf = renderIf;
  }
});

// node_modules/element-plus/lib/utils/vue/index.js
var require_vue2 = __commonJS({
  "node_modules/element-plus/lib/utils/vue/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var globalNode = require_global_node();
    var icon = require_icon();
    var install = require_install();
    require_props();
    var refs = require_refs();
    var size = require_size2();
    require_typescript();
    var validator = require_validator();
    var vnode = require_vnode();
    var runtime = require_runtime();
    exports.changeGlobalNodesTarget = globalNode.changeGlobalNodesTarget;
    exports.createGlobalNode = globalNode.createGlobalNode;
    exports.removeGlobalNode = globalNode.removeGlobalNode;
    exports.CloseComponents = icon.CloseComponents;
    exports.TypeComponents = icon.TypeComponents;
    exports.TypeComponentsMap = icon.TypeComponentsMap;
    exports.ValidateComponentsMap = icon.ValidateComponentsMap;
    exports.iconPropType = icon.iconPropType;
    exports.withInstall = install.withInstall;
    exports.withInstallDirective = install.withInstallDirective;
    exports.withInstallFunction = install.withInstallFunction;
    exports.withNoopInstall = install.withNoopInstall;
    exports.composeRefs = refs.composeRefs;
    exports.getComponentSize = size.getComponentSize;
    exports.isValidComponentSize = validator.isValidComponentSize;
    exports.isValidDatePickType = validator.isValidDatePickType;
    exports.PatchFlags = vnode.PatchFlags;
    exports.ensureOnlyChild = vnode.ensureOnlyChild;
    exports.flattedChildren = vnode.flattedChildren;
    exports.getFirstValidNode = vnode.getFirstValidNode;
    exports.getNormalizedProps = vnode.getNormalizedProps;
    exports.isComment = vnode.isComment;
    exports.isFragment = vnode.isFragment;
    exports.isTemplate = vnode.isTemplate;
    exports.isText = vnode.isText;
    exports.isValidElementNode = vnode.isValidElementNode;
    exports.renderBlock = vnode.renderBlock;
    exports.renderIf = vnode.renderIf;
    exports.buildProp = runtime.buildProp;
    exports.buildProps = runtime.buildProps;
    exports.definePropType = runtime.definePropType;
    exports.epPropKey = runtime.epPropKey;
    exports.isEpProp = runtime.isEpProp;
  }
});

// node_modules/element-plus/lib/utils/animation.js
var require_animation = __commonJS({
  "node_modules/element-plus/lib/utils/animation.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var cubic = (value) => {
      return value ** 3;
    };
    var easeInOutCubic = (value) => value < 0.5 ? cubic(value * 2) / 2 : 1 - cubic((1 - value) * 2) / 2;
    exports.cubic = cubic;
    exports.easeInOutCubic = easeInOutCubic;
  }
});

// node_modules/element-plus/lib/utils/arrays.js
var require_arrays = __commonJS({
  "node_modules/element-plus/lib/utils/arrays.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var lodashUnified = require_require();
    var unique = (arr) => [...new Set(arr)];
    var castArray = (arr) => {
      if (!arr && arr !== 0)
        return [];
      return Array.isArray(arr) ? arr : [arr];
    };
    Object.defineProperty(exports, "ensureArray", {
      enumerable: true,
      get: function() {
        return lodashUnified.castArray;
      }
    });
    exports.castArray = castArray;
    exports.unique = unique;
  }
});

// node_modules/element-plus/lib/utils/browser.js
var require_browser = __commonJS({
  "node_modules/element-plus/lib/utils/browser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var core = require_core();
    var isFirefox = () => core.isClient && /firefox/i.test(window.navigator.userAgent);
    exports.isFirefox = isFirefox;
  }
});

// node_modules/element-plus/lib/utils/functions.js
var require_functions = __commonJS({
  "node_modules/element-plus/lib/utils/functions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    Object.defineProperty(exports, "NOOP", {
      enumerable: true,
      get: function() {
        return shared.NOOP;
      }
    });
  }
});

// node_modules/element-plus/lib/utils/i18n.js
var require_i18n = __commonJS({
  "node_modules/element-plus/lib/utils/i18n.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var isKorean = (text) => /([(\uAC00-\uD7AF)|(\u3130-\u318F)])+/gi.test(text);
    exports.isKorean = isKorean;
  }
});

// node_modules/element-plus/lib/utils/raf.js
var require_raf = __commonJS({
  "node_modules/element-plus/lib/utils/raf.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var core = require_core();
    var rAF = (fn) => core.isClient ? window.requestAnimationFrame(fn) : setTimeout(fn, 16);
    var cAF = (handle) => core.isClient ? window.cancelAnimationFrame(handle) : clearTimeout(handle);
    exports.cAF = cAF;
    exports.rAF = rAF;
  }
});

// node_modules/element-plus/lib/utils/typescript.js
var require_typescript2 = __commonJS({
  "node_modules/element-plus/lib/utils/typescript.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var mutable = (val) => val;
    exports.mutable = mutable;
  }
});

// node_modules/element-plus/lib/utils/index.js
var require_utils = __commonJS({
  "node_modules/element-plus/lib/utils/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    require_dom();
    require_vue2();
    var animation = require_animation();
    var arrays = require_arrays();
    var browser = require_browser();
    var error = require_error();
    require_functions();
    var i18n = require_i18n();
    var objects = require_objects();
    var raf = require_raf();
    var rand = require_rand();
    var strings = require_strings();
    var types = require_types();
    var typescript = require_typescript2();
    var aria = require_aria();
    var event = require_event2();
    var position = require_position();
    var scroll = require_scroll();
    var style = require_style();
    var globalNode = require_global_node();
    var icon = require_icon();
    var install = require_install();
    var runtime = require_runtime();
    var refs = require_refs();
    var size = require_size2();
    var validator = require_validator();
    var vnode = require_vnode();
    var lodashUnified = require_require();
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    var core = require_core();
    var vue = require_vue();
    exports.cubic = animation.cubic;
    exports.easeInOutCubic = animation.easeInOutCubic;
    exports.castArray = arrays.castArray;
    exports.unique = arrays.unique;
    exports.isFirefox = browser.isFirefox;
    exports.debugWarn = error.debugWarn;
    exports.throwError = error.throwError;
    exports.isKorean = i18n.isKorean;
    exports.entriesOf = objects.entriesOf;
    exports.getProp = objects.getProp;
    exports.keysOf = objects.keysOf;
    exports.cAF = raf.cAF;
    exports.rAF = raf.rAF;
    exports.generateId = rand.generateId;
    exports.getRandomInt = rand.getRandomInt;
    exports.capitalize = strings.capitalize;
    exports.escapeStringRegexp = strings.escapeStringRegexp;
    exports.isElement = types.isElement;
    exports.isEmpty = types.isEmpty;
    exports.isPropAbsent = types.isPropAbsent;
    exports.isUndefined = types.isUndefined;
    exports.mutable = typescript.mutable;
    exports.attemptFocus = aria.attemptFocus;
    exports.focusNode = aria.focusNode;
    exports.getSibling = aria.getSibling;
    exports.isFocusable = aria.isFocusable;
    exports.isLeaf = aria.isLeaf;
    exports.isVisible = aria.isVisible;
    exports.obtainAllFocusableElements = aria.obtainAllFocusableElements;
    exports.triggerEvent = aria.triggerEvent;
    exports.composeEventHandlers = event.composeEventHandlers;
    exports.whenMouse = event.whenMouse;
    exports.getClientXY = position.getClientXY;
    exports.getOffsetTop = position.getOffsetTop;
    exports.getOffsetTopDistance = position.getOffsetTopDistance;
    exports.isInContainer = position.isInContainer;
    exports.getScrollBarWidth = scroll.getScrollBarWidth;
    exports.getScrollContainer = scroll.getScrollContainer;
    exports.isScroll = scroll.isScroll;
    exports.scrollIntoView = scroll.scrollIntoView;
    exports.addClass = style.addClass;
    exports.addUnit = style.addUnit;
    exports.classNameToArray = style.classNameToArray;
    exports.getStyle = style.getStyle;
    exports.hasClass = style.hasClass;
    exports.removeClass = style.removeClass;
    exports.removeStyle = style.removeStyle;
    exports.setStyle = style.setStyle;
    exports.changeGlobalNodesTarget = globalNode.changeGlobalNodesTarget;
    exports.createGlobalNode = globalNode.createGlobalNode;
    exports.removeGlobalNode = globalNode.removeGlobalNode;
    exports.CloseComponents = icon.CloseComponents;
    exports.TypeComponents = icon.TypeComponents;
    exports.TypeComponentsMap = icon.TypeComponentsMap;
    exports.ValidateComponentsMap = icon.ValidateComponentsMap;
    exports.iconPropType = icon.iconPropType;
    exports.withInstall = install.withInstall;
    exports.withInstallDirective = install.withInstallDirective;
    exports.withInstallFunction = install.withInstallFunction;
    exports.withNoopInstall = install.withNoopInstall;
    exports.buildProp = runtime.buildProp;
    exports.buildProps = runtime.buildProps;
    exports.definePropType = runtime.definePropType;
    exports.epPropKey = runtime.epPropKey;
    exports.isEpProp = runtime.isEpProp;
    exports.composeRefs = refs.composeRefs;
    exports.getComponentSize = size.getComponentSize;
    exports.isValidComponentSize = validator.isValidComponentSize;
    exports.isValidDatePickType = validator.isValidDatePickType;
    exports.PatchFlags = vnode.PatchFlags;
    exports.ensureOnlyChild = vnode.ensureOnlyChild;
    exports.flattedChildren = vnode.flattedChildren;
    exports.getFirstValidNode = vnode.getFirstValidNode;
    exports.getNormalizedProps = vnode.getNormalizedProps;
    exports.isComment = vnode.isComment;
    exports.isFragment = vnode.isFragment;
    exports.isTemplate = vnode.isTemplate;
    exports.isText = vnode.isText;
    exports.isValidElementNode = vnode.isValidElementNode;
    exports.renderBlock = vnode.renderBlock;
    exports.renderIf = vnode.renderIf;
    Object.defineProperty(exports, "ensureArray", {
      enumerable: true,
      get: function() {
        return lodashUnified.castArray;
      }
    });
    Object.defineProperty(exports, "NOOP", {
      enumerable: true,
      get: function() {
        return shared.NOOP;
      }
    });
    Object.defineProperty(exports, "camelize", {
      enumerable: true,
      get: function() {
        return shared.camelize;
      }
    });
    Object.defineProperty(exports, "hasOwn", {
      enumerable: true,
      get: function() {
        return shared.hasOwn;
      }
    });
    Object.defineProperty(exports, "hyphenate", {
      enumerable: true,
      get: function() {
        return shared.hyphenate;
      }
    });
    Object.defineProperty(exports, "isArray", {
      enumerable: true,
      get: function() {
        return shared.isArray;
      }
    });
    Object.defineProperty(exports, "isDate", {
      enumerable: true,
      get: function() {
        return shared.isDate;
      }
    });
    Object.defineProperty(exports, "isFunction", {
      enumerable: true,
      get: function() {
        return shared.isFunction;
      }
    });
    Object.defineProperty(exports, "isObject", {
      enumerable: true,
      get: function() {
        return shared.isObject;
      }
    });
    Object.defineProperty(exports, "isPromise", {
      enumerable: true,
      get: function() {
        return shared.isPromise;
      }
    });
    Object.defineProperty(exports, "isString", {
      enumerable: true,
      get: function() {
        return shared.isString;
      }
    });
    Object.defineProperty(exports, "isSymbol", {
      enumerable: true,
      get: function() {
        return shared.isSymbol;
      }
    });
    Object.defineProperty(exports, "kebabCase", {
      enumerable: true,
      get: function() {
        return shared.hyphenate;
      }
    });
    Object.defineProperty(exports, "isBoolean", {
      enumerable: true,
      get: function() {
        return core.isBoolean;
      }
    });
    Object.defineProperty(exports, "isNumber", {
      enumerable: true,
      get: function() {
        return core.isNumber;
      }
    });
    Object.defineProperty(exports, "isVNode", {
      enumerable: true,
      get: function() {
        return vue.isVNode;
      }
    });
  }
});

export {
  require_vue,
  require_require,
  require_aria,
  require_core,
  require_types,
  require_objects,
  require_error,
  require_style,
  require_scroll,
  require_global_node,
  require_runtime,
  require_aria2,
  require_size,
  require_constants,
  require_rand,
  require_utils
};
/*! Element Plus Icons Vue v2.0.9 */
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
//# sourceMappingURL=chunk-MMJPAREY.js.map
